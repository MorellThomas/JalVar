<?xml version="1.0" encoding="UTF-8"?>
<testng-results total="1451" passed="1446" failed="5" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2023-07-02T08:11:14Z" name="Gradle suite" finished-at="2023-07-02T08:13:44Z" duration-ms="149405">
    <groups>
      <group name="Functional">
        <method signature="AAFrequencyTest.testCalculate_noProfile()[pri:0, instance:jalview.analysis.AAFrequencyTest@6e0ff644]" name="testCalculate_noProfile" class="jalview.analysis.AAFrequencyTest"/>
        <method signature="AAFrequencyTest.testCalculate_withProfile()[pri:0, instance:jalview.analysis.AAFrequencyTest@6e0ff644]" name="testCalculate_withProfile" class="jalview.analysis.AAFrequencyTest"/>
        <method signature="AAFrequencyTest.testCompleteConsensus_ignoreGaps_noLogo()[pri:0, instance:jalview.analysis.AAFrequencyTest@6e0ff644]" name="testCompleteConsensus_ignoreGaps_noLogo" class="jalview.analysis.AAFrequencyTest"/>
        <method signature="AAFrequencyTest.testCompleteConsensus_includeGaps_showLogo()[pri:0, instance:jalview.analysis.AAFrequencyTest@6e0ff644]" name="testCompleteConsensus_includeGaps_showLogo" class="jalview.analysis.AAFrequencyTest"/>
        <method signature="AAFrequencyTest.testExtractCdnaProfile()[pri:0, instance:jalview.analysis.AAFrequencyTest@6e0ff644]" name="testExtractCdnaProfile" class="jalview.analysis.AAFrequencyTest"/>
        <method signature="AAFrequencyTest.testExtractCdnaProfile_countGaps()[pri:0, instance:jalview.analysis.AAFrequencyTest@6e0ff644]" name="testExtractCdnaProfile_countGaps" class="jalview.analysis.AAFrequencyTest"/>
        <method signature="AAFrequencyTest.testExtractProfile()[pri:0, instance:jalview.analysis.AAFrequencyTest@6e0ff644]" name="testExtractProfile" class="jalview.analysis.AAFrequencyTest"/>
        <method signature="AAFrequencyTest.testExtractProfile_countGaps()[pri:0, instance:jalview.analysis.AAFrequencyTest@6e0ff644]" name="testExtractProfile_countGaps" class="jalview.analysis.AAFrequencyTest"/>
        <method signature="AAStructureBindingModelTest.testBuildColoursMap()[pri:0, instance:jalview.structures.models.AAStructureBindingModelTest@3d9fc57a]" name="testBuildColoursMap" class="jalview.structures.models.AAStructureBindingModelTest"/>
        <method signature="AAStructureBindingModelTest.testFindSuperposableResidues()[pri:0, instance:jalview.structures.models.AAStructureBindingModelTest@3d9fc57a]" name="testFindSuperposableResidues" class="jalview.structures.models.AAStructureBindingModelTest"/>
        <method signature="AAStructureBindingModelTest.testFindSuperposableResidues_hiddenColumn()[pri:0, instance:jalview.structures.models.AAStructureBindingModelTest@3d9fc57a]" name="testFindSuperposableResidues_hiddenColumn" class="jalview.structures.models.AAStructureBindingModelTest"/>
        <method signature="AAStructureBindingModelTest.testImportPDBPreservesChainMappings()[pri:0, instance:jalview.structures.models.AAStructureBindingModelTest@3d9fc57a]" name="testImportPDBPreservesChainMappings" class="jalview.structures.models.AAStructureBindingModelTest"/>
        <method signature="AlignCalcManagerTest.testRemoveWorkerForAnnotation()[pri:0, instance:jalview.workers.AlignCalcManagerTest@4c432866]" name="testRemoveWorkerForAnnotation" class="jalview.workers.AlignCalcManagerTest"/>
        <method signature="AlignFrameTest.testChangeColour_background_groupsAndThresholds()[pri:0, instance:jalview.gui.AlignFrameTest@f325091]" name="testChangeColour_background_groupsAndThresholds" class="jalview.gui.AlignFrameTest"/>
        <method signature="AlignFrameTest.testColourThresholdActions()[pri:0, instance:jalview.gui.AlignFrameTest@f325091]" name="testColourThresholdActions" class="jalview.gui.AlignFrameTest"/>
        <method signature="AlignFrameTest.testHideFeatureColumns()[pri:0, instance:jalview.gui.AlignFrameTest@f325091]" name="testHideFeatureColumns" class="jalview.gui.AlignFrameTest"/>
        <method signature="AlignFrameTest.testNewView_colourThresholds()[pri:0, instance:jalview.gui.AlignFrameTest@f325091]" name="testNewView_colourThresholds" class="jalview.gui.AlignFrameTest"/>
        <method signature="AlignFrameTest.testNewView_dsRefPreserved()[pri:0, instance:jalview.gui.AlignFrameTest@f325091]" name="testNewView_dsRefPreserved" class="jalview.gui.AlignFrameTest"/>
        <method signature="AlignSeqTest.testExtractGaps()[pri:0, instance:jalview.analysis.AlignSeqTest@68ed96ca]" name="testExtractGaps" class="jalview.analysis.AlignSeqTest"/>
        <method signature="AlignSeqTest.testIndexEncode_nucleotide()[pri:0, instance:jalview.analysis.AlignSeqTest@68ed96ca]" name="testIndexEncode_nucleotide" class="jalview.analysis.AlignSeqTest"/>
        <method signature="AlignSeqTest.testIndexEncode_peptide()[pri:0, instance:jalview.analysis.AlignSeqTest@68ed96ca]" name="testIndexEncode_peptide" class="jalview.analysis.AlignSeqTest"/>
        <method signature="AlignViewControllerTest.testFindColumnsWithFeature()[pri:0, instance:jalview.controller.AlignViewControllerTest@2c22a348]" name="testFindColumnsWithFeature" class="jalview.controller.AlignViewControllerTest"/>
        <method signature="AlignViewControllerTest.testSelectColumnsWithHighlight()[pri:0, instance:jalview.controller.AlignViewControllerTest@2c22a348]" name="testSelectColumnsWithHighlight" class="jalview.controller.AlignViewControllerTest"/>
        <method signature="AlignViewportTest.testDeregisterMapping_onCloseView()[pri:0, instance:jalview.gui.AlignViewportTest@437e951d]" name="testDeregisterMapping_onCloseView" class="jalview.gui.AlignViewportTest"/>
        <method signature="AlignViewportTest.testDeregisterMapping_withNoReference()[pri:0, instance:jalview.gui.AlignViewportTest@437e951d]" name="testDeregisterMapping_withNoReference" class="jalview.gui.AlignViewportTest"/>
        <method signature="AlignViewportTest.testDeregisterMapping_withReference()[pri:0, instance:jalview.gui.AlignViewportTest@437e951d]" name="testDeregisterMapping_withReference" class="jalview.gui.AlignViewportTest"/>
        <method signature="AlignViewportTest.testGetConsensusSeq()[pri:0, instance:jalview.gui.AlignViewportTest@437e951d]" name="testGetConsensusSeq" class="jalview.gui.AlignViewportTest"/>
        <method signature="AlignViewportTest.testHideRevealSequences()[pri:0, instance:jalview.gui.AlignViewportTest@437e951d]" name="testHideRevealSequences" class="jalview.gui.AlignViewportTest"/>
        <method signature="AlignViewportTest.testSetGetHasSearchResults()[pri:0, instance:jalview.gui.AlignViewportTest@437e951d]" name="testSetGetHasSearchResults" class="jalview.gui.AlignViewportTest"/>
        <method signature="AlignViewportTest.testSetGlobalColourScheme()[pri:0, instance:jalview.gui.AlignViewportTest@437e951d]" name="testSetGlobalColourScheme" class="jalview.gui.AlignViewportTest"/>
        <method signature="AlignViewportTest.testSetSelectionGroup()[pri:0, instance:jalview.gui.AlignViewportTest@437e951d]" name="testSetSelectionGroup" class="jalview.gui.AlignViewportTest"/>
        <method signature="AlignViewportTest.testShowOrDontShowOccupancy()[pri:0, instance:jalview.gui.AlignViewportTest@437e951d]" name="testShowOrDontShowOccupancy" class="jalview.gui.AlignViewportTest"/>
        <method signature="AlignViewportTest.testUpdateConservation_qualityOnly()[pri:0, instance:jalview.gui.AlignViewportTest@437e951d]" name="testUpdateConservation_qualityOnly" class="jalview.gui.AlignViewportTest"/>
        <method signature="AlignedCodonFrameTest.testAddMap()[pri:0, instance:jalview.datamodel.AlignedCodonFrameTest@7bd69e82]" name="testAddMap" class="jalview.datamodel.AlignedCodonFrameTest"/>
        <method signature="AlignedCodonFrameTest.testCouldReplaceSequence()[pri:0, instance:jalview.datamodel.AlignedCodonFrameTest@7bd69e82]" name="testCouldReplaceSequence" class="jalview.datamodel.AlignedCodonFrameTest"/>
        <method signature="AlignedCodonFrameTest.testFindAlignedSequence()[pri:0, instance:jalview.datamodel.AlignedCodonFrameTest@7bd69e82]" name="testFindAlignedSequence" class="jalview.datamodel.AlignedCodonFrameTest"/>
        <method signature="AlignedCodonFrameTest.testGetCoveringCodonMapping()[pri:0, instance:jalview.datamodel.AlignedCodonFrameTest@7bd69e82]" name="testGetCoveringCodonMapping" class="jalview.datamodel.AlignedCodonFrameTest"/>
        <method signature="AlignedCodonFrameTest.testGetCoveringMapping()[pri:0, instance:jalview.datamodel.AlignedCodonFrameTest@7bd69e82]" name="testGetCoveringMapping" class="jalview.datamodel.AlignedCodonFrameTest"/>
        <method signature="AlignedCodonFrameTest.testGetMappedCodons()[pri:0, instance:jalview.datamodel.AlignedCodonFrameTest@7bd69e82]" name="testGetMappedCodons" class="jalview.datamodel.AlignedCodonFrameTest"/>
        <method signature="AlignedCodonFrameTest.testGetMappedCodons_dnaVariants()[pri:0, instance:jalview.datamodel.AlignedCodonFrameTest@7bd69e82]" name="testGetMappedCodons_dnaVariants" class="jalview.datamodel.AlignedCodonFrameTest"/>
        <method signature="AlignedCodonFrameTest.testGetMappedCodons_forSubSequences()[pri:0, instance:jalview.datamodel.AlignedCodonFrameTest@7bd69e82]" name="testGetMappedCodons_forSubSequences" class="jalview.datamodel.AlignedCodonFrameTest"/>
        <method signature="AlignedCodonFrameTest.testGetMappedRegion()[pri:0, instance:jalview.datamodel.AlignedCodonFrameTest@7bd69e82]" name="testGetMappedRegion" class="jalview.datamodel.AlignedCodonFrameTest"/>
        <method signature="AlignedCodonFrameTest.testGetMappedRegion_eitherWay()[pri:0, instance:jalview.datamodel.AlignedCodonFrameTest@7bd69e82]" name="testGetMappedRegion_eitherWay" class="jalview.datamodel.AlignedCodonFrameTest"/>
        <method signature="AlignedCodonFrameTest.testIsRealisableWith()[pri:0, instance:jalview.datamodel.AlignedCodonFrameTest@7bd69e82]" name="testIsRealisableWith" class="jalview.datamodel.AlignedCodonFrameTest"/>
        <method signature="AlignedCodonFrameTest.testMarkMappedRegion()[pri:0, instance:jalview.datamodel.AlignedCodonFrameTest@7bd69e82]" name="testMarkMappedRegion" class="jalview.datamodel.AlignedCodonFrameTest"/>
        <method signature="AlignedCodonFrameTest.testRealiseWith()[pri:0, instance:jalview.datamodel.AlignedCodonFrameTest@7bd69e82]" name="testRealiseWith" class="jalview.datamodel.AlignedCodonFrameTest"/>
        <method signature="AlignedCodonIteratorTest.testAnother()[pri:0, instance:jalview.datamodel.AlignedCodonIteratorTest@74d7184a]" name="testAnother" class="jalview.datamodel.AlignedCodonIteratorTest"/>
        <method signature="AlignedCodonIteratorTest.testNext()[pri:0, instance:jalview.datamodel.AlignedCodonIteratorTest@74d7184a]" name="testNext" class="jalview.datamodel.AlignedCodonIteratorTest"/>
        <method signature="AlignedCodonIteratorTest.testNext_incompleteCodon()[pri:0, instance:jalview.datamodel.AlignedCodonIteratorTest@74d7184a]" name="testNext_incompleteCodon" class="jalview.datamodel.AlignedCodonIteratorTest"/>
        <method signature="AlignedCodonIteratorTest.testNext_unmappedPeptide()[pri:0, instance:jalview.datamodel.AlignedCodonIteratorTest@74d7184a]" name="testNext_unmappedPeptide" class="jalview.datamodel.AlignedCodonIteratorTest"/>
        <method signature="AlignedCodonIteratorTest.testNext_withOffset()[pri:0, instance:jalview.datamodel.AlignedCodonIteratorTest@74d7184a]" name="testNext_withOffset" class="jalview.datamodel.AlignedCodonIteratorTest"/>
        <method signature="AlignedCodonTest.testEquals()[pri:0, instance:jalview.datamodel.AlignedCodonTest@51b01960]" name="testEquals" class="jalview.datamodel.AlignedCodonTest"/>
        <method signature="AlignedCodonTest.testToString()[pri:0, instance:jalview.datamodel.AlignedCodonTest@51b01960]" name="testToString" class="jalview.datamodel.AlignedCodonTest"/>
        <method signature="AlignmentAnnotationTests.testAdjustForAlignment()[pri:0, instance:jalview.datamodel.AlignmentAnnotationTests@6831d8fd]" name="testAdjustForAlignment" class="jalview.datamodel.AlignmentAnnotationTests"/>
        <method signature="AlignmentAnnotationTests.testCopyConstructor()[pri:0, instance:jalview.datamodel.AlignmentAnnotationTests@6831d8fd]" name="testCopyConstructor" class="jalview.datamodel.AlignmentAnnotationTests"/>
        <method signature="AlignmentAnnotationTests.testGetDefaultRnaHelixSymbol()[pri:0, instance:jalview.datamodel.AlignmentAnnotationTests@6831d8fd]" name="testGetDefaultRnaHelixSymbol" class="jalview.datamodel.AlignmentAnnotationTests"/>
        <method signature="AlignmentAnnotationTests.testIsQuantitative()[pri:0, instance:jalview.datamodel.AlignmentAnnotationTests@6831d8fd]" name="testIsQuantitative" class="jalview.datamodel.AlignmentAnnotationTests"/>
        <method signature="AlignmentAnnotationTests.testLiftOver()[pri:0, instance:jalview.datamodel.AlignmentAnnotationTests@6831d8fd]" name="testLiftOver" class="jalview.datamodel.AlignmentAnnotationTests"/>
        <method signature="AlignmentAnnotationTests.testMakeVisibleAnnotation()[pri:0, instance:jalview.datamodel.AlignmentAnnotationTests@6831d8fd]" name="testMakeVisibleAnnotation" class="jalview.datamodel.AlignmentAnnotationTests"/>
        <method signature="AlignmentAnnotationUtilsTest.testAsList()[pri:0, instance:jalview.analysis.AlignmentAnnotationUtilsTest@6d1310f6]" name="testAsList" class="jalview.analysis.AlignmentAnnotationUtilsTest"/>
        <method signature="AlignmentAnnotationUtilsTest.testGetShownHiddenTypes_forSelectionGroup()[pri:0, instance:jalview.analysis.AlignmentAnnotationUtilsTest@6d1310f6]" name="testGetShownHiddenTypes_forSelectionGroup" class="jalview.analysis.AlignmentAnnotationUtilsTest"/>
        <method signature="AlignmentAnnotationUtilsTest.testGetShownHiddenTypes_noSequenceSelected()[pri:0, instance:jalview.analysis.AlignmentAnnotationUtilsTest@6d1310f6]" name="testGetShownHiddenTypes_noSequenceSelected" class="jalview.analysis.AlignmentAnnotationUtilsTest"/>
        <method signature="AlignmentAnnotationUtilsTest.testGetShownHiddenTypes_withGraphGroups()[pri:0, instance:jalview.analysis.AlignmentAnnotationUtilsTest@6d1310f6]" name="testGetShownHiddenTypes_withGraphGroups" class="jalview.analysis.AlignmentAnnotationUtilsTest"/>
        <method signature="AlignmentAnnotationUtilsTest.testGetVisibleGraphGroups()[pri:0, instance:jalview.analysis.AlignmentAnnotationUtilsTest@6d1310f6]" name="testGetVisibleGraphGroups" class="jalview.analysis.AlignmentAnnotationUtilsTest"/>
        <method signature="AlignmentPanelTest.testCalculateIdWidth_noArgs()[pri:0, instance:jalview.gui.AlignmentPanelTest@77b325b3]" name="testCalculateIdWidth_noArgs" class="jalview.gui.AlignmentPanelTest"/>
        <method signature="AlignmentPanelTest.testCalculateIdWidth_withMaxWidth()[pri:0, instance:jalview.gui.AlignmentPanelTest@77b325b3]" name="testCalculateIdWidth_withMaxWidth" class="jalview.gui.AlignmentPanelTest"/>
        <method signature="AlignmentPanelTest.testGetVisibleWidth()[pri:0, instance:jalview.gui.AlignmentPanelTest@77b325b3]" name="testGetVisibleWidth" class="jalview.gui.AlignmentPanelTest"/>
        <method signature="AlignmentPanelTest.testSetScrollValues()[pri:0, instance:jalview.gui.AlignmentPanelTest@77b325b3]" name="testSetScrollValues" class="jalview.gui.AlignmentPanelTest"/>
        <method signature="AlignmentPanelTest.testUpdateLayout_endRes()[pri:0, instance:jalview.gui.AlignmentPanelTest@77b325b3]" name="testUpdateLayout_endRes" class="jalview.gui.AlignmentPanelTest"/>
        <method signature="AlignmentSorterTest.testSortByFeature_density()[pri:0, instance:jalview.analysis.AlignmentSorterTest@3228d990]" name="testSortByFeature_density" class="jalview.analysis.AlignmentSorterTest"/>
        <method signature="AlignmentSorterTest.testSortByFeature_score()[pri:0, instance:jalview.analysis.AlignmentSorterTest@3228d990]" name="testSortByFeature_score" class="jalview.analysis.AlignmentSorterTest"/>
        <method signature="AlignmentTest.testAddCodonFrame()[pri:0, instance:jalview.datamodel.AlignmentTest@27dc79f7]" name="testAddCodonFrame" class="jalview.datamodel.AlignmentTest"/>
        <method signature="AlignmentTest.testAddSequencePreserveDatasetIntegrity()[pri:0, instance:jalview.datamodel.AlignmentTest@27dc79f7]" name="testAddSequencePreserveDatasetIntegrity" class="jalview.datamodel.AlignmentTest"/>
        <method signature="AlignmentTest.testAlignAs_cdnaAsProtein()[pri:0, instance:jalview.datamodel.AlignmentTest@27dc79f7]" name="testAlignAs_cdnaAsProtein" class="jalview.datamodel.AlignmentTest"/>
        <method signature="AlignmentTest.testAlignAs_cdnaAsProtein_singleSequence()[pri:0, instance:jalview.datamodel.AlignmentTest@27dc79f7]" name="testAlignAs_cdnaAsProtein_singleSequence" class="jalview.datamodel.AlignmentTest"/>
        <method signature="AlignmentTest.testAlignAs_dnaAsDna()[pri:0, instance:jalview.datamodel.AlignmentTest@27dc79f7]" name="testAlignAs_dnaAsDna" class="jalview.datamodel.AlignmentTest"/>
        <method signature="AlignmentTest.testAlignAs_proteinAsCdna()[pri:0, instance:jalview.datamodel.AlignmentTest@27dc79f7]" name="testAlignAs_proteinAsCdna" class="jalview.datamodel.AlignmentTest"/>
        <method signature="AlignmentTest.testAppend()[pri:0, instance:jalview.datamodel.AlignmentTest@27dc79f7]" name="testAppend" class="jalview.datamodel.AlignmentTest"/>
        <method signature="AlignmentTest.testAssertDatasetIsNormalised()[pri:0, instance:jalview.datamodel.AlignmentTest@27dc79f7]" name="testAssertDatasetIsNormalised" class="jalview.datamodel.AlignmentTest"/>
        <method signature="AlignmentTest.testCopyConstructor()[pri:0, instance:jalview.datamodel.AlignmentTest@27dc79f7]" name="testCopyConstructor" class="jalview.datamodel.AlignmentTest"/>
        <method signature="AlignmentTest.testCreateDatasetAlignment()[pri:0, instance:jalview.datamodel.AlignmentTest@27dc79f7]" name="testCreateDatasetAlignment" class="jalview.datamodel.AlignmentTest"/>
        <method signature="AlignmentTest.testCreateDatasetAlignmentWithMappedToSeqs()[pri:0, instance:jalview.datamodel.AlignmentTest@27dc79f7]" name="testCreateDatasetAlignmentWithMappedToSeqs" class="jalview.datamodel.AlignmentTest"/>
        <method signature="AlignmentTest.testCreateDataset_updateDbrefMappings()[pri:0, instance:jalview.datamodel.AlignmentTest@27dc79f7]" name="testCreateDataset_updateDbrefMappings" class="jalview.datamodel.AlignmentTest"/>
        <method signature="AlignmentTest.testDeleteAllAnnotations_excludingAutocalculated()[pri:0, instance:jalview.datamodel.AlignmentTest@27dc79f7]" name="testDeleteAllAnnotations_excludingAutocalculated" class="jalview.datamodel.AlignmentTest"/>
        <method signature="AlignmentTest.testDeleteAllAnnotations_includingAutocalculated()[pri:0, instance:jalview.datamodel.AlignmentTest@27dc79f7]" name="testDeleteAllAnnotations_includingAutocalculated" class="jalview.datamodel.AlignmentTest"/>
        <method signature="AlignmentTest.testDeleteHiddenSequence()[pri:0, instance:jalview.datamodel.AlignmentTest@27dc79f7]" name="testDeleteHiddenSequence" class="jalview.datamodel.AlignmentTest"/>
        <method signature="AlignmentTest.testDeleteSequenceByIndex()[pri:0, instance:jalview.datamodel.AlignmentTest@27dc79f7]" name="testDeleteSequenceByIndex" class="jalview.datamodel.AlignmentTest"/>
        <method signature="AlignmentTest.testDeleteSequenceBySeq()[pri:0, instance:jalview.datamodel.AlignmentTest@27dc79f7]" name="testDeleteSequenceBySeq" class="jalview.datamodel.AlignmentTest"/>
        <method signature="AlignmentTest.testFindAnnotation_byCalcId()[pri:0, instance:jalview.datamodel.AlignmentTest@27dc79f7]" name="testFindAnnotation_byCalcId" class="jalview.datamodel.AlignmentTest"/>
        <method signature="AlignmentTest.testFindAnnotations_bySeqLabelandorCalcId()[pri:0, instance:jalview.datamodel.AlignmentTest@27dc79f7]" name="testFindAnnotations_bySeqLabelandorCalcId" class="jalview.datamodel.AlignmentTest"/>
        <method signature="AlignmentTest.testFindGroup()[pri:0, instance:jalview.datamodel.AlignmentTest@27dc79f7]" name="testFindGroup" class="jalview.datamodel.AlignmentTest"/>
        <method signature="AlignmentTest.testFindOrCreateForNullCalcId()[pri:0, instance:jalview.datamodel.AlignmentTest@27dc79f7]" name="testFindOrCreateForNullCalcId" class="jalview.datamodel.AlignmentTest"/>
        <method signature="AlignmentTest.testGetVisibleWidth()[pri:0, instance:jalview.datamodel.AlignmentTest@27dc79f7]" name="testGetVisibleWidth" class="jalview.datamodel.AlignmentTest"/>
        <method signature="AlignmentTest.testGetWidth()[pri:0, instance:jalview.datamodel.AlignmentTest@27dc79f7]" name="testGetWidth" class="jalview.datamodel.AlignmentTest"/>
        <method signature="AlignmentTest.testPadGaps()[pri:0, instance:jalview.datamodel.AlignmentTest@27dc79f7]" name="testPadGaps" class="jalview.datamodel.AlignmentTest"/>
        <method signature="AlignmentTest.testPropagateInsertions()[pri:0, instance:jalview.datamodel.AlignmentTest@27dc79f7]" name="testPropagateInsertions" class="jalview.datamodel.AlignmentTest"/>
        <method signature="AlignmentTest.testPropagateInsertionsOverlap()[pri:0, instance:jalview.datamodel.AlignmentTest@27dc79f7]" name="testPropagateInsertionsOverlap" class="jalview.datamodel.AlignmentTest"/>
        <method signature="AlignmentTest.testSetDataset_selfReference()[pri:0, instance:jalview.datamodel.AlignmentTest@27dc79f7]" name="testSetDataset_selfReference" class="jalview.datamodel.AlignmentTest"/>
        <method signature="AlignmentTest.testSetHiddenColumns()[pri:0, instance:jalview.datamodel.AlignmentTest@27dc79f7]" name="testSetHiddenColumns" class="jalview.datamodel.AlignmentTest"/>
        <method signature="AlignmentTest.testVerifyAlignmentDatasetRefs()[pri:0, instance:jalview.datamodel.AlignmentTest@27dc79f7]" name="testVerifyAlignmentDatasetRefs" class="jalview.datamodel.AlignmentTest"/>
        <method signature="AlignmentUtilsTests.testAddMappedPositions()[pri:0, instance:jalview.analysis.AlignmentUtilsTests@54e7391d]" name="testAddMappedPositions" class="jalview.analysis.AlignmentUtilsTests"/>
        <method signature="AlignmentUtilsTests.testAddMappedPositions_withStopCodon()[pri:0, instance:jalview.analysis.AlignmentUtilsTests@54e7391d]" name="testAddMappedPositions_withStopCodon" class="jalview.analysis.AlignmentUtilsTests"/>
        <method signature="AlignmentUtilsTests.testAlignAsSameSequences()[pri:0, instance:jalview.analysis.AlignmentUtilsTests@54e7391d]" name="testAlignAsSameSequences" class="jalview.analysis.AlignmentUtilsTests"/>
        <method signature="AlignmentUtilsTests.testAlignAsSameSequencesMultipleSubSeq()[pri:0, instance:jalview.analysis.AlignmentUtilsTests@54e7391d]" name="testAlignAsSameSequencesMultipleSubSeq" class="jalview.analysis.AlignmentUtilsTests"/>
        <method signature="AlignmentUtilsTests.testAlignAs_alternateTranscriptsUngapped()[pri:0, instance:jalview.analysis.AlignmentUtilsTests@54e7391d]" name="testAlignAs_alternateTranscriptsUngapped" class="jalview.analysis.AlignmentUtilsTests"/>
        <method signature="AlignmentUtilsTests.testAlignProteinAsDna()[pri:0, instance:jalview.analysis.AlignmentUtilsTests@54e7391d]" name="testAlignProteinAsDna" class="jalview.analysis.AlignmentUtilsTests"/>
        <method signature="AlignmentUtilsTests.testAlignProteinAsDna_incompleteStartCodon()[pri:0, instance:jalview.analysis.AlignmentUtilsTests@54e7391d]" name="testAlignProteinAsDna_incompleteStartCodon" class="jalview.analysis.AlignmentUtilsTests"/>
        <method signature="AlignmentUtilsTests.testAlignSequenceAs_keepIntronGapsOnly()[pri:0, instance:jalview.analysis.AlignmentUtilsTests@54e7391d]" name="testAlignSequenceAs_keepIntronGapsOnly" class="jalview.analysis.AlignmentUtilsTests"/>
        <method signature="AlignmentUtilsTests.testAlignSequenceAs_mappedProteinProtein()[pri:0, instance:jalview.analysis.AlignmentUtilsTests@54e7391d]" name="testAlignSequenceAs_mappedProteinProtein" class="jalview.analysis.AlignmentUtilsTests"/>
        <method signature="AlignmentUtilsTests.testAlignSequenceAs_withMapping_noIntrons()[pri:0, instance:jalview.analysis.AlignmentUtilsTests@54e7391d]" name="testAlignSequenceAs_withMapping_noIntrons" class="jalview.analysis.AlignmentUtilsTests"/>
        <method signature="AlignmentUtilsTests.testAlignSequenceAs_withMapping_withIntrons()[pri:0, instance:jalview.analysis.AlignmentUtilsTests@54e7391d]" name="testAlignSequenceAs_withMapping_withIntrons" class="jalview.analysis.AlignmentUtilsTests"/>
        <method signature="AlignmentUtilsTests.testAlignSequenceAs_withMapping_withUnmappedProtein()[pri:0, instance:jalview.analysis.AlignmentUtilsTests@54e7391d]" name="testAlignSequenceAs_withMapping_withUnmappedProtein" class="jalview.analysis.AlignmentUtilsTests"/>
        <method signature="AlignmentUtilsTests.testAlignSequenceAs_withTrailingPeptide()[pri:0, instance:jalview.analysis.AlignmentUtilsTests@54e7391d]" name="testAlignSequenceAs_withTrailingPeptide" class="jalview.analysis.AlignmentUtilsTests"/>
        <method signature="AlignmentUtilsTests.testExpandContext()[pri:0, instance:jalview.analysis.AlignmentUtilsTests@54e7391d]" name="testExpandContext" class="jalview.analysis.AlignmentUtilsTests"/>
        <method signature="AlignmentUtilsTests.testExpandContext_annotation()[pri:0, instance:jalview.analysis.AlignmentUtilsTests@54e7391d]" name="testExpandContext_annotation" class="jalview.analysis.AlignmentUtilsTests"/>
        <method signature="AlignmentUtilsTests.testFindCdsPositions()[pri:0, instance:jalview.analysis.AlignmentUtilsTests@54e7391d]" name="testFindCdsPositions" class="jalview.analysis.AlignmentUtilsTests"/>
        <method signature="AlignmentUtilsTests.testFindCdsPositions_fivePrimeIncomplete()[pri:0, instance:jalview.analysis.AlignmentUtilsTests@54e7391d]" name="testFindCdsPositions_fivePrimeIncomplete" class="jalview.analysis.AlignmentUtilsTests"/>
        <method signature="AlignmentUtilsTests.testGetSequencesByName()[pri:0, instance:jalview.analysis.AlignmentUtilsTests@54e7391d]" name="testGetSequencesByName" class="jalview.analysis.AlignmentUtilsTests"/>
        <method signature="AlignmentUtilsTests.testHasCrossRef()[pri:0, instance:jalview.analysis.AlignmentUtilsTests@54e7391d]" name="testHasCrossRef" class="jalview.analysis.AlignmentUtilsTests"/>
        <method signature="AlignmentUtilsTests.testHaveCrossRef()[pri:0, instance:jalview.analysis.AlignmentUtilsTests@54e7391d]" name="testHaveCrossRef" class="jalview.analysis.AlignmentUtilsTests"/>
        <method signature="AlignmentUtilsTests.testIsMappable()[pri:0, instance:jalview.analysis.AlignmentUtilsTests@54e7391d]" name="testIsMappable" class="jalview.analysis.AlignmentUtilsTests"/>
        <method signature="AlignmentUtilsTests.testMakeCdsAlignment()[pri:0, instance:jalview.analysis.AlignmentUtilsTests@54e7391d]" name="testMakeCdsAlignment" class="jalview.analysis.AlignmentUtilsTests"/>
        <method signature="AlignmentUtilsTests.testMakeCdsAlignment_alternativeTranscripts()[pri:0, instance:jalview.analysis.AlignmentUtilsTests@54e7391d]" name="testMakeCdsAlignment_alternativeTranscripts" class="jalview.analysis.AlignmentUtilsTests"/>
        <method signature="AlignmentUtilsTests.testMakeCdsAlignment_filterProducts()[pri:0, instance:jalview.analysis.AlignmentUtilsTests@54e7391d]" name="testMakeCdsAlignment_filterProducts" class="jalview.analysis.AlignmentUtilsTests"/>
        <method signature="AlignmentUtilsTests.testMakeCdsAlignment_multipleProteins()[pri:0, instance:jalview.analysis.AlignmentUtilsTests@54e7391d]" name="testMakeCdsAlignment_multipleProteins" class="jalview.analysis.AlignmentUtilsTests"/>
        <method signature="AlignmentUtilsTests.testMapCdnaToProtein_forSubsequence()[pri:0, instance:jalview.analysis.AlignmentUtilsTests@54e7391d]" name="testMapCdnaToProtein_forSubsequence" class="jalview.analysis.AlignmentUtilsTests"/>
        <method signature="AlignmentUtilsTests.testMapCdsToProtein()[pri:0, instance:jalview.analysis.AlignmentUtilsTests@54e7391d]" name="testMapCdsToProtein" class="jalview.analysis.AlignmentUtilsTests"/>
        <method signature="AlignmentUtilsTests.testMapProteinAlignmentToCdna_noXrefs()[pri:0, instance:jalview.analysis.AlignmentUtilsTests@54e7391d]" name="testMapProteinAlignmentToCdna_noXrefs" class="jalview.analysis.AlignmentUtilsTests"/>
        <method signature="AlignmentUtilsTests.testMapProteinAlignmentToCdna_prioritiseXrefs()[pri:0, instance:jalview.analysis.AlignmentUtilsTests@54e7391d]" name="testMapProteinAlignmentToCdna_prioritiseXrefs" class="jalview.analysis.AlignmentUtilsTests"/>
        <method signature="AlignmentUtilsTests.testMapProteinAlignmentToCdna_withStartAndStopCodons()[pri:0, instance:jalview.analysis.AlignmentUtilsTests@54e7391d]" name="testMapProteinAlignmentToCdna_withStartAndStopCodons" class="jalview.analysis.AlignmentUtilsTests"/>
        <method signature="AlignmentUtilsTests.testMapProteinAlignmentToCdna_withXrefs()[pri:0, instance:jalview.analysis.AlignmentUtilsTests@54e7391d]" name="testMapProteinAlignmentToCdna_withXrefs" class="jalview.analysis.AlignmentUtilsTests"/>
        <method signature="AlignmentUtilsTests.testShowOrHideSequenceAnnotations()[pri:0, instance:jalview.analysis.AlignmentUtilsTests@54e7391d]" name="testShowOrHideSequenceAnnotations" class="jalview.analysis.AlignmentUtilsTests"/>
        <method signature="AlignmentUtilsTests.testTransferFeatures()[pri:0, instance:jalview.analysis.AlignmentUtilsTests@54e7391d]" name="testTransferFeatures" class="jalview.analysis.AlignmentUtilsTests"/>
        <method signature="AlignmentUtilsTests.testTransferFeatures_withOmit()[pri:0, instance:jalview.analysis.AlignmentUtilsTests@54e7391d]" name="testTransferFeatures_withOmit" class="jalview.analysis.AlignmentUtilsTests"/>
        <method signature="AlignmentUtilsTests.testTransferFeatures_withSelect()[pri:0, instance:jalview.analysis.AlignmentUtilsTests@54e7391d]" name="testTransferFeatures_withSelect" class="jalview.analysis.AlignmentUtilsTests"/>
        <method signature="AlignmentUtilsTests.testTransferGeneLoci()[pri:0, instance:jalview.analysis.AlignmentUtilsTests@54e7391d]" name="testTransferGeneLoci" class="jalview.analysis.AlignmentUtilsTests"/>
        <method signature="AlignmentUtilsTests.testTranslatesAs()[pri:0, instance:jalview.analysis.AlignmentUtilsTests@54e7391d]" name="testTranslatesAs" class="jalview.analysis.AlignmentUtilsTests"/>
        <method signature="AlignmentViewTest.testGetVisibleAlignmentGapChar()[pri:0, instance:jalview.datamodel.AlignmentViewTest@6b85300e]" name="testGetVisibleAlignmentGapChar" class="jalview.datamodel.AlignmentViewTest"/>
        <method signature="AlignmentViewTest.testGetVisibleContigs()[pri:0, instance:jalview.datamodel.AlignmentViewTest@6b85300e]" name="testGetVisibleContigs" class="jalview.datamodel.AlignmentViewTest"/>
        <method signature="AllColsIteratorTest.testHasNextAndNext()[pri:0, instance:jalview.datamodel.AllColsIteratorTest@5cbf9e9f]" name="testHasNextAndNext" class="jalview.datamodel.AllColsIteratorTest"/>
        <method signature="AllColsIteratorTest.testLastNext()[pri:0, instance:jalview.datamodel.AllColsIteratorTest@5cbf9e9f]" name="testLastNext" class="jalview.datamodel.AllColsIteratorTest"/>
        <method signature="AllColsIteratorTest.testOneElement()[pri:0, instance:jalview.datamodel.AllColsIteratorTest@5cbf9e9f]" name="testOneElement" class="jalview.datamodel.AllColsIteratorTest"/>
        <method signature="AllColsIteratorTest.testRemove()[pri:0, instance:jalview.datamodel.AllColsIteratorTest@5cbf9e9f]" name="testRemove" class="jalview.datamodel.AllColsIteratorTest"/>
        <method signature="AllRowsIteratorTest.testHasNextAndNext()[pri:0, instance:jalview.datamodel.AllRowsIteratorTest@18e8473e]" name="testHasNextAndNext" class="jalview.datamodel.AllRowsIteratorTest"/>
        <method signature="AllRowsIteratorTest.testLastNext()[pri:0, instance:jalview.datamodel.AllRowsIteratorTest@18e8473e]" name="testLastNext" class="jalview.datamodel.AllRowsIteratorTest"/>
        <method signature="AllRowsIteratorTest.testOneElement()[pri:0, instance:jalview.datamodel.AllRowsIteratorTest@18e8473e]" name="testOneElement" class="jalview.datamodel.AllRowsIteratorTest"/>
        <method signature="AllRowsIteratorTest.testRemove()[pri:0, instance:jalview.datamodel.AllRowsIteratorTest@18e8473e]" name="testRemove" class="jalview.datamodel.AllRowsIteratorTest"/>
        <method signature="AnnotatedPDBFileInputTest.checkAnnotationWiring()[pri:0, instance:jalview.io.AnnotatedPDBFileInputTest@64b31700]" name="checkAnnotationWiring" class="jalview.io.AnnotatedPDBFileInputTest"/>
        <method signature="AnnotatedPDBFileInputTest.checkNoDuplicates()[pri:0, instance:jalview.io.AnnotatedPDBFileInputTest@64b31700]" name="checkNoDuplicates" class="jalview.io.AnnotatedPDBFileInputTest"/>
        <method signature="AnnotatedPDBFileInputTest.checkPDBSequenceFeatures()[pri:0, instance:jalview.io.AnnotatedPDBFileInputTest@64b31700]" name="checkPDBSequenceFeatures" class="jalview.io.AnnotatedPDBFileInputTest"/>
        <method signature="AnnotatedPDBFileInputTest.testJalviewProjectRelocationAnnotation()[pri:0, instance:jalview.io.AnnotatedPDBFileInputTest@64b31700]" name="testJalviewProjectRelocationAnnotation" class="jalview.io.AnnotatedPDBFileInputTest"/>
        <method signature="AnnotationChooserTest.testBuildActionButtonsPanel()[pri:0, instance:jalview.gui.AnnotationChooserTest@63a5e46c]" name="testBuildActionButtonsPanel" class="jalview.gui.AnnotationChooserTest"/>
        <method signature="AnnotationChooserTest.testBuildApplyToOptionsPanel_noSelectionGroup()[pri:0, instance:jalview.gui.AnnotationChooserTest@63a5e46c]" name="testBuildApplyToOptionsPanel_noSelectionGroup" class="jalview.gui.AnnotationChooserTest"/>
        <method signature="AnnotationChooserTest.testBuildApplyToOptionsPanel_withSelectionGroup()[pri:0, instance:jalview.gui.AnnotationChooserTest@63a5e46c]" name="testBuildApplyToOptionsPanel_withSelectionGroup" class="jalview.gui.AnnotationChooserTest"/>
        <method signature="AnnotationChooserTest.testBuildShowHideOptionsPanel()[pri:0, instance:jalview.gui.AnnotationChooserTest@63a5e46c]" name="testBuildShowHideOptionsPanel" class="jalview.gui.AnnotationChooserTest"/>
        <method signature="AnnotationChooserTest.testBuildShowHidePanel()[pri:0, instance:jalview.gui.AnnotationChooserTest@63a5e46c]" name="testBuildShowHidePanel" class="jalview.gui.AnnotationChooserTest"/>
        <method signature="AnnotationChooserTest.testDeselectType_hideForAll()[pri:0, instance:jalview.gui.AnnotationChooserTest@63a5e46c]" name="testDeselectType_hideForAll" class="jalview.gui.AnnotationChooserTest"/>
        <method signature="AnnotationChooserTest.testDeselectType_hideForSelected()[pri:0, instance:jalview.gui.AnnotationChooserTest@63a5e46c]" name="testDeselectType_hideForSelected" class="jalview.gui.AnnotationChooserTest"/>
        <method signature="AnnotationChooserTest.testDeselectType_showForAll()[pri:0, instance:jalview.gui.AnnotationChooserTest@63a5e46c]" name="testDeselectType_showForAll" class="jalview.gui.AnnotationChooserTest"/>
        <method signature="AnnotationChooserTest.testDeselectType_showForSelected()[pri:0, instance:jalview.gui.AnnotationChooserTest@63a5e46c]" name="testDeselectType_showForSelected" class="jalview.gui.AnnotationChooserTest"/>
        <method signature="AnnotationChooserTest.testGetAnnotationTypes()[pri:0, instance:jalview.gui.AnnotationChooserTest@63a5e46c]" name="testGetAnnotationTypes" class="jalview.gui.AnnotationChooserTest"/>
        <method signature="AnnotationChooserTest.testIsInActionScope_selectedScope()[pri:0, instance:jalview.gui.AnnotationChooserTest@63a5e46c]" name="testIsInActionScope_selectedScope" class="jalview.gui.AnnotationChooserTest"/>
        <method signature="AnnotationChooserTest.testIsInActionScope_unselectedScope()[pri:0, instance:jalview.gui.AnnotationChooserTest@63a5e46c]" name="testIsInActionScope_unselectedScope" class="jalview.gui.AnnotationChooserTest"/>
        <method signature="AnnotationChooserTest.testResetOriginalState()[pri:0, instance:jalview.gui.AnnotationChooserTest@63a5e46c]" name="testResetOriginalState" class="jalview.gui.AnnotationChooserTest"/>
        <method signature="AnnotationChooserTest.testSelectType_hideForAll()[pri:0, instance:jalview.gui.AnnotationChooserTest@63a5e46c]" name="testSelectType_hideForAll" class="jalview.gui.AnnotationChooserTest"/>
        <method signature="AnnotationChooserTest.testSelectType_hideForSelected()[pri:0, instance:jalview.gui.AnnotationChooserTest@63a5e46c]" name="testSelectType_hideForSelected" class="jalview.gui.AnnotationChooserTest"/>
        <method signature="AnnotationChooserTest.testSelectType_showForAll()[pri:0, instance:jalview.gui.AnnotationChooserTest@63a5e46c]" name="testSelectType_showForAll" class="jalview.gui.AnnotationChooserTest"/>
        <method signature="AnnotationChooserTest.testSelectType_showForSelected()[pri:0, instance:jalview.gui.AnnotationChooserTest@63a5e46c]" name="testSelectType_showForSelected" class="jalview.gui.AnnotationChooserTest"/>
        <method signature="AnnotationColourGradientTest.testFindColour_aboveThreshold()[pri:0, instance:jalview.schemes.AnnotationColourGradientTest@3b718392]" name="testFindColour_aboveThreshold" class="jalview.schemes.AnnotationColourGradientTest"/>
        <method signature="AnnotationColourGradientTest.testFindColour_belowThreshold()[pri:0, instance:jalview.schemes.AnnotationColourGradientTest@3b718392]" name="testFindColour_belowThreshold" class="jalview.schemes.AnnotationColourGradientTest"/>
        <method signature="AnnotationColourGradientTest.testFindColour_noThreshold()[pri:0, instance:jalview.schemes.AnnotationColourGradientTest@3b718392]" name="testFindColour_noThreshold" class="jalview.schemes.AnnotationColourGradientTest"/>
        <method signature="AnnotationColourGradientTest.testFindColour_originalColours()[pri:0, instance:jalview.schemes.AnnotationColourGradientTest@3b718392]" name="testFindColour_originalColours" class="jalview.schemes.AnnotationColourGradientTest"/>
        <method signature="AnnotationColourGradientTest.testShadeCalculation_aboveThreshold()[pri:0, instance:jalview.schemes.AnnotationColourGradientTest@3b718392]" name="testShadeCalculation_aboveThreshold" class="jalview.schemes.AnnotationColourGradientTest"/>
        <method signature="AnnotationColourGradientTest.testShadeCalculation_belowThreshold()[pri:0, instance:jalview.schemes.AnnotationColourGradientTest@3b718392]" name="testShadeCalculation_belowThreshold" class="jalview.schemes.AnnotationColourGradientTest"/>
        <method signature="AnnotationColourGradientTest.testShadeCalculation_noThreshold()[pri:0, instance:jalview.schemes.AnnotationColourGradientTest@3b718392]" name="testShadeCalculation_noThreshold" class="jalview.schemes.AnnotationColourGradientTest"/>
        <method signature="AnnotationColumnChooserTest.testReset()[pri:0, instance:jalview.gui.AnnotationColumnChooserTest@7e8e8651]" name="testReset" class="jalview.gui.AnnotationColumnChooserTest"/>
        <method signature="AnnotationFileIOTest.exampleAnnotationFileIO()[pri:0, instance:jalview.io.AnnotationFileIOTest@3b65e559]" name="exampleAnnotationFileIO" class="jalview.io.AnnotationFileIOTest"/>
        <method signature="AnnotationFileIOTest.testAnnotateAlignmentView()[pri:0, instance:jalview.io.AnnotationFileIOTest@3b65e559]" name="testAnnotateAlignmentView" class="jalview.io.AnnotationFileIOTest"/>
        <method signature="AnnotationLabelsTest.testGetStatusMessage()[pri:0, instance:jalview.gui.AnnotationLabelsTest@49ef32e0]" name="testGetStatusMessage" class="jalview.gui.AnnotationLabelsTest"/>
        <method signature="AnnotationLabelsTest.testGetTooltip()[pri:0, instance:jalview.gui.AnnotationLabelsTest@49ef32e0]" name="testGetTooltip" class="jalview.gui.AnnotationLabelsTest"/>
        <method signature="AnnotationPanelTest.testGetRowIndex()[pri:0, instance:jalview.gui.AnnotationPanelTest@271f18d3]" name="testGetRowIndex" class="jalview.gui.AnnotationPanelTest"/>
        <method signature="AnnotationRowFilterTest.testGetAnnotationItems()[pri:0, instance:jalview.gui.AnnotationRowFilterTest@6bd51ed8]" name="testGetAnnotationItems" class="jalview.gui.AnnotationRowFilterTest"/>
        <method signature="AnnotationSorterTest.testNoSort_autocalcFirst()[pri:0, instance:jalview.analysis.AnnotationSorterTest@50b8ae8d]" name="testNoSort_autocalcFirst" class="jalview.analysis.AnnotationSorterTest"/>
        <method signature="AnnotationSorterTest.testSortBySequenceAndType_autocalcFirst()[pri:0, instance:jalview.analysis.AnnotationSorterTest@50b8ae8d]" name="testSortBySequenceAndType_autocalcFirst" class="jalview.analysis.AnnotationSorterTest"/>
        <method signature="AnnotationSorterTest.testSortBySequenceAndType_autocalcLast()[pri:0, instance:jalview.analysis.AnnotationSorterTest@50b8ae8d]" name="testSortBySequenceAndType_autocalcLast" class="jalview.analysis.AnnotationSorterTest"/>
        <method signature="AnnotationSorterTest.testSortByTypeAndSequence_autocalcFirst()[pri:0, instance:jalview.analysis.AnnotationSorterTest@50b8ae8d]" name="testSortByTypeAndSequence_autocalcFirst" class="jalview.analysis.AnnotationSorterTest"/>
        <method signature="AnnotationSorterTest.testSortByTypeAndSequence_autocalcLast()[pri:0, instance:jalview.analysis.AnnotationSorterTest@50b8ae8d]" name="testSortByTypeAndSequence_autocalcLast" class="jalview.analysis.AnnotationSorterTest"/>
        <method signature="AnnotationSorterTest.testSort_timingPresorted()[pri:0, instance:jalview.analysis.AnnotationSorterTest@50b8ae8d]" name="testSort_timingPresorted" class="jalview.analysis.AnnotationSorterTest"/>
        <method signature="AnnotationSorterTest.testSort_timingSemisorted()[pri:0, instance:jalview.analysis.AnnotationSorterTest@50b8ae8d]" name="testSort_timingSemisorted" class="jalview.analysis.AnnotationSorterTest"/>
        <method signature="AnnotationSorterTest.testSort_timingUnsorted()[pri:0, instance:jalview.analysis.AnnotationSorterTest@50b8ae8d]" name="testSort_timingUnsorted" class="jalview.analysis.AnnotationSorterTest"/>
        <method signature="AppCacheTest.appCacheLimitTest()[pri:0, instance:jalview.io.cache.AppCacheTest@117632cf]" name="appCacheLimitTest" class="jalview.io.cache.AppCacheTest"/>
        <method signature="AppCacheTest.appCacheTest()[pri:0, instance:jalview.io.cache.AppCacheTest@117632cf]" name="appCacheTest" class="jalview.io.cache.AppCacheTest"/>
        <method signature="AppVarnaTest.testReplaceOddGaps()[pri:0, instance:jalview.gui.AppVarnaTest@61e3a1fd]" name="testReplaceOddGaps" class="jalview.gui.AppVarnaTest"/>
        <method signature="AppletUrlProviderFactoryTest.testCreateUrlProvider()[pri:0, instance:jalview.urls.AppletUrlProviderFactoryTest@d4ab71a]" name="testCreateUrlProvider" class="jalview.urls.AppletUrlProviderFactoryTest"/>
        <method signature="ArgsParserTest.testContains()[pri:0, instance:jalview.bin.ArgsParserTest@10b3df93]" name="testContains" class="jalview.bin.ArgsParserTest"/>
        <method signature="ArgsParserTest.testGetValue()[pri:0, instance:jalview.bin.ArgsParserTest@10b3df93]" name="testGetValue" class="jalview.bin.ArgsParserTest"/>
        <method signature="ArgsParserTest.testGetValue_decoded()[pri:0, instance:jalview.bin.ArgsParserTest@10b3df93]" name="testGetValue_decoded" class="jalview.bin.ArgsParserTest"/>
        <method signature="ArgsParserTest.testNextValue()[pri:0, instance:jalview.bin.ArgsParserTest@10b3df93]" name="testNextValue" class="jalview.bin.ArgsParserTest"/>
        <method signature="ArrayUtilsTest.testReverseIntArray()[pri:0, instance:jalview.util.ArrayUtilsTest@25230246]" name="testReverseIntArray" class="jalview.util.ArrayUtilsTest"/>
        <method signature="AtomSpecModelTest.testGetRanges()[pri:0, instance:jalview.structure.AtomSpecModelTest@9257031]" name="testGetRanges" class="jalview.structure.AtomSpecModelTest"/>
        <method signature="AtomTest.testStringConstructor()[pri:0, instance:mc_view.AtomTest@62e8f862]" name="testStringConstructor" class="mc_view.AtomTest"/>
        <method signature="AtomTest.testStringConstructor_blankOccupancyTempFactor()[pri:0, instance:mc_view.AtomTest@62e8f862]" name="testStringConstructor_blankOccupancyTempFactor" class="mc_view.AtomTest"/>
        <method signature="AtomTest.testStringConstructor_malformed()[pri:0, instance:mc_view.AtomTest@62e8f862]" name="testStringConstructor_malformed" class="mc_view.AtomTest"/>
        <method signature="BackupFilesTest.backupsEnabledNoRollMaxTest()[pri:0, instance:jalview.io.BackupFilesTest@bae47a0]" name="backupsEnabledNoRollMaxTest" class="jalview.io.BackupFilesTest"/>
        <method signature="BackupFilesTest.backupsEnabledReverseRollMaxTest()[pri:0, instance:jalview.io.BackupFilesTest@bae47a0]" name="backupsEnabledReverseRollMaxTest" class="jalview.io.BackupFilesTest"/>
        <method signature="BackupFilesTest.backupsEnabledRollMaxTest()[pri:0, instance:jalview.io.BackupFilesTest@bae47a0]" name="backupsEnabledRollMaxTest" class="jalview.io.BackupFilesTest"/>
        <method signature="BackupFilesTest.backupsEnabledSingleFileBackupTest()[pri:0, instance:jalview.io.BackupFilesTest@bae47a0]" name="backupsEnabledSingleFileBackupTest" class="jalview.io.BackupFilesTest"/>
        <method signature="BackupFilesTest.noBackupsEnabledTest()[pri:0, instance:jalview.io.BackupFilesTest@bae47a0]" name="noBackupsEnabledTest" class="jalview.io.BackupFilesTest"/>
        <method signature="BioJsHTMLOutputTest.expectedNullPointerException()[pri:0, instance:jalview.io.BioJsHTMLOutputTest@74a9c4b0]" name="expectedNullPointerException" class="jalview.io.BioJsHTMLOutputTest"/>
        <method signature="BioJsHTMLOutputTest.getBioJsMSAVersions()[pri:0, instance:jalview.io.BioJsHTMLOutputTest@74a9c4b0]" name="getBioJsMSAVersions" class="jalview.io.BioJsHTMLOutputTest"/>
        <method signature="BioJsHTMLOutputTest.getJalviewAlignmentAsJsonString()[pri:0, instance:jalview.io.BioJsHTMLOutputTest@74a9c4b0]" name="getJalviewAlignmentAsJsonString" class="jalview.io.BioJsHTMLOutputTest"/>
        <method signature="Blosum62ColourSchemeTest.testFindColour()[pri:0, instance:jalview.schemes.Blosum62ColourSchemeTest@6d2260db]" name="testFindColour" class="jalview.schemes.Blosum62ColourSchemeTest"/>
        <method signature="BondTest.testTranslate()[pri:0, instance:mc_view.BondTest@26f3d90c]" name="testTranslate" class="mc_view.BondTest"/>
        <method signature="BuriedColourSchemeTest.testFindColour()[pri:0, instance:jalview.schemes.BuriedColourSchemeTest@1f2d2181]" name="testFindColour" class="jalview.schemes.BuriedColourSchemeTest"/>
        <method signature="CacheTest.testSetDateProperty()[pri:0, instance:jalview.bin.CacheTest@ea27e34]" name="testSetDateProperty" class="jalview.bin.CacheTest"/>
        <method signature="CacheTest.testVersionChecker()[pri:0, instance:jalview.bin.CacheTest@ea27e34]" name="testVersionChecker" class="jalview.bin.CacheTest"/>
        <method signature="CalculationChooserTest.testGetApplicableScoreModels()[pri:0, instance:jalview.gui.CalculationChooserTest@51abf713]" name="testGetApplicableScoreModels" class="jalview.gui.CalculationChooserTest"/>
        <method signature="CaseInsensitiveStringTest.testEquals()[pri:0, instance:jalview.util.CaseInsensitiveStringTest@4fdf8f12]" name="testEquals" class="jalview.util.CaseInsensitiveStringTest"/>
        <method signature="CaseInsensitiveStringTest.testHashcode()[pri:0, instance:jalview.util.CaseInsensitiveStringTest@4fdf8f12]" name="testHashcode" class="jalview.util.CaseInsensitiveStringTest"/>
        <method signature="ChimeraCommandsTest.testCloseViewer()[pri:0, instance:jalview.ext.rbvi.chimera.ChimeraCommandsTest@3d526ad9]" name="testCloseViewer" class="jalview.ext.rbvi.chimera.ChimeraCommandsTest"/>
        <method signature="ChimeraCommandsTest.testColourByChain()[pri:0, instance:jalview.ext.rbvi.chimera.ChimeraCommandsTest@3d526ad9]" name="testColourByChain" class="jalview.ext.rbvi.chimera.ChimeraCommandsTest"/>
        <method signature="ChimeraCommandsTest.testColourByCharge()[pri:0, instance:jalview.ext.rbvi.chimera.ChimeraCommandsTest@3d526ad9]" name="testColourByCharge" class="jalview.ext.rbvi.chimera.ChimeraCommandsTest"/>
        <method signature="ChimeraCommandsTest.testColourBySequence()[pri:0, instance:jalview.ext.rbvi.chimera.ChimeraCommandsTest@3d526ad9]" name="testColourBySequence" class="jalview.ext.rbvi.chimera.ChimeraCommandsTest"/>
        <method signature="ChimeraCommandsTest.testFocusView()[pri:0, instance:jalview.ext.rbvi.chimera.ChimeraCommandsTest@3d526ad9]" name="testFocusView" class="jalview.ext.rbvi.chimera.ChimeraCommandsTest"/>
        <method signature="ChimeraCommandsTest.testGetAtomSpec()[pri:0, instance:jalview.ext.rbvi.chimera.ChimeraCommandsTest@3d526ad9]" name="testGetAtomSpec" class="jalview.ext.rbvi.chimera.ChimeraCommandsTest"/>
        <method signature="ChimeraCommandsTest.testGetAtomSpec_alphaOnly()[pri:0, instance:jalview.ext.rbvi.chimera.ChimeraCommandsTest@3d526ad9]" name="testGetAtomSpec_alphaOnly" class="jalview.ext.rbvi.chimera.ChimeraCommandsTest"/>
        <method signature="ChimeraCommandsTest.testGetColourCommand()[pri:0, instance:jalview.ext.rbvi.chimera.ChimeraCommandsTest@3d526ad9]" name="testGetColourCommand" class="jalview.ext.rbvi.chimera.ChimeraCommandsTest"/>
        <method signature="ChimeraCommandsTest.testGetModelStartNo()[pri:0, instance:jalview.ext.rbvi.chimera.ChimeraCommandsTest@3d526ad9]" name="testGetModelStartNo" class="jalview.ext.rbvi.chimera.ChimeraCommandsTest"/>
        <method signature="ChimeraCommandsTest.testGetResidueAttributes()[pri:0, instance:jalview.ext.rbvi.chimera.ChimeraCommandsTest@3d526ad9]" name="testGetResidueAttributes" class="jalview.ext.rbvi.chimera.ChimeraCommandsTest"/>
        <method signature="ChimeraCommandsTest.testGetResidueSpec()[pri:0, instance:jalview.ext.rbvi.chimera.ChimeraCommandsTest@3d526ad9]" name="testGetResidueSpec" class="jalview.ext.rbvi.chimera.ChimeraCommandsTest"/>
        <method signature="ChimeraCommandsTest.testGetSelectedResidues()[pri:0, instance:jalview.ext.rbvi.chimera.ChimeraCommandsTest@3d526ad9]" name="testGetSelectedResidues" class="jalview.ext.rbvi.chimera.ChimeraCommandsTest"/>
        <method signature="ChimeraCommandsTest.testListResidueAttributes()[pri:0, instance:jalview.ext.rbvi.chimera.ChimeraCommandsTest@3d526ad9]" name="testListResidueAttributes" class="jalview.ext.rbvi.chimera.ChimeraCommandsTest"/>
        <method signature="ChimeraCommandsTest.testLoadFile()[pri:0, instance:jalview.ext.rbvi.chimera.ChimeraCommandsTest@3d526ad9]" name="testLoadFile" class="jalview.ext.rbvi.chimera.ChimeraCommandsTest"/>
        <method signature="ChimeraCommandsTest.testMakeAttributeName()[pri:0, instance:jalview.ext.rbvi.chimera.ChimeraCommandsTest@3d526ad9]" name="testMakeAttributeName" class="jalview.ext.rbvi.chimera.ChimeraCommandsTest"/>
        <method signature="ChimeraCommandsTest.testOpenCommandFile()[pri:0, instance:jalview.ext.rbvi.chimera.ChimeraCommandsTest@3d526ad9]" name="testOpenCommandFile" class="jalview.ext.rbvi.chimera.ChimeraCommandsTest"/>
        <method signature="ChimeraCommandsTest.testOpenSession()[pri:0, instance:jalview.ext.rbvi.chimera.ChimeraCommandsTest@3d526ad9]" name="testOpenSession" class="jalview.ext.rbvi.chimera.ChimeraCommandsTest"/>
        <method signature="ChimeraCommandsTest.testSaveSession()[pri:0, instance:jalview.ext.rbvi.chimera.ChimeraCommandsTest@3d526ad9]" name="testSaveSession" class="jalview.ext.rbvi.chimera.ChimeraCommandsTest"/>
        <method signature="ChimeraCommandsTest.testSetAttribute()[pri:0, instance:jalview.ext.rbvi.chimera.ChimeraCommandsTest@3d526ad9]" name="testSetAttribute" class="jalview.ext.rbvi.chimera.ChimeraCommandsTest"/>
        <method signature="ChimeraCommandsTest.testSetAttributes()[pri:0, instance:jalview.ext.rbvi.chimera.ChimeraCommandsTest@3d526ad9]" name="testSetAttributes" class="jalview.ext.rbvi.chimera.ChimeraCommandsTest"/>
        <method signature="ChimeraCommandsTest.testSetBackgroundColour()[pri:0, instance:jalview.ext.rbvi.chimera.ChimeraCommandsTest@3d526ad9]" name="testSetBackgroundColour" class="jalview.ext.rbvi.chimera.ChimeraCommandsTest"/>
        <method signature="ChimeraCommandsTest.testShowBackbone()[pri:0, instance:jalview.ext.rbvi.chimera.ChimeraCommandsTest@3d526ad9]" name="testShowBackbone" class="jalview.ext.rbvi.chimera.ChimeraCommandsTest"/>
        <method signature="ChimeraCommandsTest.testStartNotifications()[pri:0, instance:jalview.ext.rbvi.chimera.ChimeraCommandsTest@3d526ad9]" name="testStartNotifications" class="jalview.ext.rbvi.chimera.ChimeraCommandsTest"/>
        <method signature="ChimeraCommandsTest.testStopNotifications()[pri:0, instance:jalview.ext.rbvi.chimera.ChimeraCommandsTest@3d526ad9]" name="testStopNotifications" class="jalview.ext.rbvi.chimera.ChimeraCommandsTest"/>
        <method signature="ChimeraCommandsTest.testSuperposeStructures()[pri:0, instance:jalview.ext.rbvi.chimera.ChimeraCommandsTest@3d526ad9]" name="testSuperposeStructures" class="jalview.ext.rbvi.chimera.ChimeraCommandsTest"/>
        <method signature="ChimeraXCommandsTest.testCloseViewer()[pri:0, instance:jalview.ext.rbvi.chimera.ChimeraXCommandsTest@6a175569]" name="testCloseViewer" class="jalview.ext.rbvi.chimera.ChimeraXCommandsTest"/>
        <method signature="ChimeraXCommandsTest.testColourByChain()[pri:0, instance:jalview.ext.rbvi.chimera.ChimeraXCommandsTest@6a175569]" name="testColourByChain" class="jalview.ext.rbvi.chimera.ChimeraXCommandsTest"/>
        <method signature="ChimeraXCommandsTest.testColourByCharge()[pri:0, instance:jalview.ext.rbvi.chimera.ChimeraXCommandsTest@6a175569]" name="testColourByCharge" class="jalview.ext.rbvi.chimera.ChimeraXCommandsTest"/>
        <method signature="ChimeraXCommandsTest.testColourBySequence()[pri:0, instance:jalview.ext.rbvi.chimera.ChimeraXCommandsTest@6a175569]" name="testColourBySequence" class="jalview.ext.rbvi.chimera.ChimeraXCommandsTest"/>
        <method signature="ChimeraXCommandsTest.testFocusView()[pri:0, instance:jalview.ext.rbvi.chimera.ChimeraXCommandsTest@6a175569]" name="testFocusView" class="jalview.ext.rbvi.chimera.ChimeraXCommandsTest"/>
        <method signature="ChimeraXCommandsTest.testGetAtomSpec()[pri:0, instance:jalview.ext.rbvi.chimera.ChimeraXCommandsTest@6a175569]" name="testGetAtomSpec" class="jalview.ext.rbvi.chimera.ChimeraXCommandsTest"/>
        <method signature="ChimeraXCommandsTest.testGetAtomSpec_alphaOnly()[pri:0, instance:jalview.ext.rbvi.chimera.ChimeraXCommandsTest@6a175569]" name="testGetAtomSpec_alphaOnly" class="jalview.ext.rbvi.chimera.ChimeraXCommandsTest"/>
        <method signature="ChimeraXCommandsTest.testGetColourCommand()[pri:0, instance:jalview.ext.rbvi.chimera.ChimeraXCommandsTest@6a175569]" name="testGetColourCommand" class="jalview.ext.rbvi.chimera.ChimeraXCommandsTest"/>
        <method signature="ChimeraXCommandsTest.testGetModelStartNo()[pri:0, instance:jalview.ext.rbvi.chimera.ChimeraXCommandsTest@6a175569]" name="testGetModelStartNo" class="jalview.ext.rbvi.chimera.ChimeraXCommandsTest"/>
        <method signature="ChimeraXCommandsTest.testGetResidueSpec()[pri:0, instance:jalview.ext.rbvi.chimera.ChimeraXCommandsTest@6a175569]" name="testGetResidueSpec" class="jalview.ext.rbvi.chimera.ChimeraXCommandsTest"/>
        <method signature="ChimeraXCommandsTest.testGetSelectedResidues()[pri:0, instance:jalview.ext.rbvi.chimera.ChimeraXCommandsTest@6a175569]" name="testGetSelectedResidues" class="jalview.ext.rbvi.chimera.ChimeraXCommandsTest"/>
        <method signature="ChimeraXCommandsTest.testListResidueAttributes()[pri:0, instance:jalview.ext.rbvi.chimera.ChimeraXCommandsTest@6a175569]" name="testListResidueAttributes" class="jalview.ext.rbvi.chimera.ChimeraXCommandsTest"/>
        <method signature="ChimeraXCommandsTest.testOpenCommandFile()[pri:0, instance:jalview.ext.rbvi.chimera.ChimeraXCommandsTest@6a175569]" name="testOpenCommandFile" class="jalview.ext.rbvi.chimera.ChimeraXCommandsTest"/>
        <method signature="ChimeraXCommandsTest.testOpenSession()[pri:0, instance:jalview.ext.rbvi.chimera.ChimeraXCommandsTest@6a175569]" name="testOpenSession" class="jalview.ext.rbvi.chimera.ChimeraXCommandsTest"/>
        <method signature="ChimeraXCommandsTest.testSaveSession()[pri:0, instance:jalview.ext.rbvi.chimera.ChimeraXCommandsTest@6a175569]" name="testSaveSession" class="jalview.ext.rbvi.chimera.ChimeraXCommandsTest"/>
        <method signature="ChimeraXCommandsTest.testSetAttribute()[pri:0, instance:jalview.ext.rbvi.chimera.ChimeraXCommandsTest@6a175569]" name="testSetAttribute" class="jalview.ext.rbvi.chimera.ChimeraXCommandsTest"/>
        <method signature="ChimeraXCommandsTest.testSetAttributes()[pri:0, instance:jalview.ext.rbvi.chimera.ChimeraXCommandsTest@6a175569]" name="testSetAttributes" class="jalview.ext.rbvi.chimera.ChimeraXCommandsTest"/>
        <method signature="ChimeraXCommandsTest.testSetBackgroundColour()[pri:0, instance:jalview.ext.rbvi.chimera.ChimeraXCommandsTest@6a175569]" name="testSetBackgroundColour" class="jalview.ext.rbvi.chimera.ChimeraXCommandsTest"/>
        <method signature="ChimeraXCommandsTest.testShowBackbone()[pri:0, instance:jalview.ext.rbvi.chimera.ChimeraXCommandsTest@6a175569]" name="testShowBackbone" class="jalview.ext.rbvi.chimera.ChimeraXCommandsTest"/>
        <method signature="ChimeraXCommandsTest.testStartNotifications()[pri:0, instance:jalview.ext.rbvi.chimera.ChimeraXCommandsTest@6a175569]" name="testStartNotifications" class="jalview.ext.rbvi.chimera.ChimeraXCommandsTest"/>
        <method signature="ChimeraXCommandsTest.testStopNotifications()[pri:0, instance:jalview.ext.rbvi.chimera.ChimeraXCommandsTest@6a175569]" name="testStopNotifications" class="jalview.ext.rbvi.chimera.ChimeraXCommandsTest"/>
        <method signature="ChimeraXCommandsTest.testSuperposeStructures()[pri:0, instance:jalview.ext.rbvi.chimera.ChimeraXCommandsTest@6a175569]" name="testSuperposeStructures" class="jalview.ext.rbvi.chimera.ChimeraXCommandsTest"/>
        <method signature="CigarArrayTest.testConstructor()[pri:0, instance:jalview.datamodel.CigarArrayTest@5a2f016d]" name="testConstructor" class="jalview.datamodel.CigarArrayTest"/>
        <method signature="ClustalFileTest.testParse_noNumbering()[pri:0, instance:jalview.io.ClustalFileTest@85ec632]" name="testParse_noNumbering" class="jalview.io.ClustalFileTest"/>
        <method signature="ClustalFileTest.testParse_withNumbering()[pri:0, instance:jalview.io.ClustalFileTest@85ec632]" name="testParse_withNumbering" class="jalview.io.ClustalFileTest"/>
        <method signature="ClustalxColourSchemeTest.testFindColour()[pri:0, instance:jalview.schemes.ClustalxColourSchemeTest@49bf29c6]" name="testFindColour" class="jalview.schemes.ClustalxColourSchemeTest"/>
        <method signature="ClustalxColourSchemeTest.testFindColour_ignoreGaps()[pri:0, instance:jalview.schemes.ClustalxColourSchemeTest@49bf29c6]" name="testFindColour_ignoreGaps" class="jalview.schemes.ClustalxColourSchemeTest"/>
        <method signature="CodingUtilsTest.testDecodeCodon()[pri:0, instance:jalview.analysis.CodingUtilsTest@255990cc]" name="testDecodeCodon" class="jalview.analysis.CodingUtilsTest"/>
        <method signature="CodingUtilsTest.testDecodeNucleotide()[pri:0, instance:jalview.analysis.CodingUtilsTest@255990cc]" name="testDecodeNucleotide" class="jalview.analysis.CodingUtilsTest"/>
        <method signature="CodingUtilsTest.testEncodeCodon()[pri:0, instance:jalview.analysis.CodingUtilsTest@255990cc]" name="testEncodeCodon" class="jalview.analysis.CodingUtilsTest"/>
        <method signature="ColorUtilsTest.testBleachColour()[pri:0, instance:jalview.util.ColorUtilsTest@4a8b5227]" name="testBleachColour" class="jalview.util.ColorUtilsTest"/>
        <method signature="ColorUtilsTest.testBrighterThan()[pri:0, instance:jalview.util.ColorUtilsTest@4a8b5227]" name="testBrighterThan" class="jalview.util.ColorUtilsTest"/>
        <method signature="ColorUtilsTest.testCreateColourFromName()[pri:0, instance:jalview.util.ColorUtilsTest@4a8b5227]" name="testCreateColourFromName" class="jalview.util.ColorUtilsTest"/>
        <method signature="ColorUtilsTest.testDarkerThan()[pri:0, instance:jalview.util.ColorUtilsTest@4a8b5227]" name="testDarkerThan" class="jalview.util.ColorUtilsTest"/>
        <method signature="ColorUtilsTest.testGetAWTColorFromName()[pri:0, instance:jalview.util.ColorUtilsTest@4a8b5227]" name="testGetAWTColorFromName" class="jalview.util.ColorUtilsTest"/>
        <method signature="ColorUtilsTest.testGetGraduatedColour()[pri:0, instance:jalview.util.ColorUtilsTest@4a8b5227]" name="testGetGraduatedColour" class="jalview.util.ColorUtilsTest"/>
        <method signature="ColorUtilsTest.testParseColourString()[pri:0, instance:jalview.util.ColorUtilsTest@4a8b5227]" name="testParseColourString" class="jalview.util.ColorUtilsTest"/>
        <method signature="ColorUtilsTest.testToTkCode()[pri:0, instance:jalview.util.ColorUtilsTest@4a8b5227]" name="testToTkCode" class="jalview.util.ColorUtilsTest"/>
        <method signature="ColourMenuHelperTest.testAddMenuItems_forAlignFrame()[pri:0, instance:jalview.gui.ColourMenuHelperTest@eadb475]" name="testAddMenuItems_forAlignFrame" class="jalview.gui.ColourMenuHelperTest"/>
        <method signature="ColourMenuHelperTest.testAddMenuItems_nucleotide()[pri:0, instance:jalview.gui.ColourMenuHelperTest@eadb475]" name="testAddMenuItems_nucleotide" class="jalview.gui.ColourMenuHelperTest"/>
        <method signature="ColourMenuHelperTest.testAddMenuItems_peptide()[pri:0, instance:jalview.gui.ColourMenuHelperTest@eadb475]" name="testAddMenuItems_peptide" class="jalview.gui.ColourMenuHelperTest"/>
        <method signature="ColourMenuHelperTest.testAddMenuItems_simpleOnly()[pri:0, instance:jalview.gui.ColourMenuHelperTest@eadb475]" name="testAddMenuItems_simpleOnly" class="jalview.gui.ColourMenuHelperTest"/>
        <method signature="ColourSchemePropertyTest.testGetColourName()[pri:0, instance:jalview.schemes.ColourSchemePropertyTest@7ee55e70]" name="testGetColourName" class="jalview.schemes.ColourSchemePropertyTest"/>
        <method signature="ColourSchemePropertyTest.testGetColourScheme()[pri:0, instance:jalview.schemes.ColourSchemePropertyTest@7ee55e70]" name="testGetColourScheme" class="jalview.schemes.ColourSchemePropertyTest"/>
        <method signature="ColourSchemesTest.testGetColourScheme()[pri:0, instance:jalview.schemes.ColourSchemesTest@3fcdcf]" name="testGetColourScheme" class="jalview.schemes.ColourSchemesTest"/>
        <method signature="ColourSchemesTest.testGetColourSchemes()[pri:0, instance:jalview.schemes.ColourSchemesTest@3fcdcf]" name="testGetColourSchemes" class="jalview.schemes.ColourSchemesTest"/>
        <method signature="ColourSchemesTest.testNameExists()[pri:0, instance:jalview.schemes.ColourSchemesTest@3fcdcf]" name="testNameExists" class="jalview.schemes.ColourSchemesTest"/>
        <method signature="ColourSchemesTest.testRegisterColourScheme()[pri:0, instance:jalview.schemes.ColourSchemesTest@3fcdcf]" name="testRegisterColourScheme" class="jalview.schemes.ColourSchemesTest"/>
        <method signature="ColumnSelectionTest.testAddElement()[pri:0, instance:jalview.datamodel.ColumnSelectionTest@3ad394e6]" name="testAddElement" class="jalview.datamodel.ColumnSelectionTest"/>
        <method signature="ColumnSelectionTest.testCopyConstructor()[pri:0, instance:jalview.datamodel.ColumnSelectionTest@3ad394e6]" name="testCopyConstructor" class="jalview.datamodel.ColumnSelectionTest"/>
        <method signature="ColumnSelectionTest.testEquals()[pri:0, instance:jalview.datamodel.ColumnSelectionTest@3ad394e6]" name="testEquals" class="jalview.datamodel.ColumnSelectionTest"/>
        <method signature="ColumnSelectionTest.testFilterAnnotations()[pri:0, instance:jalview.datamodel.ColumnSelectionTest@3ad394e6]" name="testFilterAnnotations" class="jalview.datamodel.ColumnSelectionTest"/>
        <method signature="ColumnSelectionTest.testGetSelected()[pri:0, instance:jalview.datamodel.ColumnSelectionTest@3ad394e6]" name="testGetSelected" class="jalview.datamodel.ColumnSelectionTest"/>
        <method signature="ColumnSelectionTest.testGetSelectedRanges()[pri:0, instance:jalview.datamodel.ColumnSelectionTest@3ad394e6]" name="testGetSelectedRanges" class="jalview.datamodel.ColumnSelectionTest"/>
        <method signature="ColumnSelectionTest.testGetSelected_concurrentModification()[pri:0, instance:jalview.datamodel.ColumnSelectionTest@3ad394e6]" name="testGetSelected_concurrentModification" class="jalview.datamodel.ColumnSelectionTest"/>
        <method signature="ColumnSelectionTest.testGetSelected_isReadOnly()[pri:0, instance:jalview.datamodel.ColumnSelectionTest@3ad394e6]" name="testGetSelected_isReadOnly" class="jalview.datamodel.ColumnSelectionTest"/>
        <method signature="ColumnSelectionTest.testHideColumns_withSelection()[pri:0, instance:jalview.datamodel.ColumnSelectionTest@3ad394e6]" name="testHideColumns_withSelection" class="jalview.datamodel.ColumnSelectionTest"/>
        <method signature="ColumnSelectionTest.testHideSelectedColumns()[pri:0, instance:jalview.datamodel.ColumnSelectionTest@3ad394e6]" name="testHideSelectedColumns" class="jalview.datamodel.ColumnSelectionTest"/>
        <method signature="ColumnSelectionTest.testInvertColumnSelection()[pri:0, instance:jalview.datamodel.ColumnSelectionTest@3ad394e6]" name="testInvertColumnSelection" class="jalview.datamodel.ColumnSelectionTest"/>
        <method signature="ColumnSelectionTest.testMarkColumns()[pri:0, instance:jalview.datamodel.ColumnSelectionTest@3ad394e6]" name="testMarkColumns" class="jalview.datamodel.ColumnSelectionTest"/>
        <method signature="ColumnSelectionTest.testMarkColumns_extend()[pri:0, instance:jalview.datamodel.ColumnSelectionTest@3ad394e6]" name="testMarkColumns_extend" class="jalview.datamodel.ColumnSelectionTest"/>
        <method signature="ColumnSelectionTest.testMarkColumns_invert()[pri:0, instance:jalview.datamodel.ColumnSelectionTest@3ad394e6]" name="testMarkColumns_invert" class="jalview.datamodel.ColumnSelectionTest"/>
        <method signature="ColumnSelectionTest.testMarkColumns_toggle()[pri:0, instance:jalview.datamodel.ColumnSelectionTest@3ad394e6]" name="testMarkColumns_toggle" class="jalview.datamodel.ColumnSelectionTest"/>
        <method signature="ColumnSelectionTest.testMaxColumnSelection()[pri:0, instance:jalview.datamodel.ColumnSelectionTest@3ad394e6]" name="testMaxColumnSelection" class="jalview.datamodel.ColumnSelectionTest"/>
        <method signature="ColumnSelectionTest.testMinColumnSelection()[pri:0, instance:jalview.datamodel.ColumnSelectionTest@3ad394e6]" name="testMinColumnSelection" class="jalview.datamodel.ColumnSelectionTest"/>
        <method signature="ColumnSelectionTest.testRemoveElement()[pri:0, instance:jalview.datamodel.ColumnSelectionTest@3ad394e6]" name="testRemoveElement" class="jalview.datamodel.ColumnSelectionTest"/>
        <method signature="ColumnSelectionTest.testSetElementsFrom()[pri:0, instance:jalview.datamodel.ColumnSelectionTest@3ad394e6]" name="testSetElementsFrom" class="jalview.datamodel.ColumnSelectionTest"/>
        <method signature="ColumnSelectionTest.testStretchGroup_expand()[pri:0, instance:jalview.datamodel.ColumnSelectionTest@3ad394e6]" name="testStretchGroup_expand" class="jalview.datamodel.ColumnSelectionTest"/>
        <method signature="ColumnSelectionTest.testStretchGroup_shrink()[pri:0, instance:jalview.datamodel.ColumnSelectionTest@3ad394e6]" name="testStretchGroup_shrink" class="jalview.datamodel.ColumnSelectionTest"/>
        <method signature="CommandLineOperations.reportCurrentWorkingDirectory()[pri:0, instance:jalview.bin.CommandLineOperations@33c2bd]" name="reportCurrentWorkingDirectory" class="jalview.bin.CommandLineOperations"/>
        <method signature="CommandLineOperations.testAllInputOperations(java.lang.String, java.lang.String)[pri:0, instance:jalview.bin.CommandLineOperations@33c2bd]" name="testAllInputOperations" class="jalview.bin.CommandLineOperations"/>
        <method signature="CommandLineOperations.testHeadlessModeOutputOperations(java.lang.String, java.lang.String, java.lang.String, boolean, int, int)[pri:0, instance:jalview.bin.CommandLineOperations@33c2bd]" name="testHeadlessModeOutputOperations" class="jalview.bin.CommandLineOperations"/>
        <method signature="ComparisonTest.testIsGap()[pri:0, instance:jalview.util.ComparisonTest@54f5f647]" name="testIsGap" class="jalview.util.ComparisonTest"/>
        <method signature="ComparisonTest.testIsNucleotide()[pri:0, instance:jalview.util.ComparisonTest@54f5f647]" name="testIsNucleotide" class="jalview.util.ComparisonTest"/>
        <method signature="ComparisonTest.testIsNucleotideSequence()[pri:0, instance:jalview.util.ComparisonTest@54f5f647]" name="testIsNucleotideSequence" class="jalview.util.ComparisonTest"/>
        <method signature="ComparisonTest.testIsNucleotide_sequences()[pri:0, instance:jalview.util.ComparisonTest@54f5f647]" name="testIsNucleotide_sequences" class="jalview.util.ComparisonTest"/>
        <method signature="ComparisonTest.testIsSameResidue()[pri:0, instance:jalview.util.ComparisonTest@54f5f647]" name="testIsSameResidue" class="jalview.util.ComparisonTest"/>
        <method signature="ComparisonTest.testPID_includingGaps()[pri:0, instance:jalview.util.ComparisonTest@54f5f647]" name="testPID_includingGaps" class="jalview.util.ComparisonTest"/>
        <method signature="ComparisonTest.testPID_ungappedOnly()[pri:0, instance:jalview.util.ComparisonTest@54f5f647]" name="testPID_ungappedOnly" class="jalview.util.ComparisonTest"/>
        <method signature="ConditionTest.testFromString()[pri:0, instance:jalview.util.matcher.ConditionTest@3b582111]" name="testFromString" class="jalview.util.matcher.ConditionTest"/>
        <method signature="ConditionTest.testGetStableName()[pri:0, instance:jalview.util.matcher.ConditionTest@3b582111]" name="testGetStableName" class="jalview.util.matcher.ConditionTest"/>
        <method signature="ConditionTest.testToString()[pri:0, instance:jalview.util.matcher.ConditionTest@3b582111]" name="testToString" class="jalview.util.matcher.ConditionTest"/>
        <method signature="ConservationTest.testCalculate_noThreshold()[pri:0, instance:jalview.analysis.ConservationTest@51c929ae]" name="testCalculate_noThreshold" class="jalview.analysis.ConservationTest"/>
        <method signature="ConservationTest.testCalculate_threshold()[pri:0, instance:jalview.analysis.ConservationTest@51c929ae]" name="testCalculate_threshold" class="jalview.analysis.ConservationTest"/>
        <method signature="ConservationTest.testCountConservationAndGaps()[pri:0, instance:jalview.analysis.ConservationTest@51c929ae]" name="testCountConservationAndGaps" class="jalview.analysis.ConservationTest"/>
        <method signature="ConservationTest.testRecordConservation()[pri:0, instance:jalview.analysis.ConservationTest@51c929ae]" name="testRecordConservation" class="jalview.analysis.ConservationTest"/>
        <method signature="ConservationTest.testVerdict()[pri:0, instance:jalview.analysis.ConservationTest@51c929ae]" name="testVerdict" class="jalview.analysis.ConservationTest"/>
        <method signature="CrossRef2xmlTests.openCrossrefsForEnsemblTwice()[pri:0, instance:jalview.io.CrossRef2xmlTests@1c05a54d]" name="openCrossrefsForEnsemblTwice" class="jalview.io.CrossRef2xmlTests"/>
        <method signature="CrossRefTest.testFindXDbRefs()[pri:0, instance:jalview.analysis.CrossRefTest@3c8bdd5b]" name="testFindXDbRefs" class="jalview.analysis.CrossRefTest"/>
        <method signature="CrossRefTest.testFindXrefSequences_fromDbRefMap()[pri:0, instance:jalview.analysis.CrossRefTest@3c8bdd5b]" name="testFindXrefSequences_fromDbRefMap" class="jalview.analysis.CrossRefTest"/>
        <method signature="CrossRefTest.testFindXrefSequences_indirectDbrefToNucleotide()[pri:0, instance:jalview.analysis.CrossRefTest@3c8bdd5b]" name="testFindXrefSequences_indirectDbrefToNucleotide" class="jalview.analysis.CrossRefTest"/>
        <method signature="CrossRefTest.testFindXrefSequences_indirectDbrefToProtein()[pri:0, instance:jalview.analysis.CrossRefTest@3c8bdd5b]" name="testFindXrefSequences_indirectDbrefToProtein" class="jalview.analysis.CrossRefTest"/>
        <method signature="CrossRefTest.testFindXrefSequences_noDbrefs()[pri:0, instance:jalview.analysis.CrossRefTest@3c8bdd5b]" name="testFindXrefSequences_noDbrefs" class="jalview.analysis.CrossRefTest"/>
        <method signature="CrossRefTest.testFindXrefSourcesForSequence_proteinToDna()[pri:0, instance:jalview.analysis.CrossRefTest@3c8bdd5b]" name="testFindXrefSourcesForSequence_proteinToDna" class="jalview.analysis.CrossRefTest"/>
        <method signature="CrossRefTest.testSameSequence()[pri:0, instance:jalview.analysis.CrossRefTest@3c8bdd5b]" name="testSameSequence" class="jalview.analysis.CrossRefTest"/>
        <method signature="CrossRefTest.testSearchDataset()[pri:0, instance:jalview.analysis.CrossRefTest@3c8bdd5b]" name="testSearchDataset" class="jalview.analysis.CrossRefTest"/>
        <method signature="CustomUrlProviderTest.testDefaultUrl()[pri:0, instance:jalview.urls.CustomUrlProviderTest@3b4ef7]" name="testDefaultUrl" class="jalview.urls.CustomUrlProviderTest"/>
        <method signature="CustomUrlProviderTest.testUrlLinks()[pri:0, instance:jalview.urls.CustomUrlProviderTest@3b4ef7]" name="testUrlLinks" class="jalview.urls.CustomUrlProviderTest"/>
        <method signature="DBRefEntryTest.testEqualRef()[pri:0, instance:jalview.datamodel.DBRefEntryTest@42deb43a]" name="testEqualRef" class="jalview.datamodel.DBRefEntryTest"/>
        <method signature="DBRefEntryTest.testIsPrimaryCandidate()[pri:0, instance:jalview.datamodel.DBRefEntryTest@42deb43a]" name="testIsPrimaryCandidate" class="jalview.datamodel.DBRefEntryTest"/>
        <method signature="DBRefEntryTest.testUpdateFrom()[pri:0, instance:jalview.datamodel.DBRefEntryTest@42deb43a]" name="testUpdateFrom" class="jalview.datamodel.DBRefEntryTest"/>
        <method signature="DBRefUtilsTest.testGetCanonicalName()[pri:0, instance:jalview.util.DBRefUtilsTest@6979efad]" name="testGetCanonicalName" class="jalview.util.DBRefUtilsTest"/>
        <method signature="DBRefUtilsTest.testParseToDbRef()[pri:0, instance:jalview.util.DBRefUtilsTest@6979efad]" name="testParseToDbRef" class="jalview.util.DBRefUtilsTest"/>
        <method signature="DBRefUtilsTest.testParseToDbRef_PDB()[pri:0, instance:jalview.util.DBRefUtilsTest@6979efad]" name="testParseToDbRef_PDB" class="jalview.util.DBRefUtilsTest"/>
        <method signature="DBRefUtilsTest.testSearchRefs_accessionid()[pri:0, instance:jalview.util.DBRefUtilsTest@6979efad]" name="testSearchRefs_accessionid" class="jalview.util.DBRefUtilsTest"/>
        <method signature="DBRefUtilsTest.testSearchRefs_noMapping()[pri:0, instance:jalview.util.DBRefUtilsTest@6979efad]" name="testSearchRefs_noMapping" class="jalview.util.DBRefUtilsTest"/>
        <method signature="DBRefUtilsTest.testSearchRefs_wildcardAccessionid()[pri:0, instance:jalview.util.DBRefUtilsTest@6979efad]" name="testSearchRefs_wildcardAccessionid" class="jalview.util.DBRefUtilsTest"/>
        <method signature="DBRefUtilsTest.testSearchRefs_withMapping()[pri:0, instance:jalview.util.DBRefUtilsTest@6979efad]" name="testSearchRefs_withMapping" class="jalview.util.DBRefUtilsTest"/>
        <method signature="DBRefUtilsTest.testSelectRefs()[pri:0, instance:jalview.util.DBRefUtilsTest@6979efad]" name="testSelectRefs" class="jalview.util.DBRefUtilsTest"/>
        <method signature="DbRefFetcherTest.testStandardProtDbs()[pri:0, instance:jalview.ws.seqfetcher.DbRefFetcherTest@1162410a]" name="testStandardProtDbs" class="jalview.ws.seqfetcher.DbRefFetcherTest"/>
        <method signature="DesktopUrlProviderFactoryTest.testCreateUrlProvider()[pri:0, instance:jalview.urls.DesktopUrlProviderFactoryTest@1af05b03]" name="testCreateUrlProvider" class="jalview.urls.DesktopUrlProviderFactoryTest"/>
        <method signature="DnaTest.testCompareCodonPos()[pri:0, instance:jalview.analysis.DnaTest@29d2d081]" name="testCompareCodonPos" class="jalview.analysis.DnaTest"/>
        <method signature="DnaTest.testCompareCodonPos_isSymmetric()[pri:0, instance:jalview.analysis.DnaTest@29d2d081]" name="testCompareCodonPos_isSymmetric" class="jalview.analysis.DnaTest"/>
        <method signature="DnaTest.testCompareCodonPos_oneOnly()[pri:0, instance:jalview.analysis.DnaTest@29d2d081]" name="testCompareCodonPos_oneOnly" class="jalview.analysis.DnaTest"/>
        <method signature="DnaTest.testConvertCodon()[pri:0, instance:jalview.analysis.DnaTest@29d2d081]" name="testConvertCodon" class="jalview.analysis.DnaTest"/>
        <method signature="DnaTest.testGetComplement()[pri:0, instance:jalview.analysis.DnaTest@29d2d081]" name="testGetComplement" class="jalview.analysis.DnaTest"/>
        <method signature="DnaTest.testReverseCdna()[pri:0, instance:jalview.analysis.DnaTest@29d2d081]" name="testReverseCdna" class="jalview.analysis.DnaTest"/>
        <method signature="DnaTest.testReverseSequence()[pri:0, instance:jalview.analysis.DnaTest@29d2d081]" name="testReverseSequence" class="jalview.analysis.DnaTest"/>
        <method signature="DnaTest.testTranslateCdna_hiddenColumns()[pri:0, instance:jalview.analysis.DnaTest@29d2d081]" name="testTranslateCdna_hiddenColumns" class="jalview.analysis.DnaTest"/>
        <method signature="DnaTest.testTranslateCdna_sequenceOrderIndependent()[pri:0, instance:jalview.analysis.DnaTest@29d2d081]" name="testTranslateCdna_sequenceOrderIndependent" class="jalview.analysis.DnaTest"/>
        <method signature="DnaTest.testTranslateCdna_simple()[pri:0, instance:jalview.analysis.DnaTest@29d2d081]" name="testTranslateCdna_simple" class="jalview.analysis.DnaTest"/>
        <method signature="DnaTest.testTranslateCdna_withUntranslatableCodons()[pri:0, instance:jalview.analysis.DnaTest@29d2d081]" name="testTranslateCdna_withUntranslatableCodons" class="jalview.analysis.DnaTest"/>
        <method signature="DnaTest.testTranslateCdna_withUntranslatableCodonsAndHiddenColumns()[pri:0, instance:jalview.analysis.DnaTest@29d2d081]" name="testTranslateCdna_withUntranslatableCodonsAndHiddenColumns" class="jalview.analysis.DnaTest"/>
        <method signature="DnaUtilsTest.testParseLocation()[pri:0, instance:jalview.util.DnaUtilsTest@5a6d5a8f]" name="testParseLocation" class="jalview.util.DnaUtilsTest"/>
        <method signature="EBIFetchClientTest.testBuildUrl()[pri:0, instance:jalview.ws.ebi.EBIFetchClientTest@5bf61e67]" name="testBuildUrl" class="jalview.ws.ebi.EBIFetchClientTest"/>
        <method signature="EBIFetchClientTest.testParseIds()[pri:0, instance:jalview.ws.ebi.EBIFetchClientTest@5bf61e67]" name="testParseIds" class="jalview.ws.ebi.EBIFetchClientTest"/>
        <method signature="EditCommandTest.testAddEdit_groupInsertGaps()[pri:0, instance:jalview.commands.EditCommandTest@12f3afb5]" name="testAddEdit_groupInsertGaps" class="jalview.commands.EditCommandTest"/>
        <method signature="EditCommandTest.testAddEdit_multipleDeleteGap()[pri:0, instance:jalview.commands.EditCommandTest@12f3afb5]" name="testAddEdit_multipleDeleteGap" class="jalview.commands.EditCommandTest"/>
        <method signature="EditCommandTest.testAddEdit_multipleInsertGap()[pri:0, instance:jalview.commands.EditCommandTest@12f3afb5]" name="testAddEdit_multipleInsertGap" class="jalview.commands.EditCommandTest"/>
        <method signature="EditCommandTest.testAddEdit_removeAllGaps()[pri:0, instance:jalview.commands.EditCommandTest@12f3afb5]" name="testAddEdit_removeAllGaps" class="jalview.commands.EditCommandTest"/>
        <method signature="EditCommandTest.testAppendEdit_deleteGap()[pri:0, instance:jalview.commands.EditCommandTest@12f3afb5]" name="testAppendEdit_deleteGap" class="jalview.commands.EditCommandTest"/>
        <method signature="EditCommandTest.testAppendEdit_insertGap()[pri:0, instance:jalview.commands.EditCommandTest@12f3afb5]" name="testAppendEdit_insertGap" class="jalview.commands.EditCommandTest"/>
        <method signature="EditCommandTest.testCut()[pri:0, instance:jalview.commands.EditCommandTest@12f3afb5]" name="testCut" class="jalview.commands.EditCommandTest"/>
        <method signature="EditCommandTest.testCut_withFeatures()[pri:0, instance:jalview.commands.EditCommandTest@12f3afb5]" name="testCut_withFeatures" class="jalview.commands.EditCommandTest"/>
        <method signature="EditCommandTest.testCut_withFeatures5prime()[pri:0, instance:jalview.commands.EditCommandTest@12f3afb5]" name="testCut_withFeatures5prime" class="jalview.commands.EditCommandTest"/>
        <method signature="EditCommandTest.testCut_withFeatures_exhaustive()[pri:0, instance:jalview.commands.EditCommandTest@12f3afb5]" name="testCut_withFeatures_exhaustive" class="jalview.commands.EditCommandTest"/>
        <method signature="EditCommandTest.testPriorState_multipleInserts()[pri:0, instance:jalview.commands.EditCommandTest@12f3afb5]" name="testPriorState_multipleInserts" class="jalview.commands.EditCommandTest"/>
        <method signature="EditCommandTest.testPriorState_removeAllGaps()[pri:0, instance:jalview.commands.EditCommandTest@12f3afb5]" name="testPriorState_removeAllGaps" class="jalview.commands.EditCommandTest"/>
        <method signature="EditCommandTest.testPriorState_removeGappedCols()[pri:0, instance:jalview.commands.EditCommandTest@12f3afb5]" name="testPriorState_removeGappedCols" class="jalview.commands.EditCommandTest"/>
        <method signature="EditCommandTest.testPriorState_removeGapsMultipleSeqs()[pri:0, instance:jalview.commands.EditCommandTest@12f3afb5]" name="testPriorState_removeGapsMultipleSeqs" class="jalview.commands.EditCommandTest"/>
        <method signature="EditCommandTest.testPriorState_singleDelete()[pri:0, instance:jalview.commands.EditCommandTest@12f3afb5]" name="testPriorState_singleDelete" class="jalview.commands.EditCommandTest"/>
        <method signature="EditCommandTest.testPriorState_singleInsert()[pri:0, instance:jalview.commands.EditCommandTest@12f3afb5]" name="testPriorState_singleInsert" class="jalview.commands.EditCommandTest"/>
        <method signature="EditCommandTest.testPriorState_singleInsertWithOffset()[pri:0, instance:jalview.commands.EditCommandTest@12f3afb5]" name="testPriorState_singleInsertWithOffset" class="jalview.commands.EditCommandTest"/>
        <method signature="EditCommandTest.testReplace()[pri:0, instance:jalview.commands.EditCommandTest@12f3afb5]" name="testReplace" class="jalview.commands.EditCommandTest"/>
        <method signature="EditCommandTest.testReplaceFirstResiduesWithGaps()[pri:0, instance:jalview.commands.EditCommandTest@12f3afb5]" name="testReplaceFirstResiduesWithGaps" class="jalview.commands.EditCommandTest"/>
        <method signature="EditCommandTest.testReplace_withGaps()[pri:0, instance:jalview.commands.EditCommandTest@12f3afb5]" name="testReplace_withGaps" class="jalview.commands.EditCommandTest"/>
        <method signature="EditCommandTest.testUndo_cut()[pri:0, instance:jalview.commands.EditCommandTest@12f3afb5]" name="testUndo_cut" class="jalview.commands.EditCommandTest"/>
        <method signature="EditCommandTest.testUndo_deleteGap()[pri:0, instance:jalview.commands.EditCommandTest@12f3afb5]" name="testUndo_deleteGap" class="jalview.commands.EditCommandTest"/>
        <method signature="EditCommandTest.testUndo_insertGap()[pri:0, instance:jalview.commands.EditCommandTest@12f3afb5]" name="testUndo_insertGap" class="jalview.commands.EditCommandTest"/>
        <method signature="EditCommandTest.testUndo_multipleCommands()[pri:0, instance:jalview.commands.EditCommandTest@12f3afb5]" name="testUndo_multipleCommands" class="jalview.commands.EditCommandTest"/>
        <method signature="EditCommandTest.testUndo_multipleInsertGaps()[pri:0, instance:jalview.commands.EditCommandTest@12f3afb5]" name="testUndo_multipleInsertGaps" class="jalview.commands.EditCommandTest"/>
        <method signature="EmblFlatFileTest.testAdjustForProteinLength()[pri:0, instance:jalview.io.EmblFlatFileTest@5fd9b663]" name="testAdjustForProteinLength" class="jalview.io.EmblFlatFileTest"/>
        <method signature="EmblFlatFileTest.testParse()[pri:0, instance:jalview.io.EmblFlatFileTest@5fd9b663]" name="testParse" class="jalview.io.EmblFlatFileTest"/>
        <method signature="EmblFlatFileTest.testParseToRNA()[pri:0, instance:jalview.io.EmblFlatFileTest@5fd9b663]" name="testParseToRNA" class="jalview.io.EmblFlatFileTest"/>
        <method signature="EmblFlatFileTest.testParse_codonStartNot1()[pri:0, instance:jalview.io.EmblFlatFileTest@5fd9b663]" name="testParse_codonStartNot1" class="jalview.io.EmblFlatFileTest"/>
        <method signature="EmblFlatFileTest.testParse_noUniprotXref()[pri:0, instance:jalview.io.EmblFlatFileTest@5fd9b663]" name="testParse_noUniprotXref" class="jalview.io.EmblFlatFileTest"/>
        <method signature="EmblFlatFileTest.testRemoveQuotes()[pri:0, instance:jalview.io.EmblFlatFileTest@5fd9b663]" name="testRemoveQuotes" class="jalview.io.EmblFlatFileTest"/>
        <method signature="EmblXmlSourceTest.testAdjustForProteinLength()[pri:0, instance:jalview.ws.dbsources.EmblXmlSourceTest@2237bada]" name="testAdjustForProteinLength" class="jalview.ws.dbsources.EmblXmlSourceTest"/>
        <method signature="EmblXmlSourceTest.testGetCdsRanges()[pri:0, instance:jalview.ws.dbsources.EmblXmlSourceTest@2237bada]" name="testGetCdsRanges" class="jalview.ws.dbsources.EmblXmlSourceTest"/>
        <method signature="EmblXmlSourceTest.testGetEmblEntries()[pri:0, instance:jalview.ws.dbsources.EmblXmlSourceTest@2237bada]" name="testGetEmblEntries" class="jalview.ws.dbsources.EmblXmlSourceTest"/>
        <method signature="EmblXmlSourceTest.testGetSequence()[pri:0, instance:jalview.ws.dbsources.EmblXmlSourceTest@2237bada]" name="testGetSequence" class="jalview.ws.dbsources.EmblXmlSourceTest"/>
        <method signature="EnsemblCdnaTest.testGetGenomicRangesFromFeatures()[pri:0, instance:jalview.ext.ensembl.EnsemblCdnaTest@2c282004]" name="testGetGenomicRangesFromFeatures" class="jalview.ext.ensembl.EnsemblCdnaTest"/>
        <method signature="EnsemblCdnaTest.testGetGenomicRangesFromFeatures_mixedStrand()[pri:0, instance:jalview.ext.ensembl.EnsemblCdnaTest@2c282004]" name="testGetGenomicRangesFromFeatures_mixedStrand" class="jalview.ext.ensembl.EnsemblCdnaTest"/>
        <method signature="EnsemblCdnaTest.testGetGenomicRangesFromFeatures_reverseStrand()[pri:0, instance:jalview.ext.ensembl.EnsemblCdnaTest@2c282004]" name="testGetGenomicRangesFromFeatures_reverseStrand" class="jalview.ext.ensembl.EnsemblCdnaTest"/>
        <method signature="EnsemblCdnaTest.testGetIdentifyingFeatures()[pri:0, instance:jalview.ext.ensembl.EnsemblCdnaTest@2c282004]" name="testGetIdentifyingFeatures" class="jalview.ext.ensembl.EnsemblCdnaTest"/>
        <method signature="EnsemblCdnaTest.testIsValidReference()[pri:0, instance:jalview.ext.ensembl.EnsemblCdnaTest@2c282004]" name="testIsValidReference" class="jalview.ext.ensembl.EnsemblCdnaTest"/>
        <method signature="EnsemblCdnaTest.testRetainFeature()[pri:0, instance:jalview.ext.ensembl.EnsemblCdnaTest@2c282004]" name="testRetainFeature" class="jalview.ext.ensembl.EnsemblCdnaTest"/>
        <method signature="EnsemblCdsTest.testGetGenomicRangesFromFeatures()[pri:0, instance:jalview.ext.ensembl.EnsemblCdsTest@22ee2d0]" name="testGetGenomicRangesFromFeatures" class="jalview.ext.ensembl.EnsemblCdsTest"/>
        <method signature="EnsemblCdsTest.testGetIdentifyingFeatures()[pri:0, instance:jalview.ext.ensembl.EnsemblCdsTest@22ee2d0]" name="testGetIdentifyingFeatures" class="jalview.ext.ensembl.EnsemblCdsTest"/>
        <method signature="EnsemblCdsTest.testIsValidReference()[pri:0, instance:jalview.ext.ensembl.EnsemblCdsTest@22ee2d0]" name="testIsValidReference" class="jalview.ext.ensembl.EnsemblCdsTest"/>
        <method signature="EnsemblCdsTest.testRetainFeature()[pri:0, instance:jalview.ext.ensembl.EnsemblCdsTest@22ee2d0]" name="testRetainFeature" class="jalview.ext.ensembl.EnsemblCdsTest"/>
        <method signature="EnsemblGeneTest.testGetFeatureColourScheme()[pri:0, instance:jalview.ext.ensembl.EnsemblGeneTest@7bfc3126]" name="testGetFeatureColourScheme" class="jalview.ext.ensembl.EnsemblGeneTest"/>
        <method signature="EnsemblGeneTest.testGetGenomicRangesFromFeatures()[pri:0, instance:jalview.ext.ensembl.EnsemblGeneTest@7bfc3126]" name="testGetGenomicRangesFromFeatures" class="jalview.ext.ensembl.EnsemblGeneTest"/>
        <method signature="EnsemblGeneTest.testGetGenomicRangesFromFeatures_ncRNA_gene_reverseStrand()[pri:0, instance:jalview.ext.ensembl.EnsemblGeneTest@7bfc3126]" name="testGetGenomicRangesFromFeatures_ncRNA_gene_reverseStrand" class="jalview.ext.ensembl.EnsemblGeneTest"/>
        <method signature="EnsemblGeneTest.testGetIdentifyingFeatures()[pri:0, instance:jalview.ext.ensembl.EnsemblGeneTest@7bfc3126]" name="testGetIdentifyingFeatures" class="jalview.ext.ensembl.EnsemblGeneTest"/>
        <method signature="EnsemblGeneTest.testGetTranscriptFeatures()[pri:0, instance:jalview.ext.ensembl.EnsemblGeneTest@7bfc3126]" name="testGetTranscriptFeatures" class="jalview.ext.ensembl.EnsemblGeneTest"/>
        <method signature="EnsemblGeneTest.testRetainFeature()[pri:0, instance:jalview.ext.ensembl.EnsemblGeneTest@7bfc3126]" name="testRetainFeature" class="jalview.ext.ensembl.EnsemblGeneTest"/>
        <method signature="EnsemblGenomeTest.testGetGenomicRangesFromFeatures()[pri:0, instance:jalview.ext.ensembl.EnsemblGenomeTest@3e792ce3]" name="testGetGenomicRangesFromFeatures" class="jalview.ext.ensembl.EnsemblGenomeTest"/>
        <method signature="EnsemblGenomeTest.testGetIdentifyingFeatures()[pri:0, instance:jalview.ext.ensembl.EnsemblGenomeTest@3e792ce3]" name="testGetIdentifyingFeatures" class="jalview.ext.ensembl.EnsemblGenomeTest"/>
        <method signature="EnsemblGenomeTest.testRetainFeature()[pri:0, instance:jalview.ext.ensembl.EnsemblGenomeTest@3e792ce3]" name="testRetainFeature" class="jalview.ext.ensembl.EnsemblGenomeTest"/>
        <method signature="EnsemblProteinTest.testGetAccesionIdFromQuery()[pri:0, instance:jalview.ext.ensembl.EnsemblProteinTest@53bc1328]" name="testGetAccesionIdFromQuery" class="jalview.ext.ensembl.EnsemblProteinTest"/>
        <method signature="EnsemblProteinTest.testIsValidReference()[pri:0, instance:jalview.ext.ensembl.EnsemblProteinTest@53bc1328]" name="testIsValidReference" class="jalview.ext.ensembl.EnsemblProteinTest"/>
        <method signature="EnsemblSeqProxyTest.getGenomicRangesFromFeatures()[pri:0, instance:jalview.ext.ensembl.EnsemblSeqProxyTest@3c1e3314]" name="getGenomicRangesFromFeatures" class="jalview.ext.ensembl.EnsemblSeqProxyTest"/>
        <method signature="EnsemblSeqProxyTest.testReverseComplementAllele()[pri:0, instance:jalview.ext.ensembl.EnsemblSeqProxyTest@3c1e3314]" name="testReverseComplementAllele" class="jalview.ext.ensembl.EnsemblSeqProxyTest"/>
        <method signature="EnsemblSeqProxyTest.testReverseComplementAlleles()[pri:0, instance:jalview.ext.ensembl.EnsemblSeqProxyTest@3c1e3314]" name="testReverseComplementAlleles" class="jalview.ext.ensembl.EnsemblSeqProxyTest"/>
        <method signature="EnsemblXrefTest.testGetCrossReferences()[pri:0, instance:jalview.ext.ensembl.EnsemblXrefTest@4b770e40]" name="testGetCrossReferences" class="jalview.ext.ensembl.EnsemblXrefTest"/>
        <method signature="ExonerateHelperTest.testAddExonerateGffToAlignment()[pri:0, instance:jalview.io.gff.ExonerateHelperTest@d71adc2]" name="testAddExonerateGffToAlignment" class="jalview.io.gff.ExonerateHelperTest"/>
        <method signature="ExonerateHelperTest.testGetMappingType()[pri:0, instance:jalview.io.gff.ExonerateHelperTest@d71adc2]" name="testGetMappingType" class="jalview.io.gff.ExonerateHelperTest"/>
        <method signature="ExonerateHelperTest.testProcessGffSimilarity_protein2dna_forward_querygff()[pri:0, instance:jalview.io.gff.ExonerateHelperTest@d71adc2]" name="testProcessGffSimilarity_protein2dna_forward_querygff" class="jalview.io.gff.ExonerateHelperTest"/>
        <method signature="ExonerateHelperTest.testProcessGffSimilarity_protein2dna_forward_targetgff()[pri:0, instance:jalview.io.gff.ExonerateHelperTest@d71adc2]" name="testProcessGffSimilarity_protein2dna_forward_targetgff" class="jalview.io.gff.ExonerateHelperTest"/>
        <method signature="ExonerateHelperTest.testProcessGffSimilarity_protein2dna_reverse_querygff()[pri:0, instance:jalview.io.gff.ExonerateHelperTest@d71adc2]" name="testProcessGffSimilarity_protein2dna_reverse_querygff" class="jalview.io.gff.ExonerateHelperTest"/>
        <method signature="ExonerateHelperTest.testProcessGffSimilarity_protein2dna_reverse_targetgff()[pri:0, instance:jalview.io.gff.ExonerateHelperTest@d71adc2]" name="testProcessGffSimilarity_protein2dna_reverse_targetgff" class="jalview.io.gff.ExonerateHelperTest"/>
        <method signature="FTSRestClientTest.coverageForEqualsAndHashFunction()[pri:0, instance:jalview.fts.core.FTSRestClientTest@11ee02f8]" name="coverageForEqualsAndHashFunction" class="jalview.fts.core.FTSRestClientTest"/>
        <method signature="FTSRestClientTest.coverageForExceptionBranches()[pri:0, instance:jalview.fts.core.FTSRestClientTest@11ee02f8]" name="coverageForExceptionBranches" class="jalview.fts.core.FTSRestClientTest"/>
        <method signature="FTSRestClientTest.coverageForMiscellaneousBranches()[pri:0, instance:jalview.fts.core.FTSRestClientTest@11ee02f8]" name="coverageForMiscellaneousBranches" class="jalview.fts.core.FTSRestClientTest"/>
        <method signature="FTSRestClientTest.getAllDefaulDisplayedDataColumns()[pri:0, instance:jalview.fts.core.FTSRestClientTest@11ee02f8]" name="getAllDefaulDisplayedDataColumns" class="jalview.fts.core.FTSRestClientTest"/>
        <method signature="FTSRestClientTest.getAllFTSDataColumns()[pri:0, instance:jalview.fts.core.FTSRestClientTest@11ee02f8]" name="getAllFTSDataColumns" class="jalview.fts.core.FTSRestClientTest"/>
        <method signature="FTSRestClientTest.getColumnClassTest()[pri:0, instance:jalview.fts.core.FTSRestClientTest@11ee02f8]" name="getColumnClassTest" class="jalview.fts.core.FTSRestClientTest"/>
        <method signature="FTSRestClientTest.getColumnMaxWidthTest()[pri:0, instance:jalview.fts.core.FTSRestClientTest@11ee02f8]" name="getColumnMaxWidthTest" class="jalview.fts.core.FTSRestClientTest"/>
        <method signature="FTSRestClientTest.getColumnMinWidthTest()[pri:0, instance:jalview.fts.core.FTSRestClientTest@11ee02f8]" name="getColumnMinWidthTest" class="jalview.fts.core.FTSRestClientTest"/>
        <method signature="FTSRestClientTest.getColumnPreferredWidthTest()[pri:0, instance:jalview.fts.core.FTSRestClientTest@11ee02f8]" name="getColumnPreferredWidthTest" class="jalview.fts.core.FTSRestClientTest"/>
        <method signature="FTSRestClientTest.getDataColumnByNameOrCode()[pri:0, instance:jalview.fts.core.FTSRestClientTest@11ee02f8]" name="getDataColumnByNameOrCode" class="jalview.fts.core.FTSRestClientTest"/>
        <method signature="FTSRestClientTest.getDataColumnGroupById()[pri:0, instance:jalview.fts.core.FTSRestClientTest@11ee02f8]" name="getDataColumnGroupById" class="jalview.fts.core.FTSRestClientTest"/>
        <method signature="FTSRestClientTest.getDataColumnsFieldsAsCommaDelimitedString()[pri:0, instance:jalview.fts.core.FTSRestClientTest@11ee02f8]" name="getDataColumnsFieldsAsCommaDelimitedString" class="jalview.fts.core.FTSRestClientTest"/>
        <method signature="FTSRestClientTest.getDefaultResponsePageSize()[pri:0, instance:jalview.fts.core.FTSRestClientTest@11ee02f8]" name="getDefaultResponsePageSize" class="jalview.fts.core.FTSRestClientTest"/>
        <method signature="FTSRestClientTest.getPrimaryKeyColumIndexTest()[pri:0, instance:jalview.fts.core.FTSRestClientTest@11ee02f8]" name="getPrimaryKeyColumIndexTest" class="jalview.fts.core.FTSRestClientTest"/>
        <method signature="FTSRestClientTest.getPrimaryKeyColumn()[pri:0, instance:jalview.fts.core.FTSRestClientTest@11ee02f8]" name="getPrimaryKeyColumn" class="jalview.fts.core.FTSRestClientTest"/>
        <method signature="FTSRestClientTest.getSearchableDataColumns()[pri:0, instance:jalview.fts.core.FTSRestClientTest@11ee02f8]" name="getSearchableDataColumns" class="jalview.fts.core.FTSRestClientTest"/>
        <method signature="FeatureAttributesTest.testAttributeNameComparator()[pri:0, instance:jalview.datamodel.features.FeatureAttributesTest@7692cd34]" name="testAttributeNameComparator" class="jalview.datamodel.features.FeatureAttributesTest"/>
        <method signature="FeatureAttributesTest.testDatatype()[pri:0, instance:jalview.datamodel.features.FeatureAttributesTest@7692cd34]" name="testDatatype" class="jalview.datamodel.features.FeatureAttributesTest"/>
        <method signature="FeatureAttributesTest.testGetDescription()[pri:0, instance:jalview.datamodel.features.FeatureAttributesTest@7692cd34]" name="testGetDescription" class="jalview.datamodel.features.FeatureAttributesTest"/>
        <method signature="FeatureAttributesTest.testGetMinMax()[pri:0, instance:jalview.datamodel.features.FeatureAttributesTest@7692cd34]" name="testGetMinMax" class="jalview.datamodel.features.FeatureAttributesTest"/>
        <method signature="FeatureColourFinderTest.testFindFeatureAtEnd()[pri:0, instance:jalview.renderer.seqfeatures.FeatureColourFinderTest@4837595f]" name="testFindFeatureAtEnd" class="jalview.renderer.seqfeatures.FeatureColourFinderTest"/>
        <method signature="FeatureColourFinderTest.testFindFeatureColour_contactFeature()[pri:0, instance:jalview.renderer.seqfeatures.FeatureColourFinderTest@4837595f]" name="testFindFeatureColour_contactFeature" class="jalview.renderer.seqfeatures.FeatureColourFinderTest"/>
        <method signature="FeatureColourFinderTest.testFindFeatureColour_featureGroupNotDisplayed()[pri:0, instance:jalview.renderer.seqfeatures.FeatureColourFinderTest@4837595f]" name="testFindFeatureColour_featureGroupNotDisplayed" class="jalview.renderer.seqfeatures.FeatureColourFinderTest"/>
        <method signature="FeatureColourFinderTest.testFindFeatureColour_featureTypeNotDisplayed()[pri:0, instance:jalview.renderer.seqfeatures.FeatureColourFinderTest@4837595f]" name="testFindFeatureColour_featureTypeNotDisplayed" class="jalview.renderer.seqfeatures.FeatureColourFinderTest"/>
        <method signature="FeatureColourFinderTest.testFindFeatureColour_gapPosition()[pri:0, instance:jalview.renderer.seqfeatures.FeatureColourFinderTest@4837595f]" name="testFindFeatureColour_gapPosition" class="jalview.renderer.seqfeatures.FeatureColourFinderTest"/>
        <method signature="FeatureColourFinderTest.testFindFeatureColour_graduatedFeatureColour()[pri:0, instance:jalview.renderer.seqfeatures.FeatureColourFinderTest@4837595f]" name="testFindFeatureColour_graduatedFeatureColour" class="jalview.renderer.seqfeatures.FeatureColourFinderTest"/>
        <method signature="FeatureColourFinderTest.testFindFeatureColour_graduatedWithThreshold()[pri:0, instance:jalview.renderer.seqfeatures.FeatureColourFinderTest@4837595f]" name="testFindFeatureColour_graduatedWithThreshold" class="jalview.renderer.seqfeatures.FeatureColourFinderTest"/>
        <method signature="FeatureColourFinderTest.testFindFeatureColour_multipleFeaturesAtPositionNoTransparency()[pri:0, instance:jalview.renderer.seqfeatures.FeatureColourFinderTest@4837595f]" name="testFindFeatureColour_multipleFeaturesAtPositionNoTransparency" class="jalview.renderer.seqfeatures.FeatureColourFinderTest"/>
        <method signature="FeatureColourFinderTest.testFindFeatureColour_nestedFeatures()[pri:0, instance:jalview.renderer.seqfeatures.FeatureColourFinderTest@4837595f]" name="testFindFeatureColour_nestedFeatures" class="jalview.renderer.seqfeatures.FeatureColourFinderTest"/>
        <method signature="FeatureColourFinderTest.testFindFeatureColour_noFeatures()[pri:0, instance:jalview.renderer.seqfeatures.FeatureColourFinderTest@4837595f]" name="testFindFeatureColour_noFeatures" class="jalview.renderer.seqfeatures.FeatureColourFinderTest"/>
        <method signature="FeatureColourFinderTest.testFindFeatureColour_noFeaturesShown()[pri:0, instance:jalview.renderer.seqfeatures.FeatureColourFinderTest@4837595f]" name="testFindFeatureColour_noFeaturesShown" class="jalview.renderer.seqfeatures.FeatureColourFinderTest"/>
        <method signature="FeatureColourFinderTest.testFindFeatureColour_singleFeatureAtPosition()[pri:0, instance:jalview.renderer.seqfeatures.FeatureColourFinderTest@4837595f]" name="testFindFeatureColour_singleFeatureAtPosition" class="jalview.renderer.seqfeatures.FeatureColourFinderTest"/>
        <method signature="FeatureColourFinderTest.testFindFeatureColour_singleFeatureNotAtPosition()[pri:0, instance:jalview.renderer.seqfeatures.FeatureColourFinderTest@4837595f]" name="testFindFeatureColour_singleFeatureNotAtPosition" class="jalview.renderer.seqfeatures.FeatureColourFinderTest"/>
        <method signature="FeatureColourFinderTest.testFindFeatureColour_transparencySingleFeature()[pri:0, instance:jalview.renderer.seqfeatures.FeatureColourFinderTest@4837595f]" name="testFindFeatureColour_transparencySingleFeature" class="jalview.renderer.seqfeatures.FeatureColourFinderTest"/>
        <method signature="FeatureColourFinderTest.testFindFeatureColour_transparencyTwoFeatures()[pri:0, instance:jalview.renderer.seqfeatures.FeatureColourFinderTest@4837595f]" name="testFindFeatureColour_transparencyTwoFeatures" class="jalview.renderer.seqfeatures.FeatureColourFinderTest"/>
        <method signature="FeatureColourFinderTest.testNoFeaturesDisplayed()[pri:0, instance:jalview.renderer.seqfeatures.FeatureColourFinderTest@4837595f]" name="testNoFeaturesDisplayed" class="jalview.renderer.seqfeatures.FeatureColourFinderTest"/>
        <method signature="FeatureColourTest.testConstructors()[pri:0, instance:jalview.schemes.FeatureColourTest@7668d560]" name="testConstructors" class="jalview.schemes.FeatureColourTest"/>
        <method signature="FeatureColourTest.testCopyConstructor()[pri:0, instance:jalview.schemes.FeatureColourTest@7668d560]" name="testCopyConstructor" class="jalview.schemes.FeatureColourTest"/>
        <method signature="FeatureColourTest.testGetColor_Graduated()[pri:0, instance:jalview.schemes.FeatureColourTest@7668d560]" name="testGetColor_Graduated" class="jalview.schemes.FeatureColourTest"/>
        <method signature="FeatureColourTest.testGetColor_GraduatedByAttributeValue()[pri:0, instance:jalview.schemes.FeatureColourTest@7668d560]" name="testGetColor_GraduatedByAttributeValue" class="jalview.schemes.FeatureColourTest"/>
        <method signature="FeatureColourTest.testGetColor_aboveBelowThreshold()[pri:0, instance:jalview.schemes.FeatureColourTest@7668d560]" name="testGetColor_aboveBelowThreshold" class="jalview.schemes.FeatureColourTest"/>
        <method signature="FeatureColourTest.testGetColor_colourByAttributeText()[pri:0, instance:jalview.schemes.FeatureColourTest@7668d560]" name="testGetColor_colourByAttributeText" class="jalview.schemes.FeatureColourTest"/>
        <method signature="FeatureColourTest.testGetColor_colourByLabel()[pri:0, instance:jalview.schemes.FeatureColourTest@7668d560]" name="testGetColor_colourByLabel" class="jalview.schemes.FeatureColourTest"/>
        <method signature="FeatureColourTest.testGetColor_simpleColour()[pri:0, instance:jalview.schemes.FeatureColourTest@7668d560]" name="testGetColor_simpleColour" class="jalview.schemes.FeatureColourTest"/>
        <method signature="FeatureColourTest.testGetDescription()[pri:0, instance:jalview.schemes.FeatureColourTest@7668d560]" name="testGetDescription" class="jalview.schemes.FeatureColourTest"/>
        <method signature="FeatureColourTest.testIsOutwithThreshold()[pri:0, instance:jalview.schemes.FeatureColourTest@7668d560]" name="testIsOutwithThreshold" class="jalview.schemes.FeatureColourTest"/>
        <method signature="FeatureColourTest.testParseJalviewFeatureColour()[pri:0, instance:jalview.schemes.FeatureColourTest@7668d560]" name="testParseJalviewFeatureColour" class="jalview.schemes.FeatureColourTest"/>
        <method signature="FeatureColourTest.testToJalviewFormat()[pri:0, instance:jalview.schemes.FeatureColourTest@7668d560]" name="testToJalviewFormat" class="jalview.schemes.FeatureColourTest"/>
        <method signature="FeatureDistanceModelTest.testFeatureScoreModel()[pri:0, instance:jalview.analysis.scoremodels.FeatureDistanceModelTest@3153ddfc]" name="testFeatureScoreModel" class="jalview.analysis.scoremodels.FeatureDistanceModelTest"/>
        <method signature="FeatureDistanceModelTest.testFeatureScoreModel_HiddenColumns()[pri:0, instance:jalview.analysis.scoremodels.FeatureDistanceModelTest@3153ddfc]" name="testFeatureScoreModel_HiddenColumns" class="jalview.analysis.scoremodels.FeatureDistanceModelTest"/>
        <method signature="FeatureDistanceModelTest.testFeatureScoreModel_hiddenFirstColumn()[pri:0, instance:jalview.analysis.scoremodels.FeatureDistanceModelTest@3153ddfc]" name="testFeatureScoreModel_hiddenFirstColumn" class="jalview.analysis.scoremodels.FeatureDistanceModelTest"/>
        <method signature="FeatureDistanceModelTest.testFindDistances()[pri:0, instance:jalview.analysis.scoremodels.FeatureDistanceModelTest@3153ddfc]" name="testFindDistances" class="jalview.analysis.scoremodels.FeatureDistanceModelTest"/>
        <method signature="FeatureDistanceModelTest.testFindDistances_withParams()[pri:0, instance:jalview.analysis.scoremodels.FeatureDistanceModelTest@3153ddfc]" name="testFindDistances_withParams" class="jalview.analysis.scoremodels.FeatureDistanceModelTest"/>
        <method signature="FeatureDistanceModelTest.testFindFeatureAt_PointFeature()[pri:0, instance:jalview.analysis.scoremodels.FeatureDistanceModelTest@3153ddfc]" name="testFindFeatureAt_PointFeature" class="jalview.analysis.scoremodels.FeatureDistanceModelTest"/>
        <method signature="FeatureMatcherSetTest.testAnd()[pri:0, instance:jalview.datamodel.features.FeatureMatcherSetTest@33aa93c]" name="testAnd" class="jalview.datamodel.features.FeatureMatcherSetTest"/>
        <method signature="FeatureMatcherSetTest.testFromString()[pri:0, instance:jalview.datamodel.features.FeatureMatcherSetTest@33aa93c]" name="testFromString" class="jalview.datamodel.features.FeatureMatcherSetTest"/>
        <method signature="FeatureMatcherSetTest.testGetMatchers()[pri:0, instance:jalview.datamodel.features.FeatureMatcherSetTest@33aa93c]" name="testGetMatchers" class="jalview.datamodel.features.FeatureMatcherSetTest"/>
        <method signature="FeatureMatcherSetTest.testIsEmpty()[pri:0, instance:jalview.datamodel.features.FeatureMatcherSetTest@33aa93c]" name="testIsEmpty" class="jalview.datamodel.features.FeatureMatcherSetTest"/>
        <method signature="FeatureMatcherSetTest.testMatches_byAttribute()[pri:0, instance:jalview.datamodel.features.FeatureMatcherSetTest@33aa93c]" name="testMatches_byAttribute" class="jalview.datamodel.features.FeatureMatcherSetTest"/>
        <method signature="FeatureMatcherSetTest.testMatches_compoundKey()[pri:0, instance:jalview.datamodel.features.FeatureMatcherSetTest@33aa93c]" name="testMatches_compoundKey" class="jalview.datamodel.features.FeatureMatcherSetTest"/>
        <method signature="FeatureMatcherSetTest.testOr()[pri:0, instance:jalview.datamodel.features.FeatureMatcherSetTest@33aa93c]" name="testOr" class="jalview.datamodel.features.FeatureMatcherSetTest"/>
        <method signature="FeatureMatcherSetTest.testToStableString()[pri:0, instance:jalview.datamodel.features.FeatureMatcherSetTest@33aa93c]" name="testToStableString" class="jalview.datamodel.features.FeatureMatcherSetTest"/>
        <method signature="FeatureMatcherSetTest.testToString()[pri:0, instance:jalview.datamodel.features.FeatureMatcherSetTest@33aa93c]" name="testToString" class="jalview.datamodel.features.FeatureMatcherSetTest"/>
        <method signature="FeatureMatcherTest.testFromString()[pri:0, instance:jalview.datamodel.features.FeatureMatcherTest@32c0915e]" name="testFromString" class="jalview.datamodel.features.FeatureMatcherTest"/>
        <method signature="FeatureMatcherTest.testGetAttribute()[pri:0, instance:jalview.datamodel.features.FeatureMatcherTest@32c0915e]" name="testGetAttribute" class="jalview.datamodel.features.FeatureMatcherTest"/>
        <method signature="FeatureMatcherTest.testGetMatcher()[pri:0, instance:jalview.datamodel.features.FeatureMatcherTest@32c0915e]" name="testGetMatcher" class="jalview.datamodel.features.FeatureMatcherTest"/>
        <method signature="FeatureMatcherTest.testIsByAttribute()[pri:0, instance:jalview.datamodel.features.FeatureMatcherTest@32c0915e]" name="testIsByAttribute" class="jalview.datamodel.features.FeatureMatcherTest"/>
        <method signature="FeatureMatcherTest.testIsByLabel()[pri:0, instance:jalview.datamodel.features.FeatureMatcherTest@32c0915e]" name="testIsByLabel" class="jalview.datamodel.features.FeatureMatcherTest"/>
        <method signature="FeatureMatcherTest.testIsByScore()[pri:0, instance:jalview.datamodel.features.FeatureMatcherTest@32c0915e]" name="testIsByScore" class="jalview.datamodel.features.FeatureMatcherTest"/>
        <method signature="FeatureMatcherTest.testMatches_byAttribute()[pri:0, instance:jalview.datamodel.features.FeatureMatcherTest@32c0915e]" name="testMatches_byAttribute" class="jalview.datamodel.features.FeatureMatcherTest"/>
        <method signature="FeatureMatcherTest.testMatches_byLabel()[pri:0, instance:jalview.datamodel.features.FeatureMatcherTest@32c0915e]" name="testMatches_byLabel" class="jalview.datamodel.features.FeatureMatcherTest"/>
        <method signature="FeatureMatcherTest.testMatches_byScore()[pri:0, instance:jalview.datamodel.features.FeatureMatcherTest@32c0915e]" name="testMatches_byScore" class="jalview.datamodel.features.FeatureMatcherTest"/>
        <method signature="FeatureMatcherTest.testToStableString()[pri:0, instance:jalview.datamodel.features.FeatureMatcherTest@32c0915e]" name="testToStableString" class="jalview.datamodel.features.FeatureMatcherTest"/>
        <method signature="FeatureMatcherTest.testToString()[pri:0, instance:jalview.datamodel.features.FeatureMatcherTest@32c0915e]" name="testToString" class="jalview.datamodel.features.FeatureMatcherTest"/>
        <method signature="FeatureRendererTest.testFilterFeaturesForDisplay()[pri:0, instance:jalview.renderer.seqfeatures.FeatureRendererTest@2bffa76d]" name="testFilterFeaturesForDisplay" class="jalview.renderer.seqfeatures.FeatureRendererTest"/>
        <method signature="FeatureRendererTest.testFindAllFeatures()[pri:0, instance:jalview.renderer.seqfeatures.FeatureRendererTest@2bffa76d]" name="testFindAllFeatures" class="jalview.renderer.seqfeatures.FeatureRendererTest"/>
        <method signature="FeatureRendererTest.testFindComplementFeaturesAtResidue()[pri:0, instance:jalview.renderer.seqfeatures.FeatureRendererTest@2bffa76d]" name="testFindComplementFeaturesAtResidue" class="jalview.renderer.seqfeatures.FeatureRendererTest"/>
        <method signature="FeatureRendererTest.testFindFeaturesAtColumn()[pri:0, instance:jalview.renderer.seqfeatures.FeatureRendererTest@2bffa76d]" name="testFindFeaturesAtColumn" class="jalview.renderer.seqfeatures.FeatureRendererTest"/>
        <method signature="FeatureRendererTest.testGetColour()[pri:0, instance:jalview.renderer.seqfeatures.FeatureRendererTest@2bffa76d]" name="testGetColour" class="jalview.renderer.seqfeatures.FeatureRendererTest"/>
        <method signature="FeatureRendererTest.testIsVisible()[pri:0, instance:jalview.renderer.seqfeatures.FeatureRendererTest@2bffa76d]" name="testIsVisible" class="jalview.renderer.seqfeatures.FeatureRendererTest"/>
        <method signature="FeatureSettingsTest.testGetColorTooltip()[pri:0, instance:jalview.gui.FeatureSettingsTest@4d4d48a6]" name="testGetColorTooltip" class="jalview.gui.FeatureSettingsTest"/>
        <method signature="FeatureSettingsTest.testSaveLoad()[pri:0, instance:jalview.gui.FeatureSettingsTest@4d4d48a6]" name="testSaveLoad" class="jalview.gui.FeatureSettingsTest"/>
        <method signature="FeatureStoreTest.testAddFeature()[pri:0, instance:jalview.datamodel.features.FeatureStoreTest@106faf11]" name="testAddFeature" class="jalview.datamodel.features.FeatureStoreTest"/>
        <method signature="FeatureStoreTest.testContains()[pri:0, instance:jalview.datamodel.features.FeatureStoreTest@106faf11]" name="testContains" class="jalview.datamodel.features.FeatureStoreTest"/>
        <method signature="FeatureStoreTest.testDelete()[pri:0, instance:jalview.datamodel.features.FeatureStoreTest@106faf11]" name="testDelete" class="jalview.datamodel.features.FeatureStoreTest"/>
        <method signature="FeatureStoreTest.testDelete_readd()[pri:0, instance:jalview.datamodel.features.FeatureStoreTest@106faf11]" name="testDelete_readd" class="jalview.datamodel.features.FeatureStoreTest"/>
        <method signature="FeatureStoreTest.testFindFeatures_contactFeatures()[pri:0, instance:jalview.datamodel.features.FeatureStoreTest@106faf11]" name="testFindFeatures_contactFeatures" class="jalview.datamodel.features.FeatureStoreTest"/>
        <method signature="FeatureStoreTest.testFindFeatures_mixed()[pri:0, instance:jalview.datamodel.features.FeatureStoreTest@106faf11]" name="testFindFeatures_mixed" class="jalview.datamodel.features.FeatureStoreTest"/>
        <method signature="FeatureStoreTest.testFindFeatures_nested()[pri:0, instance:jalview.datamodel.features.FeatureStoreTest@106faf11]" name="testFindFeatures_nested" class="jalview.datamodel.features.FeatureStoreTest"/>
        <method signature="FeatureStoreTest.testFindFeatures_nonNested()[pri:0, instance:jalview.datamodel.features.FeatureStoreTest@106faf11]" name="testFindFeatures_nonNested" class="jalview.datamodel.features.FeatureStoreTest"/>
        <method signature="FeatureStoreTest.testGetFeatureGroups()[pri:0, instance:jalview.datamodel.features.FeatureStoreTest@106faf11]" name="testGetFeatureGroups" class="jalview.datamodel.features.FeatureStoreTest"/>
        <method signature="FeatureStoreTest.testGetFeatureLength()[pri:0, instance:jalview.datamodel.features.FeatureStoreTest@106faf11]" name="testGetFeatureLength" class="jalview.datamodel.features.FeatureStoreTest"/>
        <method signature="FeatureStoreTest.testGetFeaturesForGroup()[pri:0, instance:jalview.datamodel.features.FeatureStoreTest@106faf11]" name="testGetFeaturesForGroup" class="jalview.datamodel.features.FeatureStoreTest"/>
        <method signature="FeatureStoreTest.testGetMinimumScore_getMaximumScore()[pri:0, instance:jalview.datamodel.features.FeatureStoreTest@106faf11]" name="testGetMinimumScore_getMaximumScore" class="jalview.datamodel.features.FeatureStoreTest"/>
        <method signature="FeatureStoreTest.testGetPositionalFeatures()[pri:0, instance:jalview.datamodel.features.FeatureStoreTest@106faf11]" name="testGetPositionalFeatures" class="jalview.datamodel.features.FeatureStoreTest"/>
        <method signature="FeatureStoreTest.testGetTotalFeatureLength()[pri:0, instance:jalview.datamodel.features.FeatureStoreTest@106faf11]" name="testGetTotalFeatureLength" class="jalview.datamodel.features.FeatureStoreTest"/>
        <method signature="FeatureStoreTest.testIsEmpty()[pri:0, instance:jalview.datamodel.features.FeatureStoreTest@106faf11]" name="testIsEmpty" class="jalview.datamodel.features.FeatureStoreTest"/>
        <method signature="FeatureStoreTest.testListContains()[pri:0, instance:jalview.datamodel.features.FeatureStoreTest@106faf11]" name="testListContains" class="jalview.datamodel.features.FeatureStoreTest"/>
        <method signature="FeatureStoreTest.testMax()[pri:0, instance:jalview.datamodel.features.FeatureStoreTest@106faf11]" name="testMax" class="jalview.datamodel.features.FeatureStoreTest"/>
        <method signature="FeatureStoreTest.testMin()[pri:0, instance:jalview.datamodel.features.FeatureStoreTest@106faf11]" name="testMin" class="jalview.datamodel.features.FeatureStoreTest"/>
        <method signature="FeatureStoreTest.testShiftFeatures()[pri:0, instance:jalview.datamodel.features.FeatureStoreTest@106faf11]" name="testShiftFeatures" class="jalview.datamodel.features.FeatureStoreTest"/>
        <method signature="FeaturesFileTest.readGff3File()[pri:0, instance:jalview.io.FeaturesFileTest@214894fc]" name="readGff3File" class="jalview.io.FeaturesFileTest"/>
        <method signature="FeaturesFileTest.simpleGff3FileClass()[pri:0, instance:jalview.io.FeaturesFileTest@214894fc]" name="simpleGff3FileClass" class="jalview.io.FeaturesFileTest"/>
        <method signature="FeaturesFileTest.simpleGff3FileLoader()[pri:0, instance:jalview.io.FeaturesFileTest@214894fc]" name="simpleGff3FileLoader" class="jalview.io.FeaturesFileTest"/>
        <method signature="FeaturesFileTest.simpleGff3RelaxedIdMatching()[pri:0, instance:jalview.io.FeaturesFileTest@214894fc]" name="simpleGff3RelaxedIdMatching" class="jalview.io.FeaturesFileTest"/>
        <method signature="FeaturesFileTest.testOutputFeatureFilters()[pri:0, instance:jalview.io.FeaturesFileTest@214894fc]" name="testOutputFeatureFilters" class="jalview.io.FeaturesFileTest"/>
        <method signature="FeaturesFileTest.testParse()[pri:0, instance:jalview.io.FeaturesFileTest@214894fc]" name="testParse" class="jalview.io.FeaturesFileTest"/>
        <method signature="FeaturesFileTest.testParseFilters()[pri:0, instance:jalview.io.FeaturesFileTest@214894fc]" name="testParseFilters" class="jalview.io.FeaturesFileTest"/>
        <method signature="FeaturesFileTest.testParse_jalviewFeaturesOnly()[pri:0, instance:jalview.io.FeaturesFileTest@214894fc]" name="testParse_jalviewFeaturesOnly" class="jalview.io.FeaturesFileTest"/>
        <method signature="FeaturesFileTest.testParse_mixedJalviewGff()[pri:0, instance:jalview.io.FeaturesFileTest@214894fc]" name="testParse_mixedJalviewGff" class="jalview.io.FeaturesFileTest"/>
        <method signature="FeaturesFileTest.testParse_pureGff3()[pri:0, instance:jalview.io.FeaturesFileTest@214894fc]" name="testParse_pureGff3" class="jalview.io.FeaturesFileTest"/>
        <method signature="FeaturesFileTest.testPrintGffFormat()[pri:0, instance:jalview.io.FeaturesFileTest@214894fc]" name="testPrintGffFormat" class="jalview.io.FeaturesFileTest"/>
        <method signature="FeaturesFileTest.testPrintGffFormat_withFilters()[pri:0, instance:jalview.io.FeaturesFileTest@214894fc]" name="testPrintGffFormat_withFilters" class="jalview.io.FeaturesFileTest"/>
        <method signature="FeaturesFileTest.testPrintJalviewFormat()[pri:0, instance:jalview.io.FeaturesFileTest@214894fc]" name="testPrintJalviewFormat" class="jalview.io.FeaturesFileTest"/>
        <method signature="FeaturesFileTest.testPrintJalviewFormat_withFilters()[pri:0, instance:jalview.io.FeaturesFileTest@214894fc]" name="testPrintJalviewFormat_withFilters" class="jalview.io.FeaturesFileTest"/>
        <method signature="FileFormatsTest.testDeregisterFileFormat()[pri:0, instance:jalview.io.FileFormatsTest@10567255]" name="testDeregisterFileFormat" class="jalview.io.FileFormatsTest"/>
        <method signature="FileFormatsTest.testForName()[pri:0, instance:jalview.io.FileFormatsTest@10567255]" name="testForName" class="jalview.io.FileFormatsTest"/>
        <method signature="FileFormatsTest.testGetFormats()[pri:0, instance:jalview.io.FileFormatsTest@10567255]" name="testGetFormats" class="jalview.io.FileFormatsTest"/>
        <method signature="FileFormatsTest.testGetReadableFormats()[pri:0, instance:jalview.io.FileFormatsTest@10567255]" name="testGetReadableFormats" class="jalview.io.FileFormatsTest"/>
        <method signature="FileFormatsTest.testGetWritableFormats()[pri:0, instance:jalview.io.FileFormatsTest@10567255]" name="testGetWritableFormats" class="jalview.io.FileFormatsTest"/>
        <method signature="FileFormatsTest.testIsIdentifiable()[pri:0, instance:jalview.io.FileFormatsTest@10567255]" name="testIsIdentifiable" class="jalview.io.FileFormatsTest"/>
        <method signature="FileFormatsTest.testRegisterFileFormat()[pri:0, instance:jalview.io.FileFormatsTest@10567255]" name="testRegisterFileFormat" class="jalview.io.FileFormatsTest"/>
        <method signature="FileIOTester.testGzipIo()[pri:0, instance:jalview.io.FileIOTester@e362c57]" name="testGzipIo" class="jalview.io.FileIOTester"/>
        <method signature="FileIOTester.testGziplocalFileIO()[pri:0, instance:jalview.io.FileIOTester@e362c57]" name="testGziplocalFileIO" class="jalview.io.FileIOTester"/>
        <method signature="FileIOTester.testIsGzipInputStream()[pri:0, instance:jalview.io.FileIOTester@e362c57]" name="testIsGzipInputStream" class="jalview.io.FileIOTester"/>
        <method signature="FileIOTester.testNonGzipURLIO()[pri:0, instance:jalview.io.FileIOTester@e362c57]" name="testNonGzipURLIO" class="jalview.io.FileIOTester"/>
        <method signature="FileIOTester.testNonGziplocalFileIO()[pri:0, instance:jalview.io.FileIOTester@e362c57]" name="testNonGziplocalFileIO" class="jalview.io.FileIOTester"/>
        <method signature="FileIOTester.testStarsInFasta1()[pri:0, instance:jalview.io.FileIOTester@e362c57]" name="testStarsInFasta1" class="jalview.io.FileIOTester"/>
        <method signature="FileIOTester.testStarsInFasta2()[pri:0, instance:jalview.io.FileIOTester@e362c57]" name="testStarsInFasta2" class="jalview.io.FileIOTester"/>
        <method signature="FinderTest.testFindAll()[pri:0, instance:jalview.analysis.FinderTest@3a7b503d]" name="testFindAll" class="jalview.analysis.FinderTest"/>
        <method signature="FinderTest.testFindAll_caseSensitive()[pri:0, instance:jalview.analysis.FinderTest@3a7b503d]" name="testFindAll_caseSensitive" class="jalview.analysis.FinderTest"/>
        <method signature="FinderTest.testFindAll_inSelection()[pri:0, instance:jalview.analysis.FinderTest@3a7b503d]" name="testFindAll_inSelection" class="jalview.analysis.FinderTest"/>
        <method signature="FinderTest.testFindAll_maximalResultOnly()[pri:0, instance:jalview.analysis.FinderTest@3a7b503d]" name="testFindAll_maximalResultOnly" class="jalview.analysis.FinderTest"/>
        <method signature="FinderTest.testFindAll_sequenceIds()[pri:0, instance:jalview.analysis.FinderTest@3a7b503d]" name="testFindAll_sequenceIds" class="jalview.analysis.FinderTest"/>
        <method signature="FinderTest.testFindNext()[pri:0, instance:jalview.analysis.FinderTest@3a7b503d]" name="testFindNext" class="jalview.analysis.FinderTest"/>
        <method signature="FinderTest.testFindNext_inSelection()[pri:0, instance:jalview.analysis.FinderTest@3a7b503d]" name="testFindNext_inSelection" class="jalview.analysis.FinderTest"/>
        <method signature="FinderTest.testFind_findAll()[pri:0, instance:jalview.analysis.FinderTest@3a7b503d]" name="testFind_findAll" class="jalview.analysis.FinderTest"/>
        <method signature="FinderTest.testFind_findAllInSelectionWithShortSequence()[pri:0, instance:jalview.analysis.FinderTest@3a7b503d]" name="testFind_findAllInSelectionWithShortSequence" class="jalview.analysis.FinderTest"/>
        <method signature="FinderTest.testFind_findNext()[pri:0, instance:jalview.analysis.FinderTest@3a7b503d]" name="testFind_findNext" class="jalview.analysis.FinderTest"/>
        <method signature="FinderTest.testFind_ignoreHiddenColumns()[pri:0, instance:jalview.analysis.FinderTest@3a7b503d]" name="testFind_ignoreHiddenColumns" class="jalview.analysis.FinderTest"/>
        <method signature="FinderTest.testFind_inDescription()[pri:0, instance:jalview.analysis.FinderTest@3a7b503d]" name="testFind_inDescription" class="jalview.analysis.FinderTest"/>
        <method signature="FinderTest.testFind_regex()[pri:0, instance:jalview.analysis.FinderTest@3a7b503d]" name="testFind_regex" class="jalview.analysis.FinderTest"/>
        <method signature="FinderTest.testFind_residueNumber()[pri:0, instance:jalview.analysis.FinderTest@3a7b503d]" name="testFind_residueNumber" class="jalview.analysis.FinderTest"/>
        <method signature="FinderTest.testFind_withHiddenColumns()[pri:0, instance:jalview.analysis.FinderTest@3a7b503d]" name="testFind_withHiddenColumns" class="jalview.analysis.FinderTest"/>
        <method signature="FinderTest.testFind_withHiddenColumnsAndSelection()[pri:0, instance:jalview.analysis.FinderTest@3a7b503d]" name="testFind_withHiddenColumnsAndSelection" class="jalview.analysis.FinderTest"/>
        <method signature="FormatAdapterTest.testRoundTrip(jalview.io.FileFormatI)[pri:0, instance:jalview.io.FormatAdapterTest@79c4715d]" name="testRoundTrip" class="jalview.io.FormatAdapterTest"/>
        <method signature="FormatTest.testAppendPercentage()[pri:0, instance:jalview.util.FormatTest@4a67318f]" name="testAppendPercentage" class="jalview.util.FormatTest"/>
        <method signature="FormatTest.testForm_float()[pri:0, instance:jalview.util.FormatTest@4a67318f]" name="testForm_float" class="jalview.util.FormatTest"/>
        <method signature="FormatTest.testFormat_scientific()[pri:0, instance:jalview.util.FormatTest@4a67318f]" name="testFormat_scientific" class="jalview.util.FormatTest"/>
        <method signature="FormatTest.testFormat_scientific_overflow()[pri:0, instance:jalview.util.FormatTest@4a67318f]" name="testFormat_scientific_overflow" class="jalview.util.FormatTest"/>
        <method signature="FormatTest.testRepeat()[pri:0, instance:jalview.util.FormatTest@4a67318f]" name="testRepeat" class="jalview.util.FormatTest"/>
        <method signature="GenBankFileTest.testParse()[pri:0, instance:jalview.io.GenBankFileTest@5aa360ea]" name="testParse" class="jalview.io.GenBankFileTest"/>
        <method signature="GeneticCodesTest.testGetCodeTable()[pri:0, instance:jalview.analysis.GeneticCodesTest@751e664e]" name="testGetCodeTable" class="jalview.analysis.GeneticCodesTest"/>
        <method signature="GeneticCodesTest.testGetCodeTables()[pri:0, instance:jalview.analysis.GeneticCodesTest@751e664e]" name="testGetCodeTables" class="jalview.analysis.GeneticCodesTest"/>
        <method signature="GeneticCodesTest.testTranslate()[pri:0, instance:jalview.analysis.GeneticCodesTest@751e664e]" name="testTranslate" class="jalview.analysis.GeneticCodesTest"/>
        <method signature="GeneticCodesTest.testTranslateCanonical()[pri:0, instance:jalview.analysis.GeneticCodesTest@751e664e]" name="testTranslateCanonical" class="jalview.analysis.GeneticCodesTest"/>
        <method signature="GeneticCodesTest.testTranslate_nonStandardTableAmbiguityCodes()[pri:0, instance:jalview.analysis.GeneticCodesTest@751e664e]" name="testTranslate_nonStandardTableAmbiguityCodes" class="jalview.analysis.GeneticCodesTest"/>
        <method signature="GeneticCodesTest.testTranslate_standardTable()[pri:0, instance:jalview.analysis.GeneticCodesTest@751e664e]" name="testTranslate_standardTable" class="jalview.analysis.GeneticCodesTest"/>
        <method signature="GeneticCodesTest.testTranslate_standardTableAmbiguityCodes()[pri:0, instance:jalview.analysis.GeneticCodesTest@751e664e]" name="testTranslate_standardTableAmbiguityCodes" class="jalview.analysis.GeneticCodesTest"/>
        <method signature="Gff3HelperTest.testGetDescription()[pri:0, instance:jalview.io.gff.Gff3HelperTest@3add81c4]" name="testGetDescription" class="jalview.io.gff.Gff3HelperTest"/>
        <method signature="Gff3HelperTest.testProcessCdnaMatch_forwardToForward()[pri:0, instance:jalview.io.gff.Gff3HelperTest@3add81c4]" name="testProcessCdnaMatch_forwardToForward" class="jalview.io.gff.Gff3HelperTest"/>
        <method signature="Gff3HelperTest.testProcessCdnaMatch_forwardToReverse()[pri:0, instance:jalview.io.gff.Gff3HelperTest@3add81c4]" name="testProcessCdnaMatch_forwardToReverse" class="jalview.io.gff.Gff3HelperTest"/>
        <method signature="Gff3HelperTest.testProcessCdnaMatch_reverseToForward()[pri:0, instance:jalview.io.gff.Gff3HelperTest@3add81c4]" name="testProcessCdnaMatch_reverseToForward" class="jalview.io.gff.Gff3HelperTest"/>
        <method signature="Gff3HelperTest.testProcessCdnaMatch_spliced()[pri:0, instance:jalview.io.gff.Gff3HelperTest@3add81c4]" name="testProcessCdnaMatch_spliced" class="jalview.io.gff.Gff3HelperTest"/>
        <method signature="GffHelperBaseTest.testParseAttributeMap()[pri:0, instance:jalview.io.gff.GffHelperBaseTest@1a1d3c1a]" name="testParseAttributeMap" class="jalview.io.gff.GffHelperBaseTest"/>
        <method signature="GffHelperBaseTest.testParseNameValuePairs()[pri:0, instance:jalview.io.gff.GffHelperBaseTest@1a1d3c1a]" name="testParseNameValuePairs" class="jalview.io.gff.GffHelperBaseTest"/>
        <method signature="GffHelperBaseTest.testTrimMapping()[pri:0, instance:jalview.io.gff.GffHelperBaseTest@1a1d3c1a]" name="testTrimMapping" class="jalview.io.gff.GffHelperBaseTest"/>
        <method signature="GffHelperFactoryTest.testGetHelper()[pri:0, instance:jalview.io.gff.GffHelperFactoryTest@1c65121]" name="testGetHelper" class="jalview.io.gff.GffHelperFactoryTest"/>
        <method signature="GffTests.testResolveExonerateGff()[pri:0, instance:jalview.io.gff.GffTests@159e366]" name="testResolveExonerateGff" class="jalview.io.gff.GffTests"/>
        <method signature="GroupingTest.testMakeGroupsWithBoth()[pri:0, instance:jalview.analysis.GroupingTest@160c3ec1]" name="testMakeGroupsWithBoth" class="jalview.analysis.GroupingTest"/>
        <method signature="HelixColourSchemeTest.testFindColour()[pri:0, instance:jalview.schemes.HelixColourSchemeTest@46292372]" name="testFindColour" class="jalview.schemes.HelixColourSchemeTest"/>
        <method signature="HelpTest.checkHelpTargets()[pri:0, instance:jalview.gui.HelpTest@5cad8b7d]" name="checkHelpTargets" class="jalview.gui.HelpTest"/>
        <method signature="HiDPISettingTest1.testHiDPISettingInit()[pri:0, instance:jalview.bin.HiDPISettingTest1@1dfd5f51]" name="testHiDPISettingInit" class="jalview.bin.HiDPISettingTest1"/>
        <method signature="HiDPISettingTest2.testHiDPISettings(int)[pri:0, instance:jalview.bin.HiDPISettingTest2@3c321bdb]" name="testHiDPISettings" class="jalview.bin.HiDPISettingTest2"/>
        <method signature="HiddenColumnsCursorTest.testConstructor()[pri:0, instance:jalview.datamodel.HiddenColumnsCursorTest@1deb2c43]" name="testConstructor" class="jalview.datamodel.HiddenColumnsCursorTest"/>
        <method signature="HiddenColumnsCursorTest.testFindRegionForColumn()[pri:0, instance:jalview.datamodel.HiddenColumnsCursorTest@1deb2c43]" name="testFindRegionForColumn" class="jalview.datamodel.HiddenColumnsCursorTest"/>
        <method signature="HiddenColumnsCursorTest.testFindRegionForColumn_Visible()[pri:0, instance:jalview.datamodel.HiddenColumnsCursorTest@1deb2c43]" name="testFindRegionForColumn_Visible" class="jalview.datamodel.HiddenColumnsCursorTest"/>
        <method signature="HiddenColumnsTest.testAdjustForHiddenColumns()[pri:0, instance:jalview.datamodel.HiddenColumnsTest@3bb9efbc]" name="testAdjustForHiddenColumns" class="jalview.datamodel.HiddenColumnsTest"/>
        <method signature="HiddenColumnsTest.testBoundedIterator()[pri:0, instance:jalview.datamodel.HiddenColumnsTest@3bb9efbc]" name="testBoundedIterator" class="jalview.datamodel.HiddenColumnsTest"/>
        <method signature="HiddenColumnsTest.testBoundedStartIterator()[pri:0, instance:jalview.datamodel.HiddenColumnsTest@3bb9efbc]" name="testBoundedStartIterator" class="jalview.datamodel.HiddenColumnsTest"/>
        <method signature="HiddenColumnsTest.testCopyConstructor()[pri:0, instance:jalview.datamodel.HiddenColumnsTest@3bb9efbc]" name="testCopyConstructor" class="jalview.datamodel.HiddenColumnsTest"/>
        <method signature="HiddenColumnsTest.testCopyConstructor2()[pri:0, instance:jalview.datamodel.HiddenColumnsTest@3bb9efbc]" name="testCopyConstructor2" class="jalview.datamodel.HiddenColumnsTest"/>
        <method signature="HiddenColumnsTest.testEquals()[pri:0, instance:jalview.datamodel.HiddenColumnsTest@3bb9efbc]" name="testEquals" class="jalview.datamodel.HiddenColumnsTest"/>
        <method signature="HiddenColumnsTest.testFindColumnPosition()[pri:0, instance:jalview.datamodel.HiddenColumnsTest@3bb9efbc]" name="testFindColumnPosition" class="jalview.datamodel.HiddenColumnsTest"/>
        <method signature="HiddenColumnsTest.testGetNextHiddenBoundary_Left()[pri:0, instance:jalview.datamodel.HiddenColumnsTest@3bb9efbc]" name="testGetNextHiddenBoundary_Left" class="jalview.datamodel.HiddenColumnsTest"/>
        <method signature="HiddenColumnsTest.testGetNextHiddenBoundary_Right()[pri:0, instance:jalview.datamodel.HiddenColumnsTest@3bb9efbc]" name="testGetNextHiddenBoundary_Right" class="jalview.datamodel.HiddenColumnsTest"/>
        <method signature="HiddenColumnsTest.testGetRegionWithEdgeAtRes()[pri:0, instance:jalview.datamodel.HiddenColumnsTest@3bb9efbc]" name="testGetRegionWithEdgeAtRes" class="jalview.datamodel.HiddenColumnsTest"/>
        <method signature="HiddenColumnsTest.testGetSize()[pri:0, instance:jalview.datamodel.HiddenColumnsTest@3bb9efbc]" name="testGetSize" class="jalview.datamodel.HiddenColumnsTest"/>
        <method signature="HiddenColumnsTest.testGetVisibleColsIterator()[pri:0, instance:jalview.datamodel.HiddenColumnsTest@3bb9efbc]" name="testGetVisibleColsIterator" class="jalview.datamodel.HiddenColumnsTest"/>
        <method signature="HiddenColumnsTest.testGetVisibleStartAndEndIndex()[pri:0, instance:jalview.datamodel.HiddenColumnsTest@3bb9efbc]" name="testGetVisibleStartAndEndIndex" class="jalview.datamodel.HiddenColumnsTest"/>
        <method signature="HiddenColumnsTest.testHasHiddenColumns()[pri:0, instance:jalview.datamodel.HiddenColumnsTest@3bb9efbc]" name="testHasHiddenColumns" class="jalview.datamodel.HiddenColumnsTest"/>
        <method signature="HiddenColumnsTest.testHasManyHiddenColumns()[pri:0, instance:jalview.datamodel.HiddenColumnsTest@3bb9efbc]" name="testHasManyHiddenColumns" class="jalview.datamodel.HiddenColumnsTest"/>
        <method signature="HiddenColumnsTest.testHashCode()[pri:0, instance:jalview.datamodel.HiddenColumnsTest@3bb9efbc]" name="testHashCode" class="jalview.datamodel.HiddenColumnsTest"/>
        <method signature="HiddenColumnsTest.testHideColumns()[pri:0, instance:jalview.datamodel.HiddenColumnsTest@3bb9efbc]" name="testHideColumns" class="jalview.datamodel.HiddenColumnsTest"/>
        <method signature="HiddenColumnsTest.testHideColumns_BitSet()[pri:0, instance:jalview.datamodel.HiddenColumnsTest@3bb9efbc]" name="testHideColumns_BitSet" class="jalview.datamodel.HiddenColumnsTest"/>
        <method signature="HiddenColumnsTest.testHideColumns_BitSet_range()[pri:0, instance:jalview.datamodel.HiddenColumnsTest@3bb9efbc]" name="testHideColumns_BitSet_range" class="jalview.datamodel.HiddenColumnsTest"/>
        <method signature="HiddenColumnsTest.testHideColumns_subsumingHidden()[pri:0, instance:jalview.datamodel.HiddenColumnsTest@3bb9efbc]" name="testHideColumns_subsumingHidden" class="jalview.datamodel.HiddenColumnsTest"/>
        <method signature="HiddenColumnsTest.testHideInsertionsFor()[pri:0, instance:jalview.datamodel.HiddenColumnsTest@3bb9efbc]" name="testHideInsertionsFor" class="jalview.datamodel.HiddenColumnsTest"/>
        <method signature="HiddenColumnsTest.testIsVisible()[pri:0, instance:jalview.datamodel.HiddenColumnsTest@3bb9efbc]" name="testIsVisible" class="jalview.datamodel.HiddenColumnsTest"/>
        <method signature="HiddenColumnsTest.testIterator()[pri:0, instance:jalview.datamodel.HiddenColumnsTest@3bb9efbc]" name="testIterator" class="jalview.datamodel.HiddenColumnsTest"/>
        <method signature="HiddenColumnsTest.testOffsetByVisibleColumns()[pri:0, instance:jalview.datamodel.HiddenColumnsTest@3bb9efbc]" name="testOffsetByVisibleColumns" class="jalview.datamodel.HiddenColumnsTest"/>
        <method signature="HiddenColumnsTest.testRegionsToString()[pri:0, instance:jalview.datamodel.HiddenColumnsTest@3bb9efbc]" name="testRegionsToString" class="jalview.datamodel.HiddenColumnsTest"/>
        <method signature="HiddenColumnsTest.testRevealAllHiddenColumns()[pri:0, instance:jalview.datamodel.HiddenColumnsTest@3bb9efbc]" name="testRevealAllHiddenColumns" class="jalview.datamodel.HiddenColumnsTest"/>
        <method signature="HiddenColumnsTest.testRevealHiddenColumns()[pri:0, instance:jalview.datamodel.HiddenColumnsTest@3bb9efbc]" name="testRevealHiddenColumns" class="jalview.datamodel.HiddenColumnsTest"/>
        <method signature="HiddenColumnsTest.testVisibleBlocksVisBoundsIterator()[pri:0, instance:jalview.datamodel.HiddenColumnsTest@3bb9efbc]" name="testVisibleBlocksVisBoundsIterator" class="jalview.datamodel.HiddenColumnsTest"/>
        <method signature="HiddenColumnsTest.testVisibleContigsIterator()[pri:0, instance:jalview.datamodel.HiddenColumnsTest@3bb9efbc]" name="testVisibleContigsIterator" class="jalview.datamodel.HiddenColumnsTest"/>
        <method signature="HiddenSequencesTest.testAdjustForHiddenSeqs()[pri:0, instance:jalview.datamodel.HiddenSequencesTest@6754ef00]" name="testAdjustForHiddenSeqs" class="jalview.datamodel.HiddenSequencesTest"/>
        <method signature="HiddenSequencesTest.testAdjustHeightSequenceAdded()[pri:0, instance:jalview.datamodel.HiddenSequencesTest@6754ef00]" name="testAdjustHeightSequenceAdded" class="jalview.datamodel.HiddenSequencesTest"/>
        <method signature="HiddenSequencesTest.testAdjustHeightSequenceDeleted()[pri:0, instance:jalview.datamodel.HiddenSequencesTest@6754ef00]" name="testAdjustHeightSequenceDeleted" class="jalview.datamodel.HiddenSequencesTest"/>
        <method signature="HiddenSequencesTest.testFindIndexNFromRow()[pri:0, instance:jalview.datamodel.HiddenSequencesTest@6754ef00]" name="testFindIndexNFromRow" class="jalview.datamodel.HiddenSequencesTest"/>
        <method signature="HiddenSequencesTest.testFindIndexWithoutHiddenSeqs()[pri:0, instance:jalview.datamodel.HiddenSequencesTest@6754ef00]" name="testFindIndexWithoutHiddenSeqs" class="jalview.datamodel.HiddenSequencesTest"/>
        <method signature="HiddenSequencesTest.testGetFullAlignment()[pri:0, instance:jalview.datamodel.HiddenSequencesTest@6754ef00]" name="testGetFullAlignment" class="jalview.datamodel.HiddenSequencesTest"/>
        <method signature="HiddenSequencesTest.testGetHiddenSequence()[pri:0, instance:jalview.datamodel.HiddenSequencesTest@6754ef00]" name="testGetHiddenSequence" class="jalview.datamodel.HiddenSequencesTest"/>
        <method signature="HiddenSequencesTest.testGetSize()[pri:0, instance:jalview.datamodel.HiddenSequencesTest@6754ef00]" name="testGetSize" class="jalview.datamodel.HiddenSequencesTest"/>
        <method signature="HiddenSequencesTest.testGetWidth()[pri:0, instance:jalview.datamodel.HiddenSequencesTest@6754ef00]" name="testGetWidth" class="jalview.datamodel.HiddenSequencesTest"/>
        <method signature="HiddenSequencesTest.testHideShowLastSequences()[pri:0, instance:jalview.datamodel.HiddenSequencesTest@6754ef00]" name="testHideShowLastSequences" class="jalview.datamodel.HiddenSequencesTest"/>
        <method signature="HiddenSequencesTest.testHideShowSequence()[pri:0, instance:jalview.datamodel.HiddenSequencesTest@6754ef00]" name="testHideShowSequence" class="jalview.datamodel.HiddenSequencesTest"/>
        <method signature="HiddenSequencesTest.testHideShowSequence_withHiddenRepSequence()[pri:0, instance:jalview.datamodel.HiddenSequencesTest@6754ef00]" name="testHideShowSequence_withHiddenRepSequence" class="jalview.datamodel.HiddenSequencesTest"/>
        <method signature="HiddenSequencesTest.testIsHidden()[pri:0, instance:jalview.datamodel.HiddenSequencesTest@6754ef00]" name="testIsHidden" class="jalview.datamodel.HiddenSequencesTest"/>
        <method signature="HydrophobicColourSchemeTest.testFindColour()[pri:0, instance:jalview.schemes.HydrophobicColourSchemeTest@126be319]" name="testFindColour" class="jalview.schemes.HydrophobicColourSchemeTest"/>
        <method signature="IdentifiersUrlProviderTest.testDefaultUrl()[pri:0, instance:jalview.urls.IdentifiersUrlProviderTest@5987e932]" name="testDefaultUrl" class="jalview.urls.IdentifiersUrlProviderTest"/>
        <method signature="IdentifiersUrlProviderTest.testUrlLinks()[pri:0, instance:jalview.urls.IdentifiersUrlProviderTest@5987e932]" name="testUrlLinks" class="jalview.urls.IdentifiersUrlProviderTest"/>
        <method signature="IdentifyFileTest.testIdentify(java.lang.String, jalview.io.FileFormatI)[pri:0, instance:jalview.io.IdentifyFileTest@e27ba81]" name="testIdentify" class="jalview.io.IdentifyFileTest"/>
        <method signature="IdentifyFileTest.testIdentify_featureFile()[pri:0, instance:jalview.io.IdentifyFileTest@e27ba81]" name="testIdentify_featureFile" class="jalview.io.IdentifyFileTest"/>
        <method signature="IdentifyFileTest.testLooksLikeFeatureData()[pri:0, instance:jalview.io.IdentifyFileTest@e27ba81]" name="testLooksLikeFeatureData" class="jalview.io.IdentifyFileTest"/>
        <method signature="InterProScanHelperTest.testProcessProteinMatch()[pri:0, instance:jalview.io.gff.InterProScanHelperTest@57dc9128]" name="testProcessProteinMatch" class="jalview.io.gff.InterProScanHelperTest"/>
        <method signature="JSONFileTest.colorSchemeTest()[pri:0, instance:jalview.io.JSONFileTest@54336c81]" name="colorSchemeTest" class="jalview.io.JSONFileTest"/>
        <method signature="JSONFileTest.hiddenColsTest()[pri:0, instance:jalview.io.JSONFileTest@54336c81]" name="hiddenColsTest" class="jalview.io.JSONFileTest"/>
        <method signature="JSONFileTest.hiddenSeqsTest()[pri:0, instance:jalview.io.JSONFileTest@54336c81]" name="hiddenSeqsTest" class="jalview.io.JSONFileTest"/>
        <method signature="JSONFileTest.isShowSeqFeaturesSet()[pri:0, instance:jalview.io.JSONFileTest@54336c81]" name="isShowSeqFeaturesSet" class="jalview.io.JSONFileTest"/>
        <method signature="JSONFileTest.roundTripTest()[pri:0, instance:jalview.io.JSONFileTest@54336c81]" name="roundTripTest" class="jalview.io.JSONFileTest"/>
        <method signature="JSONFileTest.testAnnotationParsed()[pri:0, instance:jalview.io.JSONFileTest@54336c81]" name="testAnnotationParsed" class="jalview.io.JSONFileTest"/>
        <method signature="JSONFileTest.testBioJSONRoundTripWithColourSchemeNone()[pri:0, instance:jalview.io.JSONFileTest@54336c81]" name="testBioJSONRoundTripWithColourSchemeNone" class="jalview.io.JSONFileTest"/>
        <method signature="JSONFileTest.testGrpParsed()[pri:0, instance:jalview.io.JSONFileTest@54336c81]" name="testGrpParsed" class="jalview.io.JSONFileTest"/>
        <method signature="JSONFileTest.testGrpParsed_colourNone()[pri:0, instance:jalview.io.JSONFileTest@54336c81]" name="testGrpParsed_colourNone" class="jalview.io.JSONFileTest"/>
        <method signature="JSONFileTest.testSeqParsed()[pri:0, instance:jalview.io.JSONFileTest@54336c81]" name="testSeqParsed" class="jalview.io.JSONFileTest"/>
        <method signature="JSONUtilsTest.testArrayToList()[pri:0, instance:jalview.util.JSONUtilsTest@315ba14a]" name="testArrayToList" class="jalview.util.JSONUtilsTest"/>
        <method signature="Jalview2xmlTests.gatherViewsHere()[pri:0, instance:jalview.project.Jalview2xmlTests@39fc6b2c]" name="gatherViewsHere" class="jalview.project.Jalview2xmlTests"/>
        <method signature="Jalview2xmlTests.noDuplicatePdbMappingsMade()[pri:0, instance:jalview.project.Jalview2xmlTests@39fc6b2c]" name="noDuplicatePdbMappingsMade" class="jalview.project.Jalview2xmlTests"/>
        <method signature="Jalview2xmlTests.testColourByAnnotScores()[pri:0, instance:jalview.project.Jalview2xmlTests@39fc6b2c]" name="testColourByAnnotScores" class="jalview.project.Jalview2xmlTests"/>
        <method signature="Jalview2xmlTests.testCopyViewSettings()[pri:0, instance:jalview.project.Jalview2xmlTests@39fc6b2c]" name="testCopyViewSettings" class="jalview.project.Jalview2xmlTests"/>
        <method signature="Jalview2xmlTests.testIsVersionStringLaterThan()[pri:0, instance:jalview.project.Jalview2xmlTests@39fc6b2c]" name="testIsVersionStringLaterThan" class="jalview.project.Jalview2xmlTests"/>
        <method signature="Jalview2xmlTests.testMergeDatasetsforManyViews()[pri:0, instance:jalview.project.Jalview2xmlTests@39fc6b2c]" name="testMergeDatasetsforManyViews" class="jalview.project.Jalview2xmlTests"/>
        <method signature="Jalview2xmlTests.testMergeDatasetsforViews()[pri:0, instance:jalview.project.Jalview2xmlTests@39fc6b2c]" name="testMergeDatasetsforViews" class="jalview.project.Jalview2xmlTests"/>
        <method signature="Jalview2xmlTests.testPcaViewAssociation()[pri:0, instance:jalview.project.Jalview2xmlTests@39fc6b2c]" name="testPcaViewAssociation" class="jalview.project.Jalview2xmlTests"/>
        <method signature="Jalview2xmlTests.testRNAStructureRecovery()[pri:0, instance:jalview.project.Jalview2xmlTests@39fc6b2c]" name="testRNAStructureRecovery" class="jalview.project.Jalview2xmlTests"/>
        <method signature="Jalview2xmlTests.testSaveLoadFeatureColoursAndFilters()[pri:0, instance:jalview.project.Jalview2xmlTests@39fc6b2c]" name="testSaveLoadFeatureColoursAndFilters" class="jalview.project.Jalview2xmlTests"/>
        <method signature="Jalview2xmlTests.testStoreAndRecoverColourThresholds()[pri:0, instance:jalview.project.Jalview2xmlTests@39fc6b2c]" name="testStoreAndRecoverColourThresholds" class="jalview.project.Jalview2xmlTests"/>
        <method signature="Jalview2xmlTests.testStoreAndRecoverExpandedviews()[pri:0, instance:jalview.project.Jalview2xmlTests@39fc6b2c]" name="testStoreAndRecoverExpandedviews" class="jalview.project.Jalview2xmlTests"/>
        <method signature="Jalview2xmlTests.testStoreAndRecoverGeneLocus()[pri:0, instance:jalview.project.Jalview2xmlTests@39fc6b2c]" name="testStoreAndRecoverGeneLocus" class="jalview.project.Jalview2xmlTests"/>
        <method signature="Jalview2xmlTests.testStoreAndRecoverGroupRepSeqs()[pri:0, instance:jalview.project.Jalview2xmlTests@39fc6b2c]" name="testStoreAndRecoverGroupRepSeqs" class="jalview.project.Jalview2xmlTests"/>
        <method signature="Jalview2xmlTests.testStoreAndRecoverPDBEntry()[pri:0, instance:jalview.project.Jalview2xmlTests@39fc6b2c]" name="testStoreAndRecoverPDBEntry" class="jalview.project.Jalview2xmlTests"/>
        <method signature="Jalview2xmlTests.testStoreAndRecoverReferenceSeqSettings()[pri:0, instance:jalview.project.Jalview2xmlTests@39fc6b2c]" name="testStoreAndRecoverReferenceSeqSettings" class="jalview.project.Jalview2xmlTests"/>
        <method signature="Jalview2xmlTests.testTCoffeeScores()[pri:0, instance:jalview.project.Jalview2xmlTests@39fc6b2c]" name="testTCoffeeScores" class="jalview.project.Jalview2xmlTests"/>
        <method signature="Jalview2xmlTests.viewRefPdbAnnotation()[pri:0, instance:jalview.project.Jalview2xmlTests@39fc6b2c]" name="viewRefPdbAnnotation" class="jalview.project.Jalview2xmlTests"/>
        <method signature="JalviewColourSchemeTest.testGetSchemeClass()[pri:0, instance:jalview.schemes.JalviewColourSchemeTest@6c44052e]" name="testGetSchemeClass" class="jalview.schemes.JalviewColourSchemeTest"/>
        <method signature="JalviewColourSchemeTest.testToString()[pri:0, instance:jalview.schemes.JalviewColourSchemeTest@6c44052e]" name="testToString" class="jalview.schemes.JalviewColourSchemeTest"/>
        <method signature="JalviewExportPropertiesTests.testImportExportPeriodGaps()[pri:0, instance:jalview.io.JalviewExportPropertiesTests@35e52059]" name="testImportExportPeriodGaps" class="jalview.io.JalviewExportPropertiesTests"/>
        <method signature="JalviewFileViewTest.testGetExtension()[pri:0, instance:jalview.io.JalviewFileViewTest@62577d6]" name="testGetExtension" class="jalview.io.JalviewFileViewTest"/>
        <method signature="JalviewFileViewTest.testGetImageIcon()[pri:0, instance:jalview.io.JalviewFileViewTest@62577d6]" name="testGetImageIcon" class="jalview.io.JalviewFileViewTest"/>
        <method signature="JalviewFileViewTest.testGetTypeDescription()[pri:0, instance:jalview.io.JalviewFileViewTest@62577d6]" name="testGetTypeDescription" class="jalview.io.JalviewFileViewTest"/>
        <method signature="JalviewLiteTest.testSeparatorListToArray()[pri:0, instance:jalview.bin.JalviewLiteTest@24855019]" name="testSeparatorListToArray" class="jalview.bin.JalviewLiteTest"/>
        <method signature="JmolCommandsTest.testColourByChain()[pri:0, instance:jalview.ext.jmol.JmolCommandsTest@3ef41c66]" name="testColourByChain" class="jalview.ext.jmol.JmolCommandsTest"/>
        <method signature="JmolCommandsTest.testColourByCharge()[pri:0, instance:jalview.ext.jmol.JmolCommandsTest@3ef41c66]" name="testColourByCharge" class="jalview.ext.jmol.JmolCommandsTest"/>
        <method signature="JmolCommandsTest.testColourBySequence()[pri:0, instance:jalview.ext.jmol.JmolCommandsTest@3ef41c66]" name="testColourBySequence" class="jalview.ext.jmol.JmolCommandsTest"/>
        <method signature="JmolCommandsTest.testFocusView()[pri:0, instance:jalview.ext.jmol.JmolCommandsTest@3ef41c66]" name="testFocusView" class="jalview.ext.jmol.JmolCommandsTest"/>
        <method signature="JmolCommandsTest.testGetAtomSpec()[pri:0, instance:jalview.ext.jmol.JmolCommandsTest@3ef41c66]" name="testGetAtomSpec" class="jalview.ext.jmol.JmolCommandsTest"/>
        <method signature="JmolCommandsTest.testGetColourBySequenceCommands_hiddenColumns()[pri:0, instance:jalview.ext.jmol.JmolCommandsTest@3ef41c66]" name="testGetColourBySequenceCommands_hiddenColumns" class="jalview.ext.jmol.JmolCommandsTest"/>
        <method signature="JmolCommandsTest.testGetModelStartNo()[pri:0, instance:jalview.ext.jmol.JmolCommandsTest@3ef41c66]" name="testGetModelStartNo" class="jalview.ext.jmol.JmolCommandsTest"/>
        <method signature="JmolCommandsTest.testLoadFile()[pri:0, instance:jalview.ext.jmol.JmolCommandsTest@3ef41c66]" name="testLoadFile" class="jalview.ext.jmol.JmolCommandsTest"/>
        <method signature="JmolCommandsTest.testOpenSession()[pri:0, instance:jalview.ext.jmol.JmolCommandsTest@3ef41c66]" name="testOpenSession" class="jalview.ext.jmol.JmolCommandsTest"/>
        <method signature="JmolCommandsTest.testSaveSession()[pri:0, instance:jalview.ext.jmol.JmolCommandsTest@3ef41c66]" name="testSaveSession" class="jalview.ext.jmol.JmolCommandsTest"/>
        <method signature="JmolCommandsTest.testSetBackgroundColour()[pri:0, instance:jalview.ext.jmol.JmolCommandsTest@3ef41c66]" name="testSetBackgroundColour" class="jalview.ext.jmol.JmolCommandsTest"/>
        <method signature="JmolCommandsTest.testShowBackbone()[pri:0, instance:jalview.ext.jmol.JmolCommandsTest@3ef41c66]" name="testShowBackbone" class="jalview.ext.jmol.JmolCommandsTest"/>
        <method signature="JmolCommandsTest.testSuperposeStructures()[pri:0, instance:jalview.ext.jmol.JmolCommandsTest@3ef41c66]" name="testSuperposeStructures" class="jalview.ext.jmol.JmolCommandsTest"/>
        <method signature="JmolParserTest.testAlignmentLoader()[pri:0, instance:jalview.ext.jmol.JmolParserTest@6b739528]" name="testAlignmentLoader" class="jalview.ext.jmol.JmolParserTest"/>
        <method signature="JmolParserTest.testFileParser()[pri:0, instance:jalview.ext.jmol.JmolParserTest@6b739528]" name="testFileParser" class="jalview.ext.jmol.JmolParserTest"/>
        <method signature="JmolParserTest.testLocalPDBId()[pri:0, instance:jalview.ext.jmol.JmolParserTest@6b739528]" name="testLocalPDBId" class="jalview.ext.jmol.JmolParserTest"/>
        <method signature="JmolParserTest.testParse_alternativeResidues()[pri:0, instance:jalview.ext.jmol.JmolParserTest@6b739528]" name="testParse_alternativeResidues" class="jalview.ext.jmol.JmolParserTest"/>
        <method signature="JmolParserTest.testParse_missingResidues()[pri:0, instance:jalview.ext.jmol.JmolParserTest@6b739528]" name="testParse_missingResidues" class="jalview.ext.jmol.JmolParserTest"/>
        <method signature="JmolParserTest.testSetSecondaryStructure()[pri:0, instance:jalview.ext.jmol.JmolParserTest@6b739528]" name="testSetSecondaryStructure" class="jalview.ext.jmol.JmolParserTest"/>
        <method signature="JmolViewerTest.testAddStrToSingleSeqViewJMol()[pri:0, instance:jalview.ext.jmol.JmolViewerTest@622ef26a]" name="testAddStrToSingleSeqViewJMol" class="jalview.ext.jmol.JmolViewerTest"/>
        <method signature="JmolViewerTest.testSingleSeqViewJMol()[pri:0, instance:jalview.ext.jmol.JmolViewerTest@622ef26a]" name="testSingleSeqViewJMol" class="jalview.ext.jmol.JmolViewerTest"/>
        <method signature="JvCacheableInputBoxTest.getUserInputTest()[pri:0, instance:jalview.io.cache.JvCacheableInputBoxTest@2fb68ec6]" name="getUserInputTest" class="jalview.io.cache.JvCacheableInputBoxTest"/>
        <method signature="JvCacheableInputBoxTest.updateCacheTest()[pri:0, instance:jalview.io.cache.JvCacheableInputBoxTest@2fb68ec6]" name="updateCacheTest" class="jalview.io.cache.JvCacheableInputBoxTest"/>
        <method signature="JvOptionPaneTest.showConfirmDialogFamilyTest()[pri:0, instance:jalview.gui.JvOptionPaneTest@25243bc1]" name="showConfirmDialogFamilyTest" class="jalview.gui.JvOptionPaneTest"/>
        <method signature="JvOptionPaneTest.showInputDialogFamilyTest()[pri:0, instance:jalview.gui.JvOptionPaneTest@25243bc1]" name="showInputDialogFamilyTest" class="jalview.gui.JvOptionPaneTest"/>
        <method signature="JvOptionPaneTest.showInternalConfirmDialogFamilyTest()[pri:0, instance:jalview.gui.JvOptionPaneTest@25243bc1]" name="showInternalConfirmDialogFamilyTest" class="jalview.gui.JvOptionPaneTest"/>
        <method signature="JvOptionPaneTest.showInternalMessageDialogFamilyTest()[pri:0, instance:jalview.gui.JvOptionPaneTest@25243bc1]" name="showInternalMessageDialogFamilyTest" class="jalview.gui.JvOptionPaneTest"/>
        <method signature="JvOptionPaneTest.showMessageDialogFamilyTest()[pri:0, instance:jalview.gui.JvOptionPaneTest@25243bc1]" name="showMessageDialogFamilyTest" class="jalview.gui.JvOptionPaneTest"/>
        <method signature="JvSwingUtilsTest.testGetScrollBarProportion()[pri:0, instance:jalview.gui.JvSwingUtilsTest@1e287667]" name="testGetScrollBarProportion" class="jalview.gui.JvSwingUtilsTest"/>
        <method signature="JvSwingUtilsTest.testGetScrollValueForProportion()[pri:0, instance:jalview.gui.JvSwingUtilsTest@1e287667]" name="testGetScrollValueForProportion" class="jalview.gui.JvSwingUtilsTest"/>
        <method signature="JvSwingUtilsTest.testWrapTooltip_longText()[pri:0, instance:jalview.gui.JvSwingUtilsTest@1e287667]" name="testWrapTooltip_longText" class="jalview.gui.JvSwingUtilsTest"/>
        <method signature="JvSwingUtilsTest.testWrapTooltip_multilineShortText()[pri:0, instance:jalview.gui.JvSwingUtilsTest@1e287667]" name="testWrapTooltip_multilineShortText" class="jalview.gui.JvSwingUtilsTest"/>
        <method signature="JvSwingUtilsTest.testWrapTooltip_shortText()[pri:0, instance:jalview.gui.JvSwingUtilsTest@1e287667]" name="testWrapTooltip_shortText" class="jalview.gui.JvSwingUtilsTest"/>
        <method signature="Log4jTest.testLog4j()[pri:0, instance:jalview.util.Log4jTest@17f9344b]" name="testLog4j" class="jalview.util.Log4jTest"/>
        <method signature="MapListTest.testAddMapList()[pri:0, instance:jalview.util.MapListTest@27f0ad19]" name="testAddMapList" class="jalview.util.MapListTest"/>
        <method signature="MapListTest.testAddMapList_contiguous()[pri:0, instance:jalview.util.MapListTest@27f0ad19]" name="testAddMapList_contiguous" class="jalview.util.MapListTest"/>
        <method signature="MapListTest.testAddMapList_sameMap()[pri:0, instance:jalview.util.MapListTest@27f0ad19]" name="testAddMapList_sameMap" class="jalview.util.MapListTest"/>
        <method signature="MapListTest.testAddOffsetPositions()[pri:0, instance:jalview.util.MapListTest@27f0ad19]" name="testAddOffsetPositions" class="jalview.util.MapListTest"/>
        <method signature="MapListTest.testAddRange()[pri:0, instance:jalview.util.MapListTest@27f0ad19]" name="testAddRange" class="jalview.util.MapListTest"/>
        <method signature="MapListTest.testCoalesceRanges()[pri:0, instance:jalview.util.MapListTest@27f0ad19]" name="testCoalesceRanges" class="jalview.util.MapListTest"/>
        <method signature="MapListTest.testConstructor()[pri:0, instance:jalview.util.MapListTest@27f0ad19]" name="testConstructor" class="jalview.util.MapListTest"/>
        <method signature="MapListTest.testConstructor_mergeRanges()[pri:0, instance:jalview.util.MapListTest@27f0ad19]" name="testConstructor_mergeRanges" class="jalview.util.MapListTest"/>
        <method signature="MapListTest.testConstructor_withLists()[pri:0, instance:jalview.util.MapListTest@27f0ad19]" name="testConstructor_withLists" class="jalview.util.MapListTest"/>
        <method signature="MapListTest.testCountPositions()[pri:0, instance:jalview.util.MapListTest@27f0ad19]" name="testCountPositions" class="jalview.util.MapListTest"/>
        <method signature="MapListTest.testEquals()[pri:0, instance:jalview.util.MapListTest@27f0ad19]" name="testEquals" class="jalview.util.MapListTest"/>
        <method signature="MapListTest.testGetInverse()[pri:0, instance:jalview.util.MapListTest@27f0ad19]" name="testGetInverse" class="jalview.util.MapListTest"/>
        <method signature="MapListTest.testGetMappedOffsetsForPositions()[pri:0, instance:jalview.util.MapListTest@27f0ad19]" name="testGetMappedOffsetsForPositions" class="jalview.util.MapListTest"/>
        <method signature="MapListTest.testGetOverlapsInFrom_withIntrons()[pri:0, instance:jalview.util.MapListTest@27f0ad19]" name="testGetOverlapsInFrom_withIntrons" class="jalview.util.MapListTest"/>
        <method signature="MapListTest.testGetOverlapsInTo_withIntrons()[pri:0, instance:jalview.util.MapListTest@27f0ad19]" name="testGetOverlapsInTo_withIntrons" class="jalview.util.MapListTest"/>
        <method signature="MapListTest.testGetPositionsForOffsets()[pri:0, instance:jalview.util.MapListTest@27f0ad19]" name="testGetPositionsForOffsets" class="jalview.util.MapListTest"/>
        <method signature="MapListTest.testGetRanges()[pri:0, instance:jalview.util.MapListTest@27f0ad19]" name="testGetRanges" class="jalview.util.MapListTest"/>
        <method signature="MapListTest.testIsFromForwardStrand()[pri:0, instance:jalview.util.MapListTest@27f0ad19]" name="testIsFromForwardStrand" class="jalview.util.MapListTest"/>
        <method signature="MapListTest.testIsToForwardsStrand()[pri:0, instance:jalview.util.MapListTest@27f0ad19]" name="testIsToForwardsStrand" class="jalview.util.MapListTest"/>
        <method signature="MapListTest.testLocateInFrom_noIntrons()[pri:0, instance:jalview.util.MapListTest@27f0ad19]" name="testLocateInFrom_noIntrons" class="jalview.util.MapListTest"/>
        <method signature="MapListTest.testLocateInFrom_reverseStrand()[pri:0, instance:jalview.util.MapListTest@27f0ad19]" name="testLocateInFrom_reverseStrand" class="jalview.util.MapListTest"/>
        <method signature="MapListTest.testLocateInFrom_withIntrons()[pri:0, instance:jalview.util.MapListTest@27f0ad19]" name="testLocateInFrom_withIntrons" class="jalview.util.MapListTest"/>
        <method signature="MapListTest.testLocateInFrom_withOverlap()[pri:0, instance:jalview.util.MapListTest@27f0ad19]" name="testLocateInFrom_withOverlap" class="jalview.util.MapListTest"/>
        <method signature="MapListTest.testLocateInTo_noIntrons()[pri:0, instance:jalview.util.MapListTest@27f0ad19]" name="testLocateInTo_noIntrons" class="jalview.util.MapListTest"/>
        <method signature="MapListTest.testLocateInTo_withIntrons()[pri:0, instance:jalview.util.MapListTest@27f0ad19]" name="testLocateInTo_withIntrons" class="jalview.util.MapListTest"/>
        <method signature="MapListTest.testLocateInTo_withOverlap()[pri:0, instance:jalview.util.MapListTest@27f0ad19]" name="testLocateInTo_withOverlap" class="jalview.util.MapListTest"/>
        <method signature="MapListTest.testToString()[pri:0, instance:jalview.util.MapListTest@27f0ad19]" name="testToString" class="jalview.util.MapListTest"/>
        <method signature="MapListTest.testTraverse()[pri:0, instance:jalview.util.MapListTest@27f0ad19]" name="testTraverse" class="jalview.util.MapListTest"/>
        <method signature="MapListTest.testTraverseToPosition()[pri:0, instance:jalview.util.MapListTest@27f0ad19]" name="testTraverseToPosition" class="jalview.util.MapListTest"/>
        <method signature="MappedFeaturesTest.testFindProteinVariants()[pri:0, instance:jalview.datamodel.MappedFeaturesTest@619bd14c]" name="testFindProteinVariants" class="jalview.datamodel.MappedFeaturesTest"/>
        <method signature="Mapping.compareTransferredToRefPDBAnnot()[pri:0, instance:jalview.structure.Mapping@7726e185]" name="compareTransferredToRefPDBAnnot" class="jalview.structure.Mapping"/>
        <method signature="Mapping.mapFer1From3W5V()[pri:0, instance:jalview.structure.Mapping@7726e185]" name="mapFer1From3W5V" class="jalview.structure.Mapping"/>
        <method signature="MappingTest.testCopyConstructor()[pri:0, instance:jalview.datamodel.MappingTest@323e8306]" name="testCopyConstructor" class="jalview.datamodel.MappingTest"/>
        <method signature="MappingTest.testIntersectVisContigs()[pri:0, instance:jalview.datamodel.MappingTest@323e8306]" name="testIntersectVisContigs" class="jalview.datamodel.MappingTest"/>
        <method signature="MappingTest.testToString()[pri:0, instance:jalview.datamodel.MappingTest@323e8306]" name="testToString" class="jalview.datamodel.MappingTest"/>
        <method signature="MappingTypeTest.testGetFromRatio()[pri:0, instance:jalview.datamodel.MappingTypeTest@a23a01d]" name="testGetFromRatio" class="jalview.datamodel.MappingTypeTest"/>
        <method signature="MappingTypeTest.testGetInverse()[pri:0, instance:jalview.datamodel.MappingTypeTest@a23a01d]" name="testGetInverse" class="jalview.datamodel.MappingTypeTest"/>
        <method signature="MappingTypeTest.testGetToRatio()[pri:0, instance:jalview.datamodel.MappingTypeTest@a23a01d]" name="testGetToRatio" class="jalview.datamodel.MappingTypeTest"/>
        <method signature="MappingUtilsTest.testBuildSearchResults()[pri:0, instance:jalview.util.MappingUtilsTest@54e81b21]" name="testBuildSearchResults" class="jalview.util.MappingUtilsTest"/>
        <method signature="MappingUtilsTest.testBuildSearchResults_withIntron()[pri:0, instance:jalview.util.MappingUtilsTest@54e81b21]" name="testBuildSearchResults_withIntron" class="jalview.util.MappingUtilsTest"/>
        <method signature="MappingUtilsTest.testContains()[pri:0, instance:jalview.util.MappingUtilsTest@54e81b21]" name="testContains" class="jalview.util.MappingUtilsTest"/>
        <method signature="MappingUtilsTest.testFindMappingsForSequence()[pri:0, instance:jalview.util.MappingUtilsTest@54e81b21]" name="testFindMappingsForSequence" class="jalview.util.MappingUtilsTest"/>
        <method signature="MappingUtilsTest.testFindMappingsForSequenceAndOthers()[pri:0, instance:jalview.util.MappingUtilsTest@54e81b21]" name="testFindMappingsForSequenceAndOthers" class="jalview.util.MappingUtilsTest"/>
        <method signature="MappingUtilsTest.testFindOverlap()[pri:0, instance:jalview.util.MappingUtilsTest@54e81b21]" name="testFindOverlap" class="jalview.util.MappingUtilsTest"/>
        <method signature="MappingUtilsTest.testFlattenRanges()[pri:0, instance:jalview.util.MappingUtilsTest@54e81b21]" name="testFlattenRanges" class="jalview.util.MappingUtilsTest"/>
        <method signature="MappingUtilsTest.testFlattenRanges_reverseStrand()[pri:0, instance:jalview.util.MappingUtilsTest@54e81b21]" name="testFlattenRanges_reverseStrand" class="jalview.util.MappingUtilsTest"/>
        <method signature="MappingUtilsTest.testGetLength()[pri:0, instance:jalview.util.MappingUtilsTest@54e81b21]" name="testGetLength" class="jalview.util.MappingUtilsTest"/>
        <method signature="MappingUtilsTest.testMapColumnSelection_dnaToProtein()[pri:0, instance:jalview.util.MappingUtilsTest@54e81b21]" name="testMapColumnSelection_dnaToProtein" class="jalview.util.MappingUtilsTest"/>
        <method signature="MappingUtilsTest.testMapColumnSelection_hiddenColumns()[pri:0, instance:jalview.util.MappingUtilsTest@54e81b21]" name="testMapColumnSelection_hiddenColumns" class="jalview.util.MappingUtilsTest"/>
        <method signature="MappingUtilsTest.testMapColumnSelection_null()[pri:0, instance:jalview.util.MappingUtilsTest@54e81b21]" name="testMapColumnSelection_null" class="jalview.util.MappingUtilsTest"/>
        <method signature="MappingUtilsTest.testMapColumnSelection_proteinToDna()[pri:0, instance:jalview.util.MappingUtilsTest@54e81b21]" name="testMapColumnSelection_proteinToDna" class="jalview.util.MappingUtilsTest"/>
        <method signature="MappingUtilsTest.testMapEditCommand()[pri:0, instance:jalview.util.MappingUtilsTest@54e81b21]" name="testMapEditCommand" class="jalview.util.MappingUtilsTest"/>
        <method signature="MappingUtilsTest.testMapSequenceGroup_columns()[pri:0, instance:jalview.util.MappingUtilsTest@54e81b21]" name="testMapSequenceGroup_columns" class="jalview.util.MappingUtilsTest"/>
        <method signature="MappingUtilsTest.testMapSequenceGroup_region()[pri:0, instance:jalview.util.MappingUtilsTest@54e81b21]" name="testMapSequenceGroup_region" class="jalview.util.MappingUtilsTest"/>
        <method signature="MappingUtilsTest.testMapSequenceGroup_sequences()[pri:0, instance:jalview.util.MappingUtilsTest@54e81b21]" name="testMapSequenceGroup_sequences" class="jalview.util.MappingUtilsTest"/>
        <method signature="MappingUtilsTest.testMapSequenceGroup_sharedDataset()[pri:0, instance:jalview.util.MappingUtilsTest@54e81b21]" name="testMapSequenceGroup_sharedDataset" class="jalview.util.MappingUtilsTest"/>
        <method signature="MappingUtilsTest.testRangeContains()[pri:0, instance:jalview.util.MappingUtilsTest@54e81b21]" name="testRangeContains" class="jalview.util.MappingUtilsTest"/>
        <method signature="MappingUtilsTest.testRemoveEndPositions()[pri:0, instance:jalview.util.MappingUtilsTest@54e81b21]" name="testRemoveEndPositions" class="jalview.util.MappingUtilsTest"/>
        <method signature="MappingUtilsTest.testRemoveStartPositions()[pri:0, instance:jalview.util.MappingUtilsTest@54e81b21]" name="testRemoveStartPositions" class="jalview.util.MappingUtilsTest"/>
        <method signature="MappingUtilsTest.testRemoveStartPositions_reverseStrand()[pri:0, instance:jalview.util.MappingUtilsTest@54e81b21]" name="testRemoveStartPositions_reverseStrand" class="jalview.util.MappingUtilsTest"/>
        <method signature="MatchTest.testEquals()[pri:0, instance:jalview.datamodel.MatchTest@4acf72b6]" name="testEquals" class="jalview.datamodel.MatchTest"/>
        <method signature="MatchTest.testToString()[pri:0, instance:jalview.datamodel.MatchTest@4acf72b6]" name="testToString" class="jalview.datamodel.MatchTest"/>
        <method signature="MatcherTest.testConstructor()[pri:0, instance:jalview.util.matcher.MatcherTest@2899a8db]" name="testConstructor" class="jalview.util.matcher.MatcherTest"/>
        <method signature="MatcherTest.testEquals()[pri:0, instance:jalview.util.matcher.MatcherTest@2899a8db]" name="testEquals" class="jalview.util.matcher.MatcherTest"/>
        <method signature="MatcherTest.testHashCode()[pri:0, instance:jalview.util.matcher.MatcherTest@2899a8db]" name="testHashCode" class="jalview.util.matcher.MatcherTest"/>
        <method signature="MatcherTest.testMatches_float()[pri:0, instance:jalview.util.matcher.MatcherTest@2899a8db]" name="testMatches_float" class="jalview.util.matcher.MatcherTest"/>
        <method signature="MatcherTest.testMatches_floatValueIntegerCondition()[pri:0, instance:jalview.util.matcher.MatcherTest@2899a8db]" name="testMatches_floatValueIntegerCondition" class="jalview.util.matcher.MatcherTest"/>
        <method signature="MatcherTest.testMatches_floatWithStringCondition()[pri:0, instance:jalview.util.matcher.MatcherTest@2899a8db]" name="testMatches_floatWithStringCondition" class="jalview.util.matcher.MatcherTest"/>
        <method signature="MatcherTest.testMatches_long()[pri:0, instance:jalview.util.matcher.MatcherTest@2899a8db]" name="testMatches_long" class="jalview.util.matcher.MatcherTest"/>
        <method signature="MatcherTest.testMatches_pattern()[pri:0, instance:jalview.util.matcher.MatcherTest@2899a8db]" name="testMatches_pattern" class="jalview.util.matcher.MatcherTest"/>
        <method signature="MatcherTest.testNumericMatch_nullOrInvalidValue()[pri:0, instance:jalview.util.matcher.MatcherTest@2899a8db]" name="testNumericMatch_nullOrInvalidValue" class="jalview.util.matcher.MatcherTest"/>
        <method signature="MatcherTest.testToString()[pri:0, instance:jalview.util.matcher.MatcherTest@2899a8db]" name="testToString" class="jalview.util.matcher.MatcherTest"/>
        <method signature="MathUtilsTest.testGcd()[pri:0, instance:jalview.util.MathUtilsTest@38d5b107]" name="testGcd" class="jalview.util.MathUtilsTest"/>
        <method signature="MatrixTest.testConstructor()[pri:0, instance:jalview.math.MatrixTest@59221b97]" name="testConstructor" class="jalview.math.MatrixTest"/>
        <method signature="MatrixTest.testCopy()[pri:0, instance:jalview.math.MatrixTest@59221b97]" name="testCopy" class="jalview.math.MatrixTest"/>
        <method signature="MatrixTest.testEquals()[pri:0, instance:jalview.math.MatrixTest@59221b97]" name="testEquals" class="jalview.math.MatrixTest"/>
        <method signature="MatrixTest.testFindMinMax()[pri:0, instance:jalview.math.MatrixTest@59221b97]" name="testFindMinMax" class="jalview.math.MatrixTest"/>
        <method signature="MatrixTest.testFindMinMax_timing()[pri:0, instance:jalview.math.MatrixTest@59221b97]" name="testFindMinMax_timing" class="jalview.math.MatrixTest"/>
        <method signature="MatrixTest.testMultiply()[pri:0, instance:jalview.math.MatrixTest@59221b97]" name="testMultiply" class="jalview.math.MatrixTest"/>
        <method signature="MatrixTest.testPostMultiply()[pri:0, instance:jalview.math.MatrixTest@59221b97]" name="testPostMultiply" class="jalview.math.MatrixTest"/>
        <method signature="MatrixTest.testPreMultiply()[pri:0, instance:jalview.math.MatrixTest@59221b97]" name="testPreMultiply" class="jalview.math.MatrixTest"/>
        <method signature="MatrixTest.testPreMultiply_tooFewColumns()[pri:0, instance:jalview.math.MatrixTest@59221b97]" name="testPreMultiply_tooFewColumns" class="jalview.math.MatrixTest"/>
        <method signature="MatrixTest.testPreMultiply_tooManyColumns()[pri:0, instance:jalview.math.MatrixTest@59221b97]" name="testPreMultiply_tooManyColumns" class="jalview.math.MatrixTest"/>
        <method signature="MatrixTest.testReverseRange_maxToZero()[pri:0, instance:jalview.math.MatrixTest@59221b97]" name="testReverseRange_maxToZero" class="jalview.math.MatrixTest"/>
        <method signature="MatrixTest.testReverseRange_swapMinMax()[pri:0, instance:jalview.math.MatrixTest@59221b97]" name="testReverseRange_swapMinMax" class="jalview.math.MatrixTest"/>
        <method signature="MatrixTest.testTred_reproducible()[pri:0, instance:jalview.math.MatrixTest@59221b97]" name="testTred_reproducible" class="jalview.math.MatrixTest"/>
        <method signature="MemorySettingTest.testGetMemorySetting()[pri:0, instance:jalview.bin.MemorySettingTest@3abd581e]" name="testGetMemorySetting" class="jalview.bin.MemorySettingTest"/>
        <method signature="MessageManagerTest.testFormatMessage_invalid()[pri:0, instance:jalview.util.MessageManagerTest@6650813a]" name="testFormatMessage_invalid" class="jalview.util.MessageManagerTest"/>
        <method signature="MessageManagerTest.testGetStringOrReturn()[pri:0, instance:jalview.util.MessageManagerTest@6650813a]" name="testGetStringOrReturn" class="jalview.util.MessageManagerTest"/>
        <method signature="MessageManagerTest.testGetString_invalid()[pri:0, instance:jalview.util.MessageManagerTest@6650813a]" name="testGetString_invalid" class="jalview.util.MessageManagerTest"/>
        <method signature="NewickFileTests.testTreeIO()[pri:0, instance:jalview.io.NewickFileTests@49bd54f7]" name="testTreeIO" class="jalview.io.NewickFileTests"/>
        <method signature="NewickFileTests.testTreeIO()[pri:0, instance:jalview.io.NewickFileTests@6b5f8707]" name="testTreeIO" class="jalview.io.NewickFileTests"/>
        <method signature="NewickFileTests.testTreeIO()[pri:0, instance:jalview.io.NewickFileTests@772485dd]" name="testTreeIO" class="jalview.io.NewickFileTests"/>
        <method signature="OverviewDimensionsHideHiddenTest.testConstructor()[pri:0, instance:jalview.viewmodel.OverviewDimensionsHideHiddenTest@1e8823d2]" name="testConstructor" class="jalview.viewmodel.OverviewDimensionsHideHiddenTest"/>
        <method signature="OverviewDimensionsHideHiddenTest.testDragging()[pri:0, instance:jalview.viewmodel.OverviewDimensionsHideHiddenTest@1e8823d2]" name="testDragging" class="jalview.viewmodel.OverviewDimensionsHideHiddenTest"/>
        <method signature="OverviewDimensionsHideHiddenTest.testFromMouseWithHiddenColsAtEnd()[pri:0, instance:jalview.viewmodel.OverviewDimensionsHideHiddenTest@1e8823d2]" name="testFromMouseWithHiddenColsAtEnd" class="jalview.viewmodel.OverviewDimensionsHideHiddenTest"/>
        <method signature="OverviewDimensionsHideHiddenTest.testFromMouseWithHiddenColsAtStart()[pri:0, instance:jalview.viewmodel.OverviewDimensionsHideHiddenTest@1e8823d2]" name="testFromMouseWithHiddenColsAtStart" class="jalview.viewmodel.OverviewDimensionsHideHiddenTest"/>
        <method signature="OverviewDimensionsHideHiddenTest.testFromMouseWithHiddenColsInMiddle()[pri:0, instance:jalview.viewmodel.OverviewDimensionsHideHiddenTest@1e8823d2]" name="testFromMouseWithHiddenColsInMiddle" class="jalview.viewmodel.OverviewDimensionsHideHiddenTest"/>
        <method signature="OverviewDimensionsHideHiddenTest.testFromMouseWithHiddenRowsAtEnd()[pri:0, instance:jalview.viewmodel.OverviewDimensionsHideHiddenTest@1e8823d2]" name="testFromMouseWithHiddenRowsAtEnd" class="jalview.viewmodel.OverviewDimensionsHideHiddenTest"/>
        <method signature="OverviewDimensionsHideHiddenTest.testFromMouseWithHiddenRowsAtStart()[pri:0, instance:jalview.viewmodel.OverviewDimensionsHideHiddenTest@1e8823d2]" name="testFromMouseWithHiddenRowsAtStart" class="jalview.viewmodel.OverviewDimensionsHideHiddenTest"/>
        <method signature="OverviewDimensionsHideHiddenTest.testFromMouseWithHiddenRowsInMiddle()[pri:0, instance:jalview.viewmodel.OverviewDimensionsHideHiddenTest@1e8823d2]" name="testFromMouseWithHiddenRowsInMiddle" class="jalview.viewmodel.OverviewDimensionsHideHiddenTest"/>
        <method signature="OverviewDimensionsHideHiddenTest.testPositionInBox()[pri:0, instance:jalview.viewmodel.OverviewDimensionsHideHiddenTest@1e8823d2]" name="testPositionInBox" class="jalview.viewmodel.OverviewDimensionsHideHiddenTest"/>
        <method signature="OverviewDimensionsHideHiddenTest.testSetBoxFromMouseClick()[pri:0, instance:jalview.viewmodel.OverviewDimensionsHideHiddenTest@1e8823d2]" name="testSetBoxFromMouseClick" class="jalview.viewmodel.OverviewDimensionsHideHiddenTest"/>
        <method signature="OverviewDimensionsHideHiddenTest.testSetBoxFromViewport()[pri:0, instance:jalview.viewmodel.OverviewDimensionsHideHiddenTest@1e8823d2]" name="testSetBoxFromViewport" class="jalview.viewmodel.OverviewDimensionsHideHiddenTest"/>
        <method signature="OverviewDimensionsHideHiddenTest.testSetBoxFromViewportHiddenColsAtEnd()[pri:0, instance:jalview.viewmodel.OverviewDimensionsHideHiddenTest@1e8823d2]" name="testSetBoxFromViewportHiddenColsAtEnd" class="jalview.viewmodel.OverviewDimensionsHideHiddenTest"/>
        <method signature="OverviewDimensionsHideHiddenTest.testSetBoxFromViewportHiddenColsAtStart()[pri:0, instance:jalview.viewmodel.OverviewDimensionsHideHiddenTest@1e8823d2]" name="testSetBoxFromViewportHiddenColsAtStart" class="jalview.viewmodel.OverviewDimensionsHideHiddenTest"/>
        <method signature="OverviewDimensionsHideHiddenTest.testSetBoxFromViewportHiddenColsInMiddle()[pri:0, instance:jalview.viewmodel.OverviewDimensionsHideHiddenTest@1e8823d2]" name="testSetBoxFromViewportHiddenColsInMiddle" class="jalview.viewmodel.OverviewDimensionsHideHiddenTest"/>
        <method signature="OverviewDimensionsHideHiddenTest.testSetBoxFromViewportHiddenRowsAtEnd()[pri:0, instance:jalview.viewmodel.OverviewDimensionsHideHiddenTest@1e8823d2]" name="testSetBoxFromViewportHiddenRowsAtEnd" class="jalview.viewmodel.OverviewDimensionsHideHiddenTest"/>
        <method signature="OverviewDimensionsHideHiddenTest.testSetBoxFromViewportHiddenRowsAtStart()[pri:0, instance:jalview.viewmodel.OverviewDimensionsHideHiddenTest@1e8823d2]" name="testSetBoxFromViewportHiddenRowsAtStart" class="jalview.viewmodel.OverviewDimensionsHideHiddenTest"/>
        <method signature="OverviewDimensionsHideHiddenTest.testSetBoxFromViewportHiddenRowsInMiddle()[pri:0, instance:jalview.viewmodel.OverviewDimensionsHideHiddenTest@1e8823d2]" name="testSetBoxFromViewportHiddenRowsInMiddle" class="jalview.viewmodel.OverviewDimensionsHideHiddenTest"/>
        <method signature="OverviewDimensionsShowHiddenTest.testConstructor()[pri:0, instance:jalview.viewmodel.OverviewDimensionsShowHiddenTest@c1a4620]" name="testConstructor" class="jalview.viewmodel.OverviewDimensionsShowHiddenTest"/>
        <method signature="OverviewDimensionsShowHiddenTest.testDragging()[pri:0, instance:jalview.viewmodel.OverviewDimensionsShowHiddenTest@c1a4620]" name="testDragging" class="jalview.viewmodel.OverviewDimensionsShowHiddenTest"/>
        <method signature="OverviewDimensionsShowHiddenTest.testFromMouseWithHiddenColsAtEnd()[pri:0, instance:jalview.viewmodel.OverviewDimensionsShowHiddenTest@c1a4620]" name="testFromMouseWithHiddenColsAtEnd" class="jalview.viewmodel.OverviewDimensionsShowHiddenTest"/>
        <method signature="OverviewDimensionsShowHiddenTest.testFromMouseWithHiddenColsAtStart()[pri:0, instance:jalview.viewmodel.OverviewDimensionsShowHiddenTest@c1a4620]" name="testFromMouseWithHiddenColsAtStart" class="jalview.viewmodel.OverviewDimensionsShowHiddenTest"/>
        <method signature="OverviewDimensionsShowHiddenTest.testFromMouseWithHiddenColsInMiddle()[pri:0, instance:jalview.viewmodel.OverviewDimensionsShowHiddenTest@c1a4620]" name="testFromMouseWithHiddenColsInMiddle" class="jalview.viewmodel.OverviewDimensionsShowHiddenTest"/>
        <method signature="OverviewDimensionsShowHiddenTest.testFromMouseWithHiddenRowsAtEnd()[pri:0, instance:jalview.viewmodel.OverviewDimensionsShowHiddenTest@c1a4620]" name="testFromMouseWithHiddenRowsAtEnd" class="jalview.viewmodel.OverviewDimensionsShowHiddenTest"/>
        <method signature="OverviewDimensionsShowHiddenTest.testFromMouseWithHiddenRowsAtStart()[pri:0, instance:jalview.viewmodel.OverviewDimensionsShowHiddenTest@c1a4620]" name="testFromMouseWithHiddenRowsAtStart" class="jalview.viewmodel.OverviewDimensionsShowHiddenTest"/>
        <method signature="OverviewDimensionsShowHiddenTest.testFromMouseWithHiddenRowsAtStartWrapped()[pri:0, instance:jalview.viewmodel.OverviewDimensionsShowHiddenTest@c1a4620]" name="testFromMouseWithHiddenRowsAtStartWrapped" class="jalview.viewmodel.OverviewDimensionsShowHiddenTest"/>
        <method signature="OverviewDimensionsShowHiddenTest.testFromMouseWithHiddenRowsInMiddle()[pri:0, instance:jalview.viewmodel.OverviewDimensionsShowHiddenTest@c1a4620]" name="testFromMouseWithHiddenRowsInMiddle" class="jalview.viewmodel.OverviewDimensionsShowHiddenTest"/>
        <method signature="OverviewDimensionsShowHiddenTest.testPositionInBox()[pri:0, instance:jalview.viewmodel.OverviewDimensionsShowHiddenTest@c1a4620]" name="testPositionInBox" class="jalview.viewmodel.OverviewDimensionsShowHiddenTest"/>
        <method signature="OverviewDimensionsShowHiddenTest.testSetBoxFromMouseClick()[pri:0, instance:jalview.viewmodel.OverviewDimensionsShowHiddenTest@c1a4620]" name="testSetBoxFromMouseClick" class="jalview.viewmodel.OverviewDimensionsShowHiddenTest"/>
        <method signature="OverviewDimensionsShowHiddenTest.testSetBoxFromViewport()[pri:0, instance:jalview.viewmodel.OverviewDimensionsShowHiddenTest@c1a4620]" name="testSetBoxFromViewport" class="jalview.viewmodel.OverviewDimensionsShowHiddenTest"/>
        <method signature="OverviewDimensionsShowHiddenTest.testSetBoxFromViewportHiddenColsAtEnd()[pri:0, instance:jalview.viewmodel.OverviewDimensionsShowHiddenTest@c1a4620]" name="testSetBoxFromViewportHiddenColsAtEnd" class="jalview.viewmodel.OverviewDimensionsShowHiddenTest"/>
        <method signature="OverviewDimensionsShowHiddenTest.testSetBoxFromViewportHiddenColsAtStart()[pri:0, instance:jalview.viewmodel.OverviewDimensionsShowHiddenTest@c1a4620]" name="testSetBoxFromViewportHiddenColsAtStart" class="jalview.viewmodel.OverviewDimensionsShowHiddenTest"/>
        <method signature="OverviewDimensionsShowHiddenTest.testSetBoxFromViewportHiddenColsInMiddle()[pri:0, instance:jalview.viewmodel.OverviewDimensionsShowHiddenTest@c1a4620]" name="testSetBoxFromViewportHiddenColsInMiddle" class="jalview.viewmodel.OverviewDimensionsShowHiddenTest"/>
        <method signature="OverviewDimensionsShowHiddenTest.testSetBoxFromViewportHiddenRowsAtEnd()[pri:0, instance:jalview.viewmodel.OverviewDimensionsShowHiddenTest@c1a4620]" name="testSetBoxFromViewportHiddenRowsAtEnd" class="jalview.viewmodel.OverviewDimensionsShowHiddenTest"/>
        <method signature="OverviewDimensionsShowHiddenTest.testSetBoxFromViewportHiddenRowsAtStart()[pri:0, instance:jalview.viewmodel.OverviewDimensionsShowHiddenTest@c1a4620]" name="testSetBoxFromViewportHiddenRowsAtStart" class="jalview.viewmodel.OverviewDimensionsShowHiddenTest"/>
        <method signature="OverviewDimensionsShowHiddenTest.testSetBoxFromViewportHiddenRowsInMiddle()[pri:0, instance:jalview.viewmodel.OverviewDimensionsShowHiddenTest@c1a4620]" name="testSetBoxFromViewportHiddenRowsInMiddle" class="jalview.viewmodel.OverviewDimensionsShowHiddenTest"/>
        <method signature="OverviewResColourFinderTest.testGetResidueBoxColour_none()[pri:0, instance:jalview.renderer.OverviewResColourFinderTest@5d332969]" name="testGetResidueBoxColour_none" class="jalview.renderer.OverviewResColourFinderTest"/>
        <method signature="OverviewResColourFinderTest.testGetResidueBoxColour_userdef()[pri:0, instance:jalview.renderer.OverviewResColourFinderTest@5d332969]" name="testGetResidueBoxColour_userdef" class="jalview.renderer.OverviewResColourFinderTest"/>
        <method signature="OverviewResColourFinderTest.testGetResidueBoxColour_zappo()[pri:0, instance:jalview.renderer.OverviewResColourFinderTest@5d332969]" name="testGetResidueBoxColour_zappo" class="jalview.renderer.OverviewResColourFinderTest"/>
        <method signature="PDBChainTest.testGetChargeColour()[pri:0, instance:mc_view.PDBChainTest@3c49fab6]" name="testGetChargeColour" class="mc_view.PDBChainTest"/>
        <method signature="PDBChainTest.testGetNewlineString()[pri:0, instance:mc_view.PDBChainTest@3c49fab6]" name="testGetNewlineString" class="mc_view.PDBChainTest"/>
        <method signature="PDBChainTest.testMakeBond()[pri:0, instance:mc_view.PDBChainTest@3c49fab6]" name="testMakeBond" class="mc_view.PDBChainTest"/>
        <method signature="PDBChainTest.testMakeCaBondList()[pri:0, instance:mc_view.PDBChainTest@3c49fab6]" name="testMakeCaBondList" class="mc_view.PDBChainTest"/>
        <method signature="PDBChainTest.testMakeCaBondList_nucleotide()[pri:0, instance:mc_view.PDBChainTest@3c49fab6]" name="testMakeCaBondList_nucleotide" class="mc_view.PDBChainTest"/>
        <method signature="PDBChainTest.testMakeExactMapping()[pri:0, instance:mc_view.PDBChainTest@3c49fab6]" name="testMakeExactMapping" class="mc_view.PDBChainTest"/>
        <method signature="PDBChainTest.testMakeResidueList_noAnnotation()[pri:0, instance:mc_view.PDBChainTest@3c49fab6]" name="testMakeResidueList_noAnnotation" class="mc_view.PDBChainTest"/>
        <method signature="PDBChainTest.testMakeResidueList_withTempFactor()[pri:0, instance:mc_view.PDBChainTest@3c49fab6]" name="testMakeResidueList_withTempFactor" class="mc_view.PDBChainTest"/>
        <method signature="PDBChainTest.testPrint()[pri:0, instance:mc_view.PDBChainTest@3c49fab6]" name="testPrint" class="mc_view.PDBChainTest"/>
        <method signature="PDBChainTest.testSetChainColours_colour()[pri:0, instance:mc_view.PDBChainTest@3c49fab6]" name="testSetChainColours_colour" class="mc_view.PDBChainTest"/>
        <method signature="PDBChainTest.testSetChainColours_colourScheme()[pri:0, instance:mc_view.PDBChainTest@3c49fab6]" name="testSetChainColours_colourScheme" class="mc_view.PDBChainTest"/>
        <method signature="PDBChainTest.testSetChargeColours()[pri:0, instance:mc_view.PDBChainTest@3c49fab6]" name="testSetChargeColours" class="mc_view.PDBChainTest"/>
        <method signature="PDBEntryTest.testConstructor_fromDbref()[pri:0, instance:jalview.datamodel.PDBEntryTest@7561db12]" name="testConstructor_fromDbref" class="jalview.datamodel.PDBEntryTest"/>
        <method signature="PDBEntryTest.testEquals()[pri:0, instance:jalview.datamodel.PDBEntryTest@7561db12]" name="testEquals" class="jalview.datamodel.PDBEntryTest"/>
        <method signature="PDBEntryTest.testGetType()[pri:0, instance:jalview.datamodel.PDBEntryTest@7561db12]" name="testGetType" class="jalview.datamodel.PDBEntryTest"/>
        <method signature="PDBEntryTest.testSetChainCode()[pri:0, instance:jalview.datamodel.PDBEntryTest@7561db12]" name="testSetChainCode" class="jalview.datamodel.PDBEntryTest"/>
        <method signature="PDBEntryTest.testTypeMatches()[pri:0, instance:jalview.datamodel.PDBEntryTest@7561db12]" name="testTypeMatches" class="jalview.datamodel.PDBEntryTest"/>
        <method signature="PDBEntryTest.testUpdateFrom()[pri:0, instance:jalview.datamodel.PDBEntryTest@7561db12]" name="testUpdateFrom" class="jalview.datamodel.PDBEntryTest"/>
        <method signature="PDBFTSPanelTest.populateCmbSearchTargetOptionsTest()[pri:0, instance:jalview.fts.service.pdb.PDBFTSPanelTest@4102b1b1]" name="populateCmbSearchTargetOptionsTest" class="jalview.fts.service.pdb.PDBFTSPanelTest"/>
        <method signature="PDBFTSPanelTest.testDecodeSearchTerm()[pri:0, instance:jalview.fts.service.pdb.PDBFTSPanelTest@4102b1b1]" name="testDecodeSearchTerm" class="jalview.fts.service.pdb.PDBFTSPanelTest"/>
        <method signature="PDBFTSPanelTest.testgetPDBIdwithSpecifiedChain()[pri:0, instance:jalview.fts.service.pdb.PDBFTSPanelTest@4102b1b1]" name="testgetPDBIdwithSpecifiedChain" class="jalview.fts.service.pdb.PDBFTSPanelTest"/>
        <method signature="PDBFTSRestClientTest.getPDBDocFieldsAsCommaDelimitedStringTest()[pri:0, instance:jalview.fts.service.pdb.PDBFTSRestClientTest@61a5b4ae]" name="getPDBDocFieldsAsCommaDelimitedStringTest" class="jalview.fts.service.pdb.PDBFTSRestClientTest"/>
        <method signature="PDBFTSRestClientTest.getPDBIdColumIndexTest()[pri:0, instance:jalview.fts.service.pdb.PDBFTSRestClientTest@61a5b4ae]" name="getPDBIdColumIndexTest" class="jalview.fts.service.pdb.PDBFTSRestClientTest"/>
        <method signature="PDBfileTest.testIsRna()[pri:0, instance:mc_view.PDBfileTest@515f4131]" name="testIsRna" class="mc_view.PDBfileTest"/>
        <method signature="PDBfileTest.testParse()[pri:0, instance:mc_view.PDBfileTest@515f4131]" name="testParse" class="mc_view.PDBfileTest"/>
        <method signature="PDBfileTest.testParse_withAnnotations_noSS()[pri:0, instance:mc_view.PDBfileTest@515f4131]" name="testParse_withAnnotations_noSS" class="mc_view.PDBfileTest"/>
        <method signature="PDBfileTest.testParse_withJmolAddAlignmentAnnotations()[pri:0, instance:mc_view.PDBfileTest@515f4131]" name="testParse_withJmolAddAlignmentAnnotations" class="mc_view.PDBfileTest"/>
        <method signature="PDBfileTest.testParse_withJmol_noAnnotations()[pri:0, instance:mc_view.PDBfileTest@515f4131]" name="testParse_withJmol_noAnnotations" class="mc_view.PDBfileTest"/>
        <method signature="PIDColourSchemeTest.testFindColour()[pri:0, instance:jalview.schemes.PIDColourSchemeTest@5c371e13]" name="testFindColour" class="jalview.schemes.PIDColourSchemeTest"/>
        <method signature="PIDColourSchemeTest.testFindColour_ignoreGaps()[pri:0, instance:jalview.schemes.PIDColourSchemeTest@5c371e13]" name="testFindColour_ignoreGaps" class="jalview.schemes.PIDColourSchemeTest"/>
        <method signature="PIDModelTest.testComputePID_matchLongestSequence()[pri:0, instance:jalview.analysis.scoremodels.PIDModelTest@60afd40d]" name="testComputePID_matchLongestSequence" class="jalview.analysis.scoremodels.PIDModelTest"/>
        <method signature="PIDModelTest.testComputePID_matchShortestSequence()[pri:0, instance:jalview.analysis.scoremodels.PIDModelTest@60afd40d]" name="testComputePID_matchShortestSequence" class="jalview.analysis.scoremodels.PIDModelTest"/>
        <method signature="PIDModelTest.testComputePID_matchesComparisonPID()[pri:0, instance:jalview.analysis.scoremodels.PIDModelTest@60afd40d]" name="testComputePID_matchesComparisonPID" class="jalview.analysis.scoremodels.PIDModelTest"/>
        <method signature="PIDModelTest.testGetPairwiseScore()[pri:0, instance:jalview.analysis.scoremodels.PIDModelTest@60afd40d]" name="testGetPairwiseScore" class="jalview.analysis.scoremodels.PIDModelTest"/>
        <method signature="PaintRefresherTest.testGetAssociatedPanels()[pri:0, instance:jalview.gui.PaintRefresherTest@2e6ee0bc]" name="testGetAssociatedPanels" class="jalview.gui.PaintRefresherTest"/>
        <method signature="PaintRefresherTest.testRegister()[pri:0, instance:jalview.gui.PaintRefresherTest@2e6ee0bc]" name="testRegister" class="jalview.gui.PaintRefresherTest"/>
        <method signature="PaintRefresherTest.testRemoveComponent()[pri:0, instance:jalview.gui.PaintRefresherTest@2e6ee0bc]" name="testRemoveComponent" class="jalview.gui.PaintRefresherTest"/>
        <method signature="PairwiseAlignmentPanelTest.testConstructor_noSelectionGroup()[pri:0, instance:jalview.gui.PairwiseAlignmentPanelTest@4201a617]" name="testConstructor_noSelectionGroup" class="jalview.gui.PairwiseAlignmentPanelTest"/>
        <method signature="PairwiseAlignmentPanelTest.testConstructor_withSelectionGroup()[pri:0, instance:jalview.gui.PairwiseAlignmentPanelTest@4201a617]" name="testConstructor_withSelectionGroup" class="jalview.gui.PairwiseAlignmentPanelTest"/>
        <method signature="ParseHtmlBodyAndLinksTest.testParseHtml_noLinks()[pri:0, instance:jalview.util.ParseHtmlBodyAndLinksTest@44ea608c]" name="testParseHtml_noLinks" class="jalview.util.ParseHtmlBodyAndLinksTest"/>
        <method signature="ParseHtmlBodyAndLinksTest.testParseHtml_withLinks()[pri:0, instance:jalview.util.ParseHtmlBodyAndLinksTest@44ea608c]" name="testParseHtml_withLinks" class="jalview.util.ParseHtmlBodyAndLinksTest"/>
        <method signature="ParseHtmlBodyAndLinksTest.testParseHtml_withLinksWithEncoding()[pri:0, instance:jalview.util.ParseHtmlBodyAndLinksTest@44ea608c]" name="testParseHtml_withLinksWithEncoding" class="jalview.util.ParseHtmlBodyAndLinksTest"/>
        <method signature="ParseHtmlBodyAndLinksTest.testParseHtml_withLinksWithParameters()[pri:0, instance:jalview.util.ParseHtmlBodyAndLinksTest@44ea608c]" name="testParseHtml_withLinksWithParameters" class="jalview.util.ParseHtmlBodyAndLinksTest"/>
        <method signature="ParsePropertiesTest.testGetScoresFromDescription()[pri:0, instance:jalview.analysis.ParsePropertiesTest@182b435b]" name="testGetScoresFromDescription" class="jalview.analysis.ParsePropertiesTest"/>
        <method signature="ParsePropertiesTest.testGetScoresFromDescription_twoScores()[pri:0, instance:jalview.analysis.ParsePropertiesTest@182b435b]" name="testGetScoresFromDescription_twoScores" class="jalview.analysis.ParsePropertiesTest"/>
        <method signature="ParsePropertiesTest.testGetScoresFromDescription_wordBoundaries()[pri:0, instance:jalview.analysis.ParsePropertiesTest@182b435b]" name="testGetScoresFromDescription_wordBoundaries" class="jalview.analysis.ParsePropertiesTest"/>
        <method signature="PfamFormatInputTest.testPfamFormatNoLimits()[pri:0, instance:jalview.io.PfamFormatInputTest@5a12c728]" name="testPfamFormatNoLimits" class="jalview.io.PfamFormatInputTest"/>
        <method signature="PfamFormatInputTest.testPfamFormatValidLimits()[pri:0, instance:jalview.io.PfamFormatInputTest@5a12c728]" name="testPfamFormatValidLimits" class="jalview.io.PfamFormatInputTest"/>
        <method signature="PfamFullTest.testGetURL()[pri:0, instance:jalview.ws.dbsources.PfamFullTest@77e2a6e2]" name="testGetURL" class="jalview.ws.dbsources.PfamFullTest"/>
        <method signature="PfamSeedTest.testGetURL()[pri:0, instance:jalview.ws.dbsources.PfamSeedTest@5710768a]" name="testGetURL" class="jalview.ws.dbsources.PfamSeedTest"/>
        <method signature="PhylipFileTests.testInterleavedDataExtraction()[pri:0, instance:jalview.io.PhylipFileTests@79ab3a71]" name="testInterleavedDataExtraction" class="jalview.io.PhylipFileTests"/>
        <method signature="PhylipFileTests.testInterleavedIO()[pri:0, instance:jalview.io.PhylipFileTests@79ab3a71]" name="testInterleavedIO" class="jalview.io.PhylipFileTests"/>
        <method signature="PhylipFileTests.testSequentialDataExtraction()[pri:0, instance:jalview.io.PhylipFileTests@79ab3a71]" name="testSequentialDataExtraction" class="jalview.io.PhylipFileTests"/>
        <method signature="PhylipFileTests.testSequentialIO()[pri:0, instance:jalview.io.PhylipFileTests@79ab3a71]" name="testSequentialIO" class="jalview.io.PhylipFileTests"/>
        <method signature="PlatformTest.testEscapeBackslashes()[pri:0, instance:jalview.util.PlatformTest@50cf5a23]" name="testEscapeBackslashes" class="jalview.util.PlatformTest"/>
        <method signature="PlatformTest.testIsControlDown_mac()[pri:0, instance:jalview.util.PlatformTest@50cf5a23]" name="testIsControlDown_mac" class="jalview.util.PlatformTest"/>
        <method signature="PlatformTest.testIsControlDown_notMac()[pri:0, instance:jalview.util.PlatformTest@50cf5a23]" name="testIsControlDown_notMac" class="jalview.util.PlatformTest"/>
        <method signature="PlatformTest.testPathEquals()[pri:0, instance:jalview.util.PlatformTest@50cf5a23]" name="testPathEquals" class="jalview.util.PlatformTest"/>
        <method signature="PopupMenuTest.testAddFeatureDetails()[pri:0, instance:jalview.gui.PopupMenuTest@467f77a5]" name="testAddFeatureDetails" class="jalview.gui.PopupMenuTest"/>
        <method signature="PopupMenuTest.testAddFeatureDetails_linkedFeatures()[pri:0, instance:jalview.gui.PopupMenuTest@467f77a5]" name="testAddFeatureDetails_linkedFeatures" class="jalview.gui.PopupMenuTest"/>
        <method signature="PopupMenuTest.testBuildAnnotationTypesMenus()[pri:0, instance:jalview.gui.PopupMenuTest@467f77a5]" name="testBuildAnnotationTypesMenus" class="jalview.gui.PopupMenuTest"/>
        <method signature="PopupMenuTest.testBuildAnnotationTypesMenus_hideDisabled()[pri:0, instance:jalview.gui.PopupMenuTest@467f77a5]" name="testBuildAnnotationTypesMenus_hideDisabled" class="jalview.gui.PopupMenuTest"/>
        <method signature="PopupMenuTest.testBuildAnnotationTypesMenus_showDisabled()[pri:0, instance:jalview.gui.PopupMenuTest@467f77a5]" name="testBuildAnnotationTypesMenus_showDisabled" class="jalview.gui.PopupMenuTest"/>
        <method signature="PopupMenuTest.testBuildLinkMenu()[pri:0, instance:jalview.gui.PopupMenuTest@467f77a5]" name="testBuildLinkMenu" class="jalview.gui.PopupMenuTest"/>
        <method signature="PopupMenuTest.testConfigureReferenceAnnotationsMenu()[pri:0, instance:jalview.gui.PopupMenuTest@467f77a5]" name="testConfigureReferenceAnnotationsMenu" class="jalview.gui.PopupMenuTest"/>
        <method signature="PopupMenuTest.testConfigureReferenceAnnotationsMenu_alreadyAdded()[pri:0, instance:jalview.gui.PopupMenuTest@467f77a5]" name="testConfigureReferenceAnnotationsMenu_alreadyAdded" class="jalview.gui.PopupMenuTest"/>
        <method signature="PopupMenuTest.testConfigureReferenceAnnotationsMenu_noReferenceAnnotations()[pri:0, instance:jalview.gui.PopupMenuTest@467f77a5]" name="testConfigureReferenceAnnotationsMenu_noReferenceAnnotations" class="jalview.gui.PopupMenuTest"/>
        <method signature="PopupMenuTest.testConfigureReferenceAnnotationsMenu_noSequenceSelected()[pri:0, instance:jalview.gui.PopupMenuTest@467f77a5]" name="testConfigureReferenceAnnotationsMenu_noSequenceSelected" class="jalview.gui.PopupMenuTest"/>
        <method signature="PopupMenuTest.testConfigureReferenceAnnotationsMenu_notOnAlignment()[pri:0, instance:jalview.gui.PopupMenuTest@467f77a5]" name="testConfigureReferenceAnnotationsMenu_notOnAlignment" class="jalview.gui.PopupMenuTest"/>
        <method signature="PopupMenuTest.testConfigureReferenceAnnotationsMenu_twoViews()[pri:0, instance:jalview.gui.PopupMenuTest@467f77a5]" name="testConfigureReferenceAnnotationsMenu_twoViews" class="jalview.gui.PopupMenuTest"/>
        <method signature="PopupMenuTest.testHideInsertions()[pri:0, instance:jalview.gui.PopupMenuTest@467f77a5]" name="testHideInsertions" class="jalview.gui.PopupMenuTest"/>
        <method signature="ProgressBarTest.testConstructor_prematureInstantiation()[pri:0, instance:jalview.gui.ProgressBarTest@1bb9aa43]" name="testConstructor_prematureInstantiation" class="jalview.gui.ProgressBarTest"/>
        <method signature="ProgressBarTest.testConstructor_wrongLayout()[pri:0, instance:jalview.gui.ProgressBarTest@1bb9aa43]" name="testConstructor_wrongLayout" class="jalview.gui.ProgressBarTest"/>
        <method signature="ProgressBarTest.testSetProgressBar()[pri:0, instance:jalview.gui.ProgressBarTest@1bb9aa43]" name="testSetProgressBar" class="jalview.gui.ProgressBarTest"/>
        <method signature="PymolCommandsTest.testCloseViewer()[pri:0, instance:jalview.ext.pymol.PymolCommandsTest@5f577419]" name="testCloseViewer" class="jalview.ext.pymol.PymolCommandsTest"/>
        <method signature="PymolCommandsTest.testColourByChain()[pri:0, instance:jalview.ext.pymol.PymolCommandsTest@5f577419]" name="testColourByChain" class="jalview.ext.pymol.PymolCommandsTest"/>
        <method signature="PymolCommandsTest.testColourByCharge()[pri:0, instance:jalview.ext.pymol.PymolCommandsTest@5f577419]" name="testColourByCharge" class="jalview.ext.pymol.PymolCommandsTest"/>
        <method signature="PymolCommandsTest.testColourBySequence()[pri:0, instance:jalview.ext.pymol.PymolCommandsTest@5f577419]" name="testColourBySequence" class="jalview.ext.pymol.PymolCommandsTest"/>
        <method signature="PymolCommandsTest.testColourResidues()[pri:0, instance:jalview.ext.pymol.PymolCommandsTest@5f577419]" name="testColourResidues" class="jalview.ext.pymol.PymolCommandsTest"/>
        <method signature="PymolCommandsTest.testGetAtomSpec()[pri:0, instance:jalview.ext.pymol.PymolCommandsTest@5f577419]" name="testGetAtomSpec" class="jalview.ext.pymol.PymolCommandsTest"/>
        <method signature="PymolCommandsTest.testGetAtomSpec_alphaOnly()[pri:0, instance:jalview.ext.pymol.PymolCommandsTest@5f577419]" name="testGetAtomSpec_alphaOnly" class="jalview.ext.pymol.PymolCommandsTest"/>
        <method signature="PymolCommandsTest.testGetModelStartNo()[pri:0, instance:jalview.ext.pymol.PymolCommandsTest@5f577419]" name="testGetModelStartNo" class="jalview.ext.pymol.PymolCommandsTest"/>
        <method signature="PymolCommandsTest.testGetResidueSpec()[pri:0, instance:jalview.ext.pymol.PymolCommandsTest@5f577419]" name="testGetResidueSpec" class="jalview.ext.pymol.PymolCommandsTest"/>
        <method signature="PymolCommandsTest.testLoadFile()[pri:0, instance:jalview.ext.pymol.PymolCommandsTest@5f577419]" name="testLoadFile" class="jalview.ext.pymol.PymolCommandsTest"/>
        <method signature="PymolCommandsTest.testOpenCommandFile()[pri:0, instance:jalview.ext.pymol.PymolCommandsTest@5f577419]" name="testOpenCommandFile" class="jalview.ext.pymol.PymolCommandsTest"/>
        <method signature="PymolCommandsTest.testOpenSession()[pri:0, instance:jalview.ext.pymol.PymolCommandsTest@5f577419]" name="testOpenSession" class="jalview.ext.pymol.PymolCommandsTest"/>
        <method signature="PymolCommandsTest.testSaveSession()[pri:0, instance:jalview.ext.pymol.PymolCommandsTest@5f577419]" name="testSaveSession" class="jalview.ext.pymol.PymolCommandsTest"/>
        <method signature="PymolCommandsTest.testSetAttribute()[pri:0, instance:jalview.ext.pymol.PymolCommandsTest@5f577419]" name="testSetAttribute" class="jalview.ext.pymol.PymolCommandsTest"/>
        <method signature="PymolCommandsTest.testSetAttributes()[pri:0, instance:jalview.ext.pymol.PymolCommandsTest@5f577419]" name="testSetAttributes" class="jalview.ext.pymol.PymolCommandsTest"/>
        <method signature="PymolCommandsTest.testSetBackgroundColour()[pri:0, instance:jalview.ext.pymol.PymolCommandsTest@5f577419]" name="testSetBackgroundColour" class="jalview.ext.pymol.PymolCommandsTest"/>
        <method signature="PymolCommandsTest.testShowBackbone()[pri:0, instance:jalview.ext.pymol.PymolCommandsTest@5f577419]" name="testShowBackbone" class="jalview.ext.pymol.PymolCommandsTest"/>
        <method signature="PymolCommandsTest.testSuperposeStructures()[pri:0, instance:jalview.ext.pymol.PymolCommandsTest@5f577419]" name="testSuperposeStructures" class="jalview.ext.pymol.PymolCommandsTest"/>
        <method signature="PymolManagerTest.testGetPostRequest()[pri:0, instance:jalview.ext.pymol.PymolManagerTest@28fa700e]" name="testGetPostRequest" class="jalview.ext.pymol.PymolManagerTest"/>
        <method signature="PymolManagerTest.testGetPymolPaths()[pri:0, instance:jalview.ext.pymol.PymolManagerTest@28fa700e]" name="testGetPymolPaths" class="jalview.ext.pymol.PymolManagerTest"/>
        <method signature="QuickSortTest.testCharSortByFloat()[pri:0, instance:jalview.util.QuickSortTest@450794b4]" name="testCharSortByFloat" class="jalview.util.QuickSortTest"/>
        <method signature="QuickSortTest.testCharSortByInt()[pri:0, instance:jalview.util.QuickSortTest@450794b4]" name="testCharSortByInt" class="jalview.util.QuickSortTest"/>
        <method signature="QuickSortTest.testSortByInt()[pri:0, instance:jalview.util.QuickSortTest@450794b4]" name="testSortByInt" class="jalview.util.QuickSortTest"/>
        <method signature="QuickSortTest.testSortByString()[pri:0, instance:jalview.util.QuickSortTest@450794b4]" name="testSortByString" class="jalview.util.QuickSortTest"/>
        <method signature="QuickSortTest.testSort_byDoubleValues()[pri:0, instance:jalview.util.QuickSortTest@450794b4]" name="testSort_byDoubleValues" class="jalview.util.QuickSortTest"/>
        <method signature="QuickSortTest.testSort_byFloatValues()[pri:0, instance:jalview.util.QuickSortTest@450794b4]" name="testSort_byFloatValues" class="jalview.util.QuickSortTest"/>
        <method signature="QuickSortTest.testSort_byIntValues()[pri:0, instance:jalview.util.QuickSortTest@450794b4]" name="testSort_byIntValues" class="jalview.util.QuickSortTest"/>
        <method signature="QuickSortTest.testSort_byStringValues()[pri:0, instance:jalview.util.QuickSortTest@450794b4]" name="testSort_byStringValues" class="jalview.util.QuickSortTest"/>
        <method signature="QuickSortTest.testSort_charSortByFloat_mostlyZeroValues()[pri:0, instance:jalview.util.QuickSortTest@450794b4]" name="testSort_charSortByFloat_mostlyZeroValues" class="jalview.util.QuickSortTest"/>
        <method signature="QuickSortTest.testSort_charSortByInt_mostlyZeroValues()[pri:0, instance:jalview.util.QuickSortTest@450794b4]" name="testSort_charSortByInt_mostlyZeroValues" class="jalview.util.QuickSortTest"/>
        <method signature="RNAMLfileTest.testRnamlToStockholmIO()[pri:0, instance:jalview.io.RNAMLfileTest@6e5bfdfc]" name="testRnamlToStockholmIO" class="jalview.io.RNAMLfileTest"/>
        <method signature="RangeElementsIteratorTest.testHasNextAndNextEndHidden()[pri:0, instance:jalview.datamodel.RangeElementsIteratorTest@3301500b]" name="testHasNextAndNextEndHidden" class="jalview.datamodel.RangeElementsIteratorTest"/>
        <method signature="RangeElementsIteratorTest.testHasNextAndNextNoHidden()[pri:0, instance:jalview.datamodel.RangeElementsIteratorTest@3301500b]" name="testHasNextAndNextNoHidden" class="jalview.datamodel.RangeElementsIteratorTest"/>
        <method signature="RangeElementsIteratorTest.testHasNextAndNextStartHidden()[pri:0, instance:jalview.datamodel.RangeElementsIteratorTest@3301500b]" name="testHasNextAndNextStartHidden" class="jalview.datamodel.RangeElementsIteratorTest"/>
        <method signature="RangeElementsIteratorTest.testHasNextAndNextWithHidden()[pri:0, instance:jalview.datamodel.RangeElementsIteratorTest@3301500b]" name="testHasNextAndNextWithHidden" class="jalview.datamodel.RangeElementsIteratorTest"/>
        <method signature="RangeElementsIteratorTest.testLastNextEndHidden()[pri:0, instance:jalview.datamodel.RangeElementsIteratorTest@3301500b]" name="testLastNextEndHidden" class="jalview.datamodel.RangeElementsIteratorTest"/>
        <method signature="RangeElementsIteratorTest.testLastNextNoHidden()[pri:0, instance:jalview.datamodel.RangeElementsIteratorTest@3301500b]" name="testLastNextNoHidden" class="jalview.datamodel.RangeElementsIteratorTest"/>
        <method signature="RangeElementsIteratorTest.testLastNextStartHidden()[pri:0, instance:jalview.datamodel.RangeElementsIteratorTest@3301500b]" name="testLastNextStartHidden" class="jalview.datamodel.RangeElementsIteratorTest"/>
        <method signature="RangeElementsIteratorTest.testLastNextWithHidden()[pri:0, instance:jalview.datamodel.RangeElementsIteratorTest@3301500b]" name="testLastNextWithHidden" class="jalview.datamodel.RangeElementsIteratorTest"/>
        <method signature="RangeElementsIteratorTest.testRemove()[pri:0, instance:jalview.datamodel.RangeElementsIteratorTest@3301500b]" name="testRemove" class="jalview.datamodel.RangeElementsIteratorTest"/>
        <method signature="ResidueColourFinderTest.testGetResidueColour_none()[pri:0, instance:jalview.renderer.ResidueColourFinderTest@7cc9ce8]" name="testGetResidueColour_none" class="jalview.renderer.ResidueColourFinderTest"/>
        <method signature="ResidueColourFinderTest.testGetResidueColour_userdef()[pri:0, instance:jalview.renderer.ResidueColourFinderTest@7cc9ce8]" name="testGetResidueColour_userdef" class="jalview.renderer.ResidueColourFinderTest"/>
        <method signature="ResidueColourFinderTest.testGetResidueColour_zappo()[pri:0, instance:jalview.renderer.ResidueColourFinderTest@7cc9ce8]" name="testGetResidueColour_zappo" class="jalview.renderer.ResidueColourFinderTest"/>
        <method signature="ResidueColourSchemeTest.testGetName()[pri:0, instance:jalview.schemes.ResidueColourSchemeTest@530a8454]" name="testGetName" class="jalview.schemes.ResidueColourSchemeTest"/>
        <method signature="ResidueColourSchemeTest.testIsApplicableTo()[pri:0, instance:jalview.schemes.ResidueColourSchemeTest@530a8454]" name="testIsApplicableTo" class="jalview.schemes.ResidueColourSchemeTest"/>
        <method signature="ResidueColourSchemeTest.testIsApplicableTo_dynamicColourScheme()[pri:0, instance:jalview.schemes.ResidueColourSchemeTest@530a8454]" name="testIsApplicableTo_dynamicColourScheme" class="jalview.schemes.ResidueColourSchemeTest"/>
        <method signature="ResidueCountTest.testAddGap()[pri:0, instance:jalview.datamodel.ResidueCountTest@24b52d3e]" name="testAddGap" class="jalview.datamodel.ResidueCountTest"/>
        <method signature="ResidueCountTest.testGetModalCount()[pri:0, instance:jalview.datamodel.ResidueCountTest@24b52d3e]" name="testGetModalCount" class="jalview.datamodel.ResidueCountTest"/>
        <method signature="ResidueCountTest.testGetResiduesForCount()[pri:0, instance:jalview.datamodel.ResidueCountTest@24b52d3e]" name="testGetResiduesForCount" class="jalview.datamodel.ResidueCountTest"/>
        <method signature="ResidueCountTest.testGetSymbolCounts_nucleotide()[pri:0, instance:jalview.datamodel.ResidueCountTest@24b52d3e]" name="testGetSymbolCounts_nucleotide" class="jalview.datamodel.ResidueCountTest"/>
        <method signature="ResidueCountTest.testGetSymbolCounts_peptide()[pri:0, instance:jalview.datamodel.ResidueCountTest@24b52d3e]" name="testGetSymbolCounts_peptide" class="jalview.datamodel.ResidueCountTest"/>
        <method signature="ResidueCountTest.testGetTooltip()[pri:0, instance:jalview.datamodel.ResidueCountTest@24b52d3e]" name="testGetTooltip" class="jalview.datamodel.ResidueCountTest"/>
        <method signature="ResidueCountTest.testOverflow()[pri:0, instance:jalview.datamodel.ResidueCountTest@24b52d3e]" name="testOverflow" class="jalview.datamodel.ResidueCountTest"/>
        <method signature="ResidueCountTest.testPut()[pri:0, instance:jalview.datamodel.ResidueCountTest@24b52d3e]" name="testPut" class="jalview.datamodel.ResidueCountTest"/>
        <method signature="ResidueCountTest.testToString()[pri:0, instance:jalview.datamodel.ResidueCountTest@24b52d3e]" name="testToString" class="jalview.datamodel.ResidueCountTest"/>
        <method signature="ResidueCountTest.test_countNucleotide()[pri:0, instance:jalview.datamodel.ResidueCountTest@24b52d3e]" name="test_countNucleotide" class="jalview.datamodel.ResidueCountTest"/>
        <method signature="ResidueCountTest.test_countPeptide()[pri:0, instance:jalview.datamodel.ResidueCountTest@24b52d3e]" name="test_countPeptide" class="jalview.datamodel.ResidueCountTest"/>
        <method signature="ResidueCountTest.test_unexpectedNucleotide()[pri:0, instance:jalview.datamodel.ResidueCountTest@24b52d3e]" name="test_unexpectedNucleotide" class="jalview.datamodel.ResidueCountTest"/>
        <method signature="ResidueCountTest.test_unexpectedPeptide()[pri:0, instance:jalview.datamodel.ResidueCountTest@24b52d3e]" name="test_unexpectedPeptide" class="jalview.datamodel.ResidueCountTest"/>
        <method signature="ResiduePropertiesTest.testCodonTranslate()[pri:0, instance:jalview.schemes.ResiduePropertiesTest@1e34c607]" name="testCodonTranslate" class="jalview.schemes.ResiduePropertiesTest"/>
        <method signature="ResiduePropertiesTest.testCodonTranslate_ambiguityCodes()[pri:0, instance:jalview.schemes.ResiduePropertiesTest@1e34c607]" name="testCodonTranslate_ambiguityCodes" class="jalview.schemes.ResiduePropertiesTest"/>
        <method signature="ResiduePropertiesTest.testGetCanonicalAminoAcid()[pri:0, instance:jalview.schemes.ResiduePropertiesTest@1e34c607]" name="testGetCanonicalAminoAcid" class="jalview.schemes.ResiduePropertiesTest"/>
        <method signature="ResiduePropertiesTest.testGetDssp3State()[pri:0, instance:jalview.schemes.ResiduePropertiesTest@1e34c607]" name="testGetDssp3State" class="jalview.schemes.ResiduePropertiesTest"/>
        <method signature="ResiduePropertiesTest.testGetResidues_nucleotide()[pri:0, instance:jalview.schemes.ResiduePropertiesTest@1e34c607]" name="testGetResidues_nucleotide" class="jalview.schemes.ResiduePropertiesTest"/>
        <method signature="ResiduePropertiesTest.testGetResidues_peptide()[pri:0, instance:jalview.schemes.ResiduePropertiesTest@1e34c607]" name="testGetResidues_peptide" class="jalview.schemes.ResiduePropertiesTest"/>
        <method signature="ResiduePropertiesTest.testGetSingleCharacterCode()[pri:0, instance:jalview.schemes.ResiduePropertiesTest@1e34c607]" name="testGetSingleCharacterCode" class="jalview.schemes.ResiduePropertiesTest"/>
        <method signature="ResiduePropertiesTest.testPhysicoChemicalProperties()[pri:0, instance:jalview.schemes.ResiduePropertiesTest@1e34c607]" name="testPhysicoChemicalProperties" class="jalview.schemes.ResiduePropertiesTest"/>
        <method signature="ResidueShaderTest.testAboveThreshold()[pri:0, instance:jalview.renderer.ResidueShaderTest@2e27d72f]" name="testAboveThreshold" class="jalview.renderer.ResidueShaderTest"/>
        <method signature="ResidueShaderTest.testApplyConservation()[pri:0, instance:jalview.renderer.ResidueShaderTest@2e27d72f]" name="testApplyConservation" class="jalview.renderer.ResidueShaderTest"/>
        <method signature="ResidueShaderTest.testFindColour_gapColour()[pri:0, instance:jalview.renderer.ResidueShaderTest@2e27d72f]" name="testFindColour_gapColour" class="jalview.renderer.ResidueShaderTest"/>
        <method signature="ResidueTest.testFindAtom()[pri:0, instance:mc_view.ResidueTest@74518890]" name="testFindAtom" class="mc_view.ResidueTest"/>
        <method signature="RestClientTest.testGetRestClient()[pri:0, instance:jalview.ws.rest.RestClientTest@51671b08]" name="testGetRestClient" class="jalview.ws.rest.RestClientTest"/>
        <method signature="RfamFullTest.testGetURL()[pri:0, instance:jalview.ws.dbsources.RfamFullTest@6e0d4a8]" name="testGetURL" class="jalview.ws.dbsources.RfamFullTest"/>
        <method signature="RfamSeedTest.testGetURL()[pri:0, instance:jalview.ws.dbsources.RfamSeedTest@64d7b720]" name="testGetURL" class="jalview.ws.dbsources.RfamSeedTest"/>
        <method signature="RnaTest.testGetHelixMap_oneHelix()[pri:0, instance:jalview.analysis.RnaTest@4d0402b]" name="testGetHelixMap_oneHelix" class="jalview.analysis.RnaTest"/>
        <method signature="RnaTest.testGetHelixMap_twoHelices()[pri:0, instance:jalview.analysis.RnaTest@4d0402b]" name="testGetHelixMap_twoHelices" class="jalview.analysis.RnaTest"/>
        <method signature="RnaTest.testGetMatchingOpeningParenthesis()[pri:0, instance:jalview.analysis.RnaTest@4d0402b]" name="testGetMatchingOpeningParenthesis" class="jalview.analysis.RnaTest"/>
        <method signature="RnaTest.testGetRNASecStrucState()[pri:0, instance:jalview.analysis.RnaTest@4d0402b]" name="testGetRNASecStrucState" class="jalview.analysis.RnaTest"/>
        <method signature="RnaTest.testGetSimpleBPs()[pri:0, instance:jalview.analysis.RnaTest@4d0402b]" name="testGetSimpleBPs" class="jalview.analysis.RnaTest"/>
        <method signature="RnaTest.testGetSimpleBPs_unmatchedCloser()[pri:0, instance:jalview.analysis.RnaTest@4d0402b]" name="testGetSimpleBPs_unmatchedCloser" class="jalview.analysis.RnaTest"/>
        <method signature="RnaTest.testGetSimpleBPs_unmatchedOpener()[pri:0, instance:jalview.analysis.RnaTest@4d0402b]" name="testGetSimpleBPs_unmatchedOpener" class="jalview.analysis.RnaTest"/>
        <method signature="RnaTest.testIsCanonicalOrWobblePair()[pri:0, instance:jalview.analysis.RnaTest@4d0402b]" name="testIsCanonicalOrWobblePair" class="jalview.analysis.RnaTest"/>
        <method signature="RnaTest.testIsCanonicalPair()[pri:0, instance:jalview.analysis.RnaTest@4d0402b]" name="testIsCanonicalPair" class="jalview.analysis.RnaTest"/>
        <method signature="RnaTest.testIsClosingParenthesis()[pri:0, instance:jalview.analysis.RnaTest@4d0402b]" name="testIsClosingParenthesis" class="jalview.analysis.RnaTest"/>
        <method signature="RnaTest.testIsOpeningParenthesis()[pri:0, instance:jalview.analysis.RnaTest@4d0402b]" name="testIsOpeningParenthesis" class="jalview.analysis.RnaTest"/>
        <method signature="RnaTest.testIsRnaSecondaryStructureSymbol()[pri:0, instance:jalview.analysis.RnaTest@4d0402b]" name="testIsRnaSecondaryStructureSymbol" class="jalview.analysis.RnaTest"/>
        <method signature="RotatableMatrixTest.testGetRotation()[pri:0, instance:jalview.math.RotatableMatrixTest@6ac4944a]" name="testGetRotation" class="jalview.math.RotatableMatrixTest"/>
        <method signature="RotatableMatrixTest.testPreMultiply()[pri:0, instance:jalview.math.RotatableMatrixTest@6ac4944a]" name="testPreMultiply" class="jalview.math.RotatableMatrixTest"/>
        <method signature="RotatableMatrixTest.testPrint()[pri:0, instance:jalview.math.RotatableMatrixTest@6ac4944a]" name="testPrint" class="jalview.math.RotatableMatrixTest"/>
        <method signature="RotatableMatrixTest.testVectorMultiply()[pri:0, instance:jalview.math.RotatableMatrixTest@6ac4944a]" name="testVectorMultiply" class="jalview.math.RotatableMatrixTest"/>
        <method signature="ScalePanelTest.testBuildPopupMenu()[pri:0, instance:jalview.gui.ScalePanelTest@420bc288]" name="testBuildPopupMenu" class="jalview.gui.ScalePanelTest"/>
        <method signature="ScalePanelTest.testPreventNegativeStartColumn()[pri:0, instance:jalview.gui.ScalePanelTest@420bc288]" name="testPreventNegativeStartColumn" class="jalview.gui.ScalePanelTest"/>
        <method signature="ScalePanelTest.testSelectColumns_withHidden()[pri:0, instance:jalview.gui.ScalePanelTest@420bc288]" name="testSelectColumns_withHidden" class="jalview.gui.ScalePanelTest"/>
        <method signature="ScaleRendererTest.testCalculateMarks()[pri:0, instance:jalview.renderer.ScaleRendererTest@c0b41d6]" name="testCalculateMarks" class="jalview.renderer.ScaleRendererTest"/>
        <method signature="ScoreMatrixFileTest.testParseMatrix_aaIndexBlosum80()[pri:0, instance:jalview.io.ScoreMatrixFileTest@3d829787]" name="testParseMatrix_aaIndexBlosum80" class="jalview.io.ScoreMatrixFileTest"/>
        <method signature="ScoreMatrixFileTest.testParseMatrix_aaindexFormat()[pri:0, instance:jalview.io.ScoreMatrixFileTest@3d829787]" name="testParseMatrix_aaindexFormat" class="jalview.io.ScoreMatrixFileTest"/>
        <method signature="ScoreMatrixFileTest.testParseMatrix_aaindex_extraDataLines()[pri:0, instance:jalview.io.ScoreMatrixFileTest@3d829787]" name="testParseMatrix_aaindex_extraDataLines" class="jalview.io.ScoreMatrixFileTest"/>
        <method signature="ScoreMatrixFileTest.testParseMatrix_aaindex_mMissing()[pri:0, instance:jalview.io.ScoreMatrixFileTest@3d829787]" name="testParseMatrix_aaindex_mMissing" class="jalview.io.ScoreMatrixFileTest"/>
        <method signature="ScoreMatrixFileTest.testParseMatrix_aaindex_rowColMismatch()[pri:0, instance:jalview.io.ScoreMatrixFileTest@3d829787]" name="testParseMatrix_aaindex_rowColMismatch" class="jalview.io.ScoreMatrixFileTest"/>
        <method signature="ScoreMatrixFileTest.testParseMatrix_aaindex_tooFewColumns()[pri:0, instance:jalview.io.ScoreMatrixFileTest@3d829787]" name="testParseMatrix_aaindex_tooFewColumns" class="jalview.io.ScoreMatrixFileTest"/>
        <method signature="ScoreMatrixFileTest.testParseMatrix_aaindex_tooManyRows()[pri:0, instance:jalview.io.ScoreMatrixFileTest@3d829787]" name="testParseMatrix_aaindex_tooManyRows" class="jalview.io.ScoreMatrixFileTest"/>
        <method signature="ScoreMatrixFileTest.testParseMatrix_headerMissing()[pri:0, instance:jalview.io.ScoreMatrixFileTest@3d829787]" name="testParseMatrix_headerMissing" class="jalview.io.ScoreMatrixFileTest"/>
        <method signature="ScoreMatrixFileTest.testParseMatrix_ncbiBadDelimiter()[pri:0, instance:jalview.io.ScoreMatrixFileTest@3d829787]" name="testParseMatrix_ncbiBadDelimiter" class="jalview.io.ScoreMatrixFileTest"/>
        <method signature="ScoreMatrixFileTest.testParseMatrix_ncbiBadFloat()[pri:0, instance:jalview.io.ScoreMatrixFileTest@3d829787]" name="testParseMatrix_ncbiBadFloat" class="jalview.io.ScoreMatrixFileTest"/>
        <method signature="ScoreMatrixFileTest.testParseMatrix_ncbiBadGuideCharacter()[pri:0, instance:jalview.io.ScoreMatrixFileTest@3d829787]" name="testParseMatrix_ncbiBadGuideCharacter" class="jalview.io.ScoreMatrixFileTest"/>
        <method signature="ScoreMatrixFileTest.testParseMatrix_ncbiFormat()[pri:0, instance:jalview.io.ScoreMatrixFileTest@3d829787]" name="testParseMatrix_ncbiFormat" class="jalview.io.ScoreMatrixFileTest"/>
        <method signature="ScoreMatrixFileTest.testParseMatrix_ncbiHeaderRepeated()[pri:0, instance:jalview.io.ScoreMatrixFileTest@3d829787]" name="testParseMatrix_ncbiHeaderRepeated" class="jalview.io.ScoreMatrixFileTest"/>
        <method signature="ScoreMatrixFileTest.testParseMatrix_ncbiMixedDelimiters()[pri:0, instance:jalview.io.ScoreMatrixFileTest@3d829787]" name="testParseMatrix_ncbiMixedDelimiters" class="jalview.io.ScoreMatrixFileTest"/>
        <method signature="ScoreMatrixFileTest.testParseMatrix_ncbiNameMissing()[pri:0, instance:jalview.io.ScoreMatrixFileTest@3d829787]" name="testParseMatrix_ncbiNameMissing" class="jalview.io.ScoreMatrixFileTest"/>
        <method signature="ScoreMatrixFileTest.testParseMatrix_ncbiNotEnoughColumns()[pri:0, instance:jalview.io.ScoreMatrixFileTest@3d829787]" name="testParseMatrix_ncbiNotEnoughColumns" class="jalview.io.ScoreMatrixFileTest"/>
        <method signature="ScoreMatrixFileTest.testParseMatrix_ncbiNotEnoughRows()[pri:0, instance:jalview.io.ScoreMatrixFileTest@3d829787]" name="testParseMatrix_ncbiNotEnoughRows" class="jalview.io.ScoreMatrixFileTest"/>
        <method signature="ScoreMatrixFileTest.testParseMatrix_ncbiTooManyColumns()[pri:0, instance:jalview.io.ScoreMatrixFileTest@3d829787]" name="testParseMatrix_ncbiTooManyColumns" class="jalview.io.ScoreMatrixFileTest"/>
        <method signature="ScoreMatrixFileTest.testParseMatrix_ncbiTooManyRows()[pri:0, instance:jalview.io.ScoreMatrixFileTest@3d829787]" name="testParseMatrix_ncbiTooManyRows" class="jalview.io.ScoreMatrixFileTest"/>
        <method signature="ScoreMatrixFileTest.testParse_ncbiFormat()[pri:0, instance:jalview.io.ScoreMatrixFileTest@3d829787]" name="testParse_ncbiFormat" class="jalview.io.ScoreMatrixFileTest"/>
        <method signature="ScoreMatrixTest.testBlosum62_values()[pri:0, instance:jalview.analysis.scoremodels.ScoreMatrixTest@28a2a3e7]" name="testBlosum62_values" class="jalview.analysis.scoremodels.ScoreMatrixTest"/>
        <method signature="ScoreMatrixTest.testBuildSymbolIndex()[pri:0, instance:jalview.analysis.scoremodels.ScoreMatrixTest@28a2a3e7]" name="testBuildSymbolIndex" class="jalview.analysis.scoremodels.ScoreMatrixTest"/>
        <method signature="ScoreMatrixTest.testBuildSymbolIndex_nonAscii()[pri:0, instance:jalview.analysis.scoremodels.ScoreMatrixTest@28a2a3e7]" name="testBuildSymbolIndex_nonAscii" class="jalview.analysis.scoremodels.ScoreMatrixTest"/>
        <method signature="ScoreMatrixTest.testComputePairwiseScores()[pri:0, instance:jalview.analysis.scoremodels.ScoreMatrixTest@28a2a3e7]" name="testComputePairwiseScores" class="jalview.analysis.scoremodels.ScoreMatrixTest"/>
        <method signature="ScoreMatrixTest.testConstructor()[pri:0, instance:jalview.analysis.scoremodels.ScoreMatrixTest@28a2a3e7]" name="testConstructor" class="jalview.analysis.scoremodels.ScoreMatrixTest"/>
        <method signature="ScoreMatrixTest.testConstructor_gapDash()[pri:0, instance:jalview.analysis.scoremodels.ScoreMatrixTest@28a2a3e7]" name="testConstructor_gapDash" class="jalview.analysis.scoremodels.ScoreMatrixTest"/>
        <method signature="ScoreMatrixTest.testConstructor_matrixNotSquare()[pri:0, instance:jalview.analysis.scoremodels.ScoreMatrixTest@28a2a3e7]" name="testConstructor_matrixNotSquare" class="jalview.analysis.scoremodels.ScoreMatrixTest"/>
        <method signature="ScoreMatrixTest.testConstructor_matrixTooBig()[pri:0, instance:jalview.analysis.scoremodels.ScoreMatrixTest@28a2a3e7]" name="testConstructor_matrixTooBig" class="jalview.analysis.scoremodels.ScoreMatrixTest"/>
        <method signature="ScoreMatrixTest.testConstructor_matrixTooSmall()[pri:0, instance:jalview.analysis.scoremodels.ScoreMatrixTest@28a2a3e7]" name="testConstructor_matrixTooSmall" class="jalview.analysis.scoremodels.ScoreMatrixTest"/>
        <method signature="ScoreMatrixTest.testEqualsAndHashCode()[pri:0, instance:jalview.analysis.scoremodels.ScoreMatrixTest@28a2a3e7]" name="testEqualsAndHashCode" class="jalview.analysis.scoremodels.ScoreMatrixTest"/>
        <method signature="ScoreMatrixTest.testGetMatrix()[pri:0, instance:jalview.analysis.scoremodels.ScoreMatrixTest@28a2a3e7]" name="testGetMatrix" class="jalview.analysis.scoremodels.ScoreMatrixTest"/>
        <method signature="ScoreMatrixTest.testGetMatrixIndex()[pri:0, instance:jalview.analysis.scoremodels.ScoreMatrixTest@28a2a3e7]" name="testGetMatrixIndex" class="jalview.analysis.scoremodels.ScoreMatrixTest"/>
        <method signature="ScoreMatrixTest.testGetMaximumScore()[pri:0, instance:jalview.analysis.scoremodels.ScoreMatrixTest@28a2a3e7]" name="testGetMaximumScore" class="jalview.analysis.scoremodels.ScoreMatrixTest"/>
        <method signature="ScoreMatrixTest.testGetMinimumScore()[pri:0, instance:jalview.analysis.scoremodels.ScoreMatrixTest@28a2a3e7]" name="testGetMinimumScore" class="jalview.analysis.scoremodels.ScoreMatrixTest"/>
        <method signature="ScoreMatrixTest.testGetPairwiseScore()[pri:0, instance:jalview.analysis.scoremodels.ScoreMatrixTest@28a2a3e7]" name="testGetPairwiseScore" class="jalview.analysis.scoremodels.ScoreMatrixTest"/>
        <method signature="ScoreMatrixTest.testGetSize()[pri:0, instance:jalview.analysis.scoremodels.ScoreMatrixTest@28a2a3e7]" name="testGetSize" class="jalview.analysis.scoremodels.ScoreMatrixTest"/>
        <method signature="ScoreMatrixTest.testIsSymmetric()[pri:0, instance:jalview.analysis.scoremodels.ScoreMatrixTest@28a2a3e7]" name="testIsSymmetric" class="jalview.analysis.scoremodels.ScoreMatrixTest"/>
        <method signature="ScoreMatrixTest.testOutputMatrix_html()[pri:0, instance:jalview.analysis.scoremodels.ScoreMatrixTest@28a2a3e7]" name="testOutputMatrix_html" class="jalview.analysis.scoremodels.ScoreMatrixTest"/>
        <method signature="ScoreMatrixTest.testOutputMatrix_roundTrip()[pri:0, instance:jalview.analysis.scoremodels.ScoreMatrixTest@28a2a3e7]" name="testOutputMatrix_roundTrip" class="jalview.analysis.scoremodels.ScoreMatrixTest"/>
        <method signature="ScoreMatrixTest.testSymmetric()[pri:0, instance:jalview.analysis.scoremodels.ScoreMatrixTest@28a2a3e7]" name="testSymmetric" class="jalview.analysis.scoremodels.ScoreMatrixTest"/>
        <method signature="ScoreMatrixTest.testcomputeSimilarity_matchLongestSequence()[pri:0, instance:jalview.analysis.scoremodels.ScoreMatrixTest@28a2a3e7]" name="testcomputeSimilarity_matchLongestSequence" class="jalview.analysis.scoremodels.ScoreMatrixTest"/>
        <method signature="ScoreMatrixTest.testcomputeSimilarity_matchShortestSequence()[pri:0, instance:jalview.analysis.scoremodels.ScoreMatrixTest@28a2a3e7]" name="testcomputeSimilarity_matchShortestSequence" class="jalview.analysis.scoremodels.ScoreMatrixTest"/>
        <method signature="ScoreModelsTest.testConstructor()[pri:0, instance:jalview.analysis.scoremodels.ScoreModelsTest@3f2049b6]" name="testConstructor" class="jalview.analysis.scoremodels.ScoreModelsTest"/>
        <method signature="SearchResultsTest.testAddResult()[pri:0, instance:jalview.datamodel.SearchResultsTest@15deb1dc]" name="testAddResult" class="jalview.datamodel.SearchResultsTest"/>
        <method signature="SearchResultsTest.testEquals()[pri:0, instance:jalview.datamodel.SearchResultsTest@15deb1dc]" name="testEquals" class="jalview.datamodel.SearchResultsTest"/>
        <method signature="SearchResultsTest.testEquals_distinctSequences()[pri:0, instance:jalview.datamodel.SearchResultsTest@15deb1dc]" name="testEquals_distinctSequences" class="jalview.datamodel.SearchResultsTest"/>
        <method signature="SearchResultsTest.testEquals_orderDiffers()[pri:0, instance:jalview.datamodel.SearchResultsTest@15deb1dc]" name="testEquals_orderDiffers" class="jalview.datamodel.SearchResultsTest"/>
        <method signature="SearchResultsTest.testHashcode()[pri:0, instance:jalview.datamodel.SearchResultsTest@15deb1dc]" name="testHashcode" class="jalview.datamodel.SearchResultsTest"/>
        <method signature="SearchResultsTest.testInvolvesSequence()[pri:0, instance:jalview.datamodel.SearchResultsTest@15deb1dc]" name="testInvolvesSequence" class="jalview.datamodel.SearchResultsTest"/>
        <method signature="SearchResultsTest.testMarkColumns()[pri:0, instance:jalview.datamodel.SearchResultsTest@15deb1dc]" name="testMarkColumns" class="jalview.datamodel.SearchResultsTest"/>
        <method signature="SearchResultsTest.testMatchConstructor()[pri:0, instance:jalview.datamodel.SearchResultsTest@15deb1dc]" name="testMatchConstructor" class="jalview.datamodel.SearchResultsTest"/>
        <method signature="SearchResultsTest.testMatchContains()[pri:0, instance:jalview.datamodel.SearchResultsTest@15deb1dc]" name="testMatchContains" class="jalview.datamodel.SearchResultsTest"/>
        <method signature="SearchResultsTest.testToString()[pri:0, instance:jalview.datamodel.SearchResultsTest@15deb1dc]" name="testToString" class="jalview.datamodel.SearchResultsTest"/>
        <method signature="SeqCanvasTest.testCalculateWrappedGeometry_noAnnotations()[pri:0, instance:jalview.gui.SeqCanvasTest@df5f5c0]" name="testCalculateWrappedGeometry_noAnnotations" class="jalview.gui.SeqCanvasTest"/>
        <method signature="SeqCanvasTest.testCalculateWrappedGeometry_withAnnotations()[pri:0, instance:jalview.gui.SeqCanvasTest@df5f5c0]" name="testCalculateWrappedGeometry_withAnnotations" class="jalview.gui.SeqCanvasTest"/>
        <method signature="SeqCanvasTest.testClear_HighlightAndSelection()[pri:0, instance:jalview.gui.SeqCanvasTest@df5f5c0]" name="testClear_HighlightAndSelection" class="jalview.gui.SeqCanvasTest"/>
        <method signature="SeqCigarTest.testFindPosition()[pri:0, instance:jalview.datamodel.SeqCigarTest@6e9c413e]" name="testFindPosition" class="jalview.datamodel.SeqCigarTest"/>
        <method signature="SeqCigarTest.testSomething()[pri:0, instance:jalview.datamodel.SeqCigarTest@6e9c413e]" name="testSomething" class="jalview.datamodel.SeqCigarTest"/>
        <method signature="SeqPanelTest.testAmbiguousAminoAcidGetsStatusMessage()[pri:0, instance:jalview.gui.SeqPanelTest@308a6984]" name="testAmbiguousAminoAcidGetsStatusMessage" class="jalview.gui.SeqPanelTest"/>
        <method signature="SeqPanelTest.testFindColumn_unwrapped()[pri:0, instance:jalview.gui.SeqPanelTest@308a6984]" name="testFindColumn_unwrapped" class="jalview.gui.SeqPanelTest"/>
        <method signature="SeqPanelTest.testFindColumn_wrapped()[pri:0, instance:jalview.gui.SeqPanelTest@308a6984]" name="testFindColumn_wrapped" class="jalview.gui.SeqPanelTest"/>
        <method signature="SeqPanelTest.testFindMousePosition_wrapped_annotations()[pri:0, instance:jalview.gui.SeqPanelTest@308a6984]" name="testFindMousePosition_wrapped_annotations" class="jalview.gui.SeqPanelTest"/>
        <method signature="SeqPanelTest.testFindMousePosition_wrapped_noAnnotations()[pri:0, instance:jalview.gui.SeqPanelTest@308a6984]" name="testFindMousePosition_wrapped_noAnnotations" class="jalview.gui.SeqPanelTest"/>
        <method signature="SeqPanelTest.testFindMousePosition_wrapped_scaleAbove()[pri:0, instance:jalview.gui.SeqPanelTest@308a6984]" name="testFindMousePosition_wrapped_scaleAbove" class="jalview.gui.SeqPanelTest"/>
        <method signature="SeqPanelTest.testFindMousePosition_wrapped_scales_longSequence()[pri:0, instance:jalview.gui.SeqPanelTest@308a6984]" name="testFindMousePosition_wrapped_scales_longSequence" class="jalview.gui.SeqPanelTest"/>
        <method signature="SeqPanelTest.testGetEditStatusMessage()[pri:0, instance:jalview.gui.SeqPanelTest@308a6984]" name="testGetEditStatusMessage" class="jalview.gui.SeqPanelTest"/>
        <method signature="SeqPanelTest.testGetEditStatusMessage_lockedEditing()[pri:0, instance:jalview.gui.SeqPanelTest@308a6984]" name="testGetEditStatusMessage_lockedEditing" class="jalview.gui.SeqPanelTest"/>
        <method signature="SeqPanelTest.testSetStatusReturnsNearestResiduePosition()[pri:0, instance:jalview.gui.SeqPanelTest@308a6984]" name="testSetStatusReturnsNearestResiduePosition" class="jalview.gui.SeqPanelTest"/>
        <method signature="SeqsetUtilsTest.testSeqFeatureAddition()[pri:0, instance:jalview.analysis.SeqsetUtilsTest@2fa7ae9]" name="testSeqFeatureAddition" class="jalview.analysis.SeqsetUtilsTest"/>
        <method signature="SequenceAnnotationReportTest.testAppendFeature_DescEqualsType()[pri:0, instance:jalview.io.SequenceAnnotationReportTest@71652c98]" name="testAppendFeature_DescEqualsType" class="jalview.io.SequenceAnnotationReportTest"/>
        <method signature="SequenceAnnotationReportTest.testAppendFeature_colouredByAttribute()[pri:0, instance:jalview.io.SequenceAnnotationReportTest@71652c98]" name="testAppendFeature_colouredByAttribute" class="jalview.io.SequenceAnnotationReportTest"/>
        <method signature="SequenceAnnotationReportTest.testAppendFeature_disulfideBond()[pri:0, instance:jalview.io.SequenceAnnotationReportTest@71652c98]" name="testAppendFeature_disulfideBond" class="jalview.io.SequenceAnnotationReportTest"/>
        <method signature="SequenceAnnotationReportTest.testAppendFeature_noScore()[pri:0, instance:jalview.io.SequenceAnnotationReportTest@71652c98]" name="testAppendFeature_noScore" class="jalview.io.SequenceAnnotationReportTest"/>
        <method signature="SequenceAnnotationReportTest.testAppendFeature_status()[pri:0, instance:jalview.io.SequenceAnnotationReportTest@71652c98]" name="testAppendFeature_status" class="jalview.io.SequenceAnnotationReportTest"/>
        <method signature="SequenceAnnotationReportTest.testAppendFeature_stripHtml()[pri:0, instance:jalview.io.SequenceAnnotationReportTest@71652c98]" name="testAppendFeature_stripHtml" class="jalview.io.SequenceAnnotationReportTest"/>
        <method signature="SequenceAnnotationReportTest.testAppendFeature_virtualFeature()[pri:0, instance:jalview.io.SequenceAnnotationReportTest@71652c98]" name="testAppendFeature_virtualFeature" class="jalview.io.SequenceAnnotationReportTest"/>
        <method signature="SequenceAnnotationReportTest.testAppendFeature_withScore()[pri:0, instance:jalview.io.SequenceAnnotationReportTest@71652c98]" name="testAppendFeature_withScore" class="jalview.io.SequenceAnnotationReportTest"/>
        <method signature="SequenceAnnotationReportTest.testAppendFeature_withScoreStatusAttribute()[pri:0, instance:jalview.io.SequenceAnnotationReportTest@71652c98]" name="testAppendFeature_withScoreStatusAttribute" class="jalview.io.SequenceAnnotationReportTest"/>
        <method signature="SequenceAnnotationReportTest.testAppendFeatures_longText()[pri:0, instance:jalview.io.SequenceAnnotationReportTest@71652c98]" name="testAppendFeatures_longText" class="jalview.io.SequenceAnnotationReportTest"/>
        <method signature="SequenceAnnotationReportTest.testCreateSequenceAnnotationReport()[pri:0, instance:jalview.io.SequenceAnnotationReportTest@71652c98]" name="testCreateSequenceAnnotationReport" class="jalview.io.SequenceAnnotationReportTest"/>
        <method signature="SequenceAnnotationReportTest.testCreateSequenceAnnotationReport_withEllipsis()[pri:0, instance:jalview.io.SequenceAnnotationReportTest@71652c98]" name="testCreateSequenceAnnotationReport_withEllipsis" class="jalview.io.SequenceAnnotationReportTest"/>
        <method signature="SequenceDummyTest.testBecome()[pri:0, instance:jalview.datamodel.SequenceDummyTest@57a4d5ee]" name="testBecome" class="jalview.datamodel.SequenceDummyTest"/>
        <method signature="SequenceFeatureTest.testCopyConstructors()[pri:0, instance:jalview.datamodel.SequenceFeatureTest@5af5def9]" name="testCopyConstructors" class="jalview.datamodel.SequenceFeatureTest"/>
        <method signature="SequenceFeatureTest.testEqualsAndHashCode()[pri:0, instance:jalview.datamodel.SequenceFeatureTest@5af5def9]" name="testEqualsAndHashCode" class="jalview.datamodel.SequenceFeatureTest"/>
        <method signature="SequenceFeatureTest.testGetDetailsReport()[pri:0, instance:jalview.datamodel.SequenceFeatureTest@5af5def9]" name="testGetDetailsReport" class="jalview.datamodel.SequenceFeatureTest"/>
        <method signature="SequenceFeatureTest.testGetDetailsReport_virtualFeature()[pri:0, instance:jalview.datamodel.SequenceFeatureTest@5af5def9]" name="testGetDetailsReport_virtualFeature" class="jalview.datamodel.SequenceFeatureTest"/>
        <method signature="SequenceFeatureTest.testGetStrand()[pri:0, instance:jalview.datamodel.SequenceFeatureTest@5af5def9]" name="testGetStrand" class="jalview.datamodel.SequenceFeatureTest"/>
        <method signature="SequenceFeatureTest.testGetValue()[pri:0, instance:jalview.datamodel.SequenceFeatureTest@5af5def9]" name="testGetValue" class="jalview.datamodel.SequenceFeatureTest"/>
        <method signature="SequenceFeatureTest.testIsContactFeature()[pri:0, instance:jalview.datamodel.SequenceFeatureTest@5af5def9]" name="testIsContactFeature" class="jalview.datamodel.SequenceFeatureTest"/>
        <method signature="SequenceFeaturesTest.testConstructor()[pri:0, instance:jalview.datamodel.features.SequenceFeaturesTest@70f43b45]" name="testConstructor" class="jalview.datamodel.features.SequenceFeaturesTest"/>
        <method signature="SequenceFeaturesTest.testDelete()[pri:0, instance:jalview.datamodel.features.SequenceFeaturesTest@70f43b45]" name="testDelete" class="jalview.datamodel.features.SequenceFeaturesTest"/>
        <method signature="SequenceFeaturesTest.testDeleteAll()[pri:0, instance:jalview.datamodel.features.SequenceFeaturesTest@70f43b45]" name="testDeleteAll" class="jalview.datamodel.features.SequenceFeaturesTest"/>
        <method signature="SequenceFeaturesTest.testFindFeatures()[pri:0, instance:jalview.datamodel.features.SequenceFeaturesTest@70f43b45]" name="testFindFeatures" class="jalview.datamodel.features.SequenceFeaturesTest"/>
        <method signature="SequenceFeaturesTest.testGetAllFeatures()[pri:0, instance:jalview.datamodel.features.SequenceFeaturesTest@70f43b45]" name="testGetAllFeatures" class="jalview.datamodel.features.SequenceFeaturesTest"/>
        <method signature="SequenceFeaturesTest.testGetContactFeatures()[pri:0, instance:jalview.datamodel.features.SequenceFeaturesTest@70f43b45]" name="testGetContactFeatures" class="jalview.datamodel.features.SequenceFeaturesTest"/>
        <method signature="SequenceFeaturesTest.testGetFeatureCount()[pri:0, instance:jalview.datamodel.features.SequenceFeaturesTest@70f43b45]" name="testGetFeatureCount" class="jalview.datamodel.features.SequenceFeaturesTest"/>
        <method signature="SequenceFeaturesTest.testGetFeatureGroups()[pri:0, instance:jalview.datamodel.features.SequenceFeaturesTest@70f43b45]" name="testGetFeatureGroups" class="jalview.datamodel.features.SequenceFeaturesTest"/>
        <method signature="SequenceFeaturesTest.testGetFeatureTypes()[pri:0, instance:jalview.datamodel.features.SequenceFeaturesTest@70f43b45]" name="testGetFeatureTypes" class="jalview.datamodel.features.SequenceFeaturesTest"/>
        <method signature="SequenceFeaturesTest.testGetFeatureTypesForGroups()[pri:0, instance:jalview.datamodel.features.SequenceFeaturesTest@70f43b45]" name="testGetFeatureTypesForGroups" class="jalview.datamodel.features.SequenceFeaturesTest"/>
        <method signature="SequenceFeaturesTest.testGetFeatureTypes_byOntology()[pri:0, instance:jalview.datamodel.features.SequenceFeaturesTest@70f43b45]" name="testGetFeatureTypes_byOntology" class="jalview.datamodel.features.SequenceFeaturesTest"/>
        <method signature="SequenceFeaturesTest.testGetFeaturesByOntology()[pri:0, instance:jalview.datamodel.features.SequenceFeaturesTest@70f43b45]" name="testGetFeaturesByOntology" class="jalview.datamodel.features.SequenceFeaturesTest"/>
        <method signature="SequenceFeaturesTest.testGetFeaturesForGroup()[pri:0, instance:jalview.datamodel.features.SequenceFeaturesTest@70f43b45]" name="testGetFeaturesForGroup" class="jalview.datamodel.features.SequenceFeaturesTest"/>
        <method signature="SequenceFeaturesTest.testGetMinimumScore_getMaximumScore()[pri:0, instance:jalview.datamodel.features.SequenceFeaturesTest@70f43b45]" name="testGetMinimumScore_getMaximumScore" class="jalview.datamodel.features.SequenceFeaturesTest"/>
        <method signature="SequenceFeaturesTest.testGetNonPositionalFeatures()[pri:0, instance:jalview.datamodel.features.SequenceFeaturesTest@70f43b45]" name="testGetNonPositionalFeatures" class="jalview.datamodel.features.SequenceFeaturesTest"/>
        <method signature="SequenceFeaturesTest.testGetPositionalFeatures()[pri:0, instance:jalview.datamodel.features.SequenceFeaturesTest@70f43b45]" name="testGetPositionalFeatures" class="jalview.datamodel.features.SequenceFeaturesTest"/>
        <method signature="SequenceFeaturesTest.testGetTotalFeatureLength()[pri:0, instance:jalview.datamodel.features.SequenceFeaturesTest@70f43b45]" name="testGetTotalFeatureLength" class="jalview.datamodel.features.SequenceFeaturesTest"/>
        <method signature="SequenceFeaturesTest.testHasFeatures()[pri:0, instance:jalview.datamodel.features.SequenceFeaturesTest@70f43b45]" name="testHasFeatures" class="jalview.datamodel.features.SequenceFeaturesTest"/>
        <method signature="SequenceFeaturesTest.testIsOntologyTerm()[pri:0, instance:jalview.datamodel.features.SequenceFeaturesTest@70f43b45]" name="testIsOntologyTerm" class="jalview.datamodel.features.SequenceFeaturesTest"/>
        <method signature="SequenceFeaturesTest.testShiftFeatures()[pri:0, instance:jalview.datamodel.features.SequenceFeaturesTest@70f43b45]" name="testShiftFeatures" class="jalview.datamodel.features.SequenceFeaturesTest"/>
        <method signature="SequenceFeaturesTest.testSortFeatures()[pri:0, instance:jalview.datamodel.features.SequenceFeaturesTest@70f43b45]" name="testSortFeatures" class="jalview.datamodel.features.SequenceFeaturesTest"/>
        <method signature="SequenceFeaturesTest.testVarargsToTypes()[pri:0, instance:jalview.datamodel.features.SequenceFeaturesTest@70f43b45]" name="testVarargsToTypes" class="jalview.datamodel.features.SequenceFeaturesTest"/>
        <method signature="SequenceFetcherTest.testNoDuplicatesInFetchDbRefs()[pri:0, instance:jalview.ws.SequenceFetcherTest@6105f8a3]" name="testNoDuplicatesInFetchDbRefs" class="jalview.ws.SequenceFetcherTest"/>
        <method signature="SequenceGroupTest.testAddOrRemove()[pri:0, instance:jalview.datamodel.SequenceGroupTest@3a45c42a]" name="testAddOrRemove" class="jalview.datamodel.SequenceGroupTest"/>
        <method signature="SequenceGroupTest.testAddSequence()[pri:0, instance:jalview.datamodel.SequenceGroupTest@3a45c42a]" name="testAddSequence" class="jalview.datamodel.SequenceGroupTest"/>
        <method signature="SequenceGroupTest.testConstructor_list()[pri:0, instance:jalview.datamodel.SequenceGroupTest@3a45c42a]" name="testConstructor_list" class="jalview.datamodel.SequenceGroupTest"/>
        <method signature="SequenceGroupTest.testContains()[pri:0, instance:jalview.datamodel.SequenceGroupTest@3a45c42a]" name="testContains" class="jalview.datamodel.SequenceGroupTest"/>
        <method signature="SequenceGroupTest.testCopyConstructor()[pri:0, instance:jalview.datamodel.SequenceGroupTest@3a45c42a]" name="testCopyConstructor" class="jalview.datamodel.SequenceGroupTest"/>
        <method signature="SequenceGroupTest.testGetColourScheme()[pri:0, instance:jalview.datamodel.SequenceGroupTest@3a45c42a]" name="testGetColourScheme" class="jalview.datamodel.SequenceGroupTest"/>
        <method signature="SequenceGroupTest.testSetContext()[pri:0, instance:jalview.datamodel.SequenceGroupTest@3a45c42a]" name="testSetContext" class="jalview.datamodel.SequenceGroupTest"/>
        <method signature="SequenceIdMatcherTest.test_seqIdNameEquals()[pri:0, instance:jalview.analysis.SequenceIdMatcherTest@7577b641]" name="test_seqIdNameEquals" class="jalview.analysis.SequenceIdMatcherTest"/>
        <method signature="SequenceOntologyLiteTest.testIsA_sequenceVariant()[pri:0, instance:jalview.io.gff.SequenceOntologyLiteTest@24528a25]" name="testIsA_sequenceVariant" class="jalview.io.gff.SequenceOntologyLiteTest"/>
        <method signature="SequenceOntologyTest.testIsA()[pri:0, instance:jalview.ext.so.SequenceOntologyTest@3f3c966c]" name="testIsA" class="jalview.ext.so.SequenceOntologyTest"/>
        <method signature="SequenceOntologyTest.testIsCDS()[pri:0, instance:jalview.ext.so.SequenceOntologyTest@3f3c966c]" name="testIsCDS" class="jalview.ext.so.SequenceOntologyTest"/>
        <method signature="SequenceOntologyTest.testIsSequenceVariant()[pri:0, instance:jalview.ext.so.SequenceOntologyTest@3f3c966c]" name="testIsSequenceVariant" class="jalview.ext.so.SequenceOntologyTest"/>
        <method signature="SequenceRendererTest.testGetResidueColour_WithGroup()[pri:0, instance:jalview.gui.SequenceRendererTest@66b72664]" name="testGetResidueColour_WithGroup" class="jalview.gui.SequenceRendererTest"/>
        <method signature="SequenceTest.testAddAlignmentAnnotation()[pri:0, instance:jalview.datamodel.SequenceTest@36dce7ed]" name="testAddAlignmentAnnotation" class="jalview.datamodel.SequenceTest"/>
        <method signature="SequenceTest.testAddDBRef()[pri:0, instance:jalview.datamodel.SequenceTest@36dce7ed]" name="testAddDBRef" class="jalview.datamodel.SequenceTest"/>
        <method signature="SequenceTest.testAddPDBId()[pri:0, instance:jalview.datamodel.SequenceTest@36dce7ed]" name="testAddPDBId" class="jalview.datamodel.SequenceTest"/>
        <method signature="SequenceTest.testAddSequenceFeatures()[pri:0, instance:jalview.datamodel.SequenceTest@36dce7ed]" name="testAddSequenceFeatures" class="jalview.datamodel.SequenceTest"/>
        <method signature="SequenceTest.testCheckValidRange()[pri:0, instance:jalview.datamodel.SequenceTest@36dce7ed]" name="testCheckValidRange" class="jalview.datamodel.SequenceTest"/>
        <method signature="SequenceTest.testCopyConstructor_noDataset()[pri:0, instance:jalview.datamodel.SequenceTest@36dce7ed]" name="testCopyConstructor_noDataset" class="jalview.datamodel.SequenceTest"/>
        <method signature="SequenceTest.testCopyConstructor_withDataset()[pri:0, instance:jalview.datamodel.SequenceTest@36dce7ed]" name="testCopyConstructor_withDataset" class="jalview.datamodel.SequenceTest"/>
        <method signature="SequenceTest.testCreateDatasetSequence()[pri:0, instance:jalview.datamodel.SequenceTest@36dce7ed]" name="testCreateDatasetSequence" class="jalview.datamodel.SequenceTest"/>
        <method signature="SequenceTest.testDeleteChars()[pri:0, instance:jalview.datamodel.SequenceTest@36dce7ed]" name="testDeleteChars" class="jalview.datamodel.SequenceTest"/>
        <method signature="SequenceTest.testDeleteChars_withDbRefsAndFeatures()[pri:0, instance:jalview.datamodel.SequenceTest@36dce7ed]" name="testDeleteChars_withDbRefsAndFeatures" class="jalview.datamodel.SequenceTest"/>
        <method signature="SequenceTest.testDeleteChars_withGaps()[pri:0, instance:jalview.datamodel.SequenceTest@36dce7ed]" name="testDeleteChars_withGaps" class="jalview.datamodel.SequenceTest"/>
        <method signature="SequenceTest.testDeriveSequence_existingDataset()[pri:0, instance:jalview.datamodel.SequenceTest@36dce7ed]" name="testDeriveSequence_existingDataset" class="jalview.datamodel.SequenceTest"/>
        <method signature="SequenceTest.testDeriveSequence_noDatasetGapped()[pri:0, instance:jalview.datamodel.SequenceTest@36dce7ed]" name="testDeriveSequence_noDatasetGapped" class="jalview.datamodel.SequenceTest"/>
        <method signature="SequenceTest.testDeriveSequence_noDatasetUngapped()[pri:0, instance:jalview.datamodel.SequenceTest@36dce7ed]" name="testDeriveSequence_noDatasetUngapped" class="jalview.datamodel.SequenceTest"/>
        <method signature="SequenceTest.testFindFeatures()[pri:0, instance:jalview.datamodel.SequenceTest@36dce7ed]" name="testFindFeatures" class="jalview.datamodel.SequenceTest"/>
        <method signature="SequenceTest.testFindIndex()[pri:0, instance:jalview.datamodel.SequenceTest@36dce7ed]" name="testFindIndex" class="jalview.datamodel.SequenceTest"/>
        <method signature="SequenceTest.testFindIndex_withCursor()[pri:0, instance:jalview.datamodel.SequenceTest@36dce7ed]" name="testFindIndex_withCursor" class="jalview.datamodel.SequenceTest"/>
        <method signature="SequenceTest.testFindPosition()[pri:0, instance:jalview.datamodel.SequenceTest@36dce7ed]" name="testFindPosition" class="jalview.datamodel.SequenceTest"/>
        <method signature="SequenceTest.testFindPositionMap()[pri:0, instance:jalview.datamodel.SequenceTest@36dce7ed]" name="testFindPositionMap" class="jalview.datamodel.SequenceTest"/>
        <method signature="SequenceTest.testFindPosition_withCursor()[pri:0, instance:jalview.datamodel.SequenceTest@36dce7ed]" name="testFindPosition_withCursor" class="jalview.datamodel.SequenceTest"/>
        <method signature="SequenceTest.testFindPosition_withCursorAndEdits()[pri:0, instance:jalview.datamodel.SequenceTest@36dce7ed]" name="testFindPosition_withCursorAndEdits" class="jalview.datamodel.SequenceTest"/>
        <method signature="SequenceTest.testFindPositions()[pri:0, instance:jalview.datamodel.SequenceTest@36dce7ed]" name="testFindPositions" class="jalview.datamodel.SequenceTest"/>
        <method signature="SequenceTest.testGapBitset()[pri:0, instance:jalview.datamodel.SequenceTest@36dce7ed]" name="testGapBitset" class="jalview.datamodel.SequenceTest"/>
        <method signature="SequenceTest.testGapMap()[pri:0, instance:jalview.datamodel.SequenceTest@36dce7ed]" name="testGapMap" class="jalview.datamodel.SequenceTest"/>
        <method signature="SequenceTest.testGetAlignmentAnnotations_forCalcIdAndLabel()[pri:0, instance:jalview.datamodel.SequenceTest@36dce7ed]" name="testGetAlignmentAnnotations_forCalcIdAndLabel" class="jalview.datamodel.SequenceTest"/>
        <method signature="SequenceTest.testGetAlignmentAnnotations_forCalcIdLabelAndDescription()[pri:0, instance:jalview.datamodel.SequenceTest@36dce7ed]" name="testGetAlignmentAnnotations_forCalcIdLabelAndDescription" class="jalview.datamodel.SequenceTest"/>
        <method signature="SequenceTest.testGetAnnotation()[pri:0, instance:jalview.datamodel.SequenceTest@36dce7ed]" name="testGetAnnotation" class="jalview.datamodel.SequenceTest"/>
        <method signature="SequenceTest.testGetAnnotation_forLabel()[pri:0, instance:jalview.datamodel.SequenceTest@36dce7ed]" name="testGetAnnotation_forLabel" class="jalview.datamodel.SequenceTest"/>
        <method signature="SequenceTest.testGetCharAt()[pri:0, instance:jalview.datamodel.SequenceTest@36dce7ed]" name="testGetCharAt" class="jalview.datamodel.SequenceTest"/>
        <method signature="SequenceTest.testGetPrimaryDBRefs_nucleotide()[pri:0, instance:jalview.datamodel.SequenceTest@36dce7ed]" name="testGetPrimaryDBRefs_nucleotide" class="jalview.datamodel.SequenceTest"/>
        <method signature="SequenceTest.testGetPrimaryDBRefs_peptide()[pri:0, instance:jalview.datamodel.SequenceTest@36dce7ed]" name="testGetPrimaryDBRefs_peptide" class="jalview.datamodel.SequenceTest"/>
        <method signature="SequenceTest.testGetSequence()[pri:0, instance:jalview.datamodel.SequenceTest@36dce7ed]" name="testGetSequence" class="jalview.datamodel.SequenceTest"/>
        <method signature="SequenceTest.testGetSequenceFeatures()[pri:0, instance:jalview.datamodel.SequenceTest@36dce7ed]" name="testGetSequenceFeatures" class="jalview.datamodel.SequenceTest"/>
        <method signature="SequenceTest.testGetStartGetEnd()[pri:0, instance:jalview.datamodel.SequenceTest@36dce7ed]" name="testGetStartGetEnd" class="jalview.datamodel.SequenceTest"/>
        <method signature="SequenceTest.testGetSubsequence()[pri:0, instance:jalview.datamodel.SequenceTest@36dce7ed]" name="testGetSubsequence" class="jalview.datamodel.SequenceTest"/>
        <method signature="SequenceTest.testInsertCharAt()[pri:0, instance:jalview.datamodel.SequenceTest@36dce7ed]" name="testInsertCharAt" class="jalview.datamodel.SequenceTest"/>
        <method signature="SequenceTest.testInsertGapsAndGapmaps()[pri:0, instance:jalview.datamodel.SequenceTest@36dce7ed]" name="testInsertGapsAndGapmaps" class="jalview.datamodel.SequenceTest"/>
        <method signature="SequenceTest.testIsProtein()[pri:0, instance:jalview.datamodel.SequenceTest@36dce7ed]" name="testIsProtein" class="jalview.datamodel.SequenceTest"/>
        <method signature="SequenceTest.testIsProteinWithXorNAmbiguityCodes()[pri:0, instance:jalview.datamodel.SequenceTest@36dce7ed]" name="testIsProteinWithXorNAmbiguityCodes" class="jalview.datamodel.SequenceTest"/>
        <method signature="SequenceTest.testLocateVisibleStartofSequence()[pri:0, instance:jalview.datamodel.SequenceTest@36dce7ed]" name="testLocateVisibleStartofSequence" class="jalview.datamodel.SequenceTest"/>
        <method signature="SequenceTest.testReplace()[pri:0, instance:jalview.datamodel.SequenceTest@36dce7ed]" name="testReplace" class="jalview.datamodel.SequenceTest"/>
        <method signature="SequenceTest.testSetDatasetSequence_cascading()[pri:0, instance:jalview.datamodel.SequenceTest@36dce7ed]" name="testSetDatasetSequence_cascading" class="jalview.datamodel.SequenceTest"/>
        <method signature="SequenceTest.testSetDatasetSequence_toSelf()[pri:0, instance:jalview.datamodel.SequenceTest@36dce7ed]" name="testSetDatasetSequence_toSelf" class="jalview.datamodel.SequenceTest"/>
        <method signature="SequenceTest.testSetName()[pri:0, instance:jalview.datamodel.SequenceTest@36dce7ed]" name="testSetName" class="jalview.datamodel.SequenceTest"/>
        <method signature="SequenceTest.testTransferAnnotation()[pri:0, instance:jalview.datamodel.SequenceTest@36dce7ed]" name="testTransferAnnotation" class="jalview.datamodel.SequenceTest"/>
        <method signature="SequenceTest.testUpdatePDBIds()[pri:0, instance:jalview.datamodel.SequenceTest@36dce7ed]" name="testUpdatePDBIds" class="jalview.datamodel.SequenceTest"/>
        <method signature="SetUtilsTest.testCountDisjunction()[pri:0, instance:jalview.util.SetUtilsTest@273c947f]" name="testCountDisjunction" class="jalview.util.SetUtilsTest"/>
        <method signature="ShiftListTest.testParseMap()[pri:0, instance:jalview.util.ShiftListTest@30457e14]" name="testParseMap" class="jalview.util.ShiftListTest"/>
        <method signature="ShmmrRSBSService.testShmmrService()[pri:0, instance:jalview.ws.rest.ShmmrRSBSService@15051a0]" name="testShmmrService" class="jalview.ws.rest.ShmmrRSBSService"/>
        <method signature="ShmmrRSBSService.testShmmrServiceDataprep()[pri:0, instance:jalview.ws.rest.ShmmrRSBSService@15051a0]" name="testShmmrServiceDataprep" class="jalview.ws.rest.ShmmrRSBSService"/>
        <method signature="SparseCountTest.testAdd()[pri:0, instance:jalview.util.SparseCountTest@1af1347d]" name="testAdd" class="jalview.util.SparseCountTest"/>
        <method signature="SparseCountTest.testKeyAt_ValueAt()[pri:0, instance:jalview.util.SparseCountTest@1af1347d]" name="testKeyAt_ValueAt" class="jalview.util.SparseCountTest"/>
        <method signature="SparseCountTest.testOverflow()[pri:0, instance:jalview.util.SparseCountTest@1af1347d]" name="testOverflow" class="jalview.util.SparseCountTest"/>
        <method signature="SparseCountTest.testPut()[pri:0, instance:jalview.util.SparseCountTest@1af1347d]" name="testPut" class="jalview.util.SparseCountTest"/>
        <method signature="SparseCountTest.testUnderflow()[pri:0, instance:jalview.util.SparseCountTest@1af1347d]" name="testUnderflow" class="jalview.util.SparseCountTest"/>
        <method signature="SparseIntArrayTest.testAdd()[pri:0, instance:jalview.ext.android.SparseIntArrayTest@10ad20cb]" name="testAdd" class="jalview.ext.android.SparseIntArrayTest"/>
        <method signature="SparseIntArrayTest.testCheckOverflow()[pri:0, instance:jalview.ext.android.SparseIntArrayTest@10ad20cb]" name="testCheckOverflow" class="jalview.ext.android.SparseIntArrayTest"/>
        <method signature="SparseIntArrayTest.testPut()[pri:0, instance:jalview.ext.android.SparseIntArrayTest@10ad20cb]" name="testPut" class="jalview.ext.android.SparseIntArrayTest"/>
        <method signature="SparseMatrixTest.testConstructor()[pri:0, instance:jalview.math.SparseMatrixTest@5a772895]" name="testConstructor" class="jalview.math.SparseMatrixTest"/>
        <method signature="SparseMatrixTest.testFillRatio()[pri:0, instance:jalview.math.SparseMatrixTest@5a772895]" name="testFillRatio" class="jalview.math.SparseMatrixTest"/>
        <method signature="SparseMatrixTest.testPostMultiply()[pri:0, instance:jalview.math.SparseMatrixTest@5a772895]" name="testPostMultiply" class="jalview.math.SparseMatrixTest"/>
        <method signature="SparseMatrixTest.testPreMultiply()[pri:0, instance:jalview.math.SparseMatrixTest@5a772895]" name="testPreMultiply" class="jalview.math.SparseMatrixTest"/>
        <method signature="SparseMatrixTest.testPreMultiply_sparseProduct()[pri:0, instance:jalview.math.SparseMatrixTest@5a772895]" name="testPreMultiply_sparseProduct" class="jalview.math.SparseMatrixTest"/>
        <method signature="SparseMatrixTest.testPreMultiply_tooFewColumns()[pri:0, instance:jalview.math.SparseMatrixTest@5a772895]" name="testPreMultiply_tooFewColumns" class="jalview.math.SparseMatrixTest"/>
        <method signature="SparseMatrixTest.testPreMultiply_tooManyColumns()[pri:0, instance:jalview.math.SparseMatrixTest@5a772895]" name="testPreMultiply_tooManyColumns" class="jalview.math.SparseMatrixTest"/>
        <method signature="SparseMatrixTest.testTqli_matchesMatrix()[pri:0, instance:jalview.math.SparseMatrixTest@5a772895]" name="testTqli_matchesMatrix" class="jalview.math.SparseMatrixTest"/>
        <method signature="SparseMatrixTest.testTranspose()[pri:0, instance:jalview.math.SparseMatrixTest@5a772895]" name="testTranspose" class="jalview.math.SparseMatrixTest"/>
        <method signature="SparseMatrixTest.testTred_matchesMatrix()[pri:0, instance:jalview.math.SparseMatrixTest@5a772895]" name="testTred_matchesMatrix" class="jalview.math.SparseMatrixTest"/>
        <method signature="SparseMatrixTest.testTred_reproducible()[pri:0, instance:jalview.math.SparseMatrixTest@5a772895]" name="testTred_reproducible" class="jalview.math.SparseMatrixTest"/>
        <method signature="SparseShortArrayTest.testAdd()[pri:0, instance:jalview.ext.android.SparseShortArrayTest@7dd712e8]" name="testAdd" class="jalview.ext.android.SparseShortArrayTest"/>
        <method signature="SparseShortArrayTest.testPut()[pri:0, instance:jalview.ext.android.SparseShortArrayTest@7dd712e8]" name="testPut" class="jalview.ext.android.SparseShortArrayTest"/>
        <method signature="StartRegionIteratorTest.testBasicBoundsIterator()[pri:0, instance:jalview.datamodel.StartRegionIteratorTest@47a64f7d]" name="testBasicBoundsIterator" class="jalview.datamodel.StartRegionIteratorTest"/>
        <method signature="StartRegionIteratorTest.testBoundsIteratorUsingCursor()[pri:0, instance:jalview.datamodel.StartRegionIteratorTest@47a64f7d]" name="testBoundsIteratorUsingCursor" class="jalview.datamodel.StartRegionIteratorTest"/>
        <method signature="StartRegionIteratorTest.testBoundsIteratorUsingNullCursor()[pri:0, instance:jalview.datamodel.StartRegionIteratorTest@47a64f7d]" name="testBoundsIteratorUsingNullCursor" class="jalview.datamodel.StartRegionIteratorTest"/>
        <method signature="StockholmFileTest.curlyWUSSsecondaryStructureForRNASequence()[pri:0, instance:jalview.io.StockholmFileTest@51bde877]" name="curlyWUSSsecondaryStructureForRNASequence" class="jalview.io.StockholmFileTest"/>
        <method signature="StockholmFileTest.dbrefOutput()[pri:0, instance:jalview.io.StockholmFileTest@51bde877]" name="dbrefOutput" class="jalview.io.StockholmFileTest"/>
        <method signature="StockholmFileTest.detectWussBrackets()[pri:0, instance:jalview.io.StockholmFileTest@51bde877]" name="detectWussBrackets" class="jalview.io.StockholmFileTest"/>
        <method signature="StockholmFileTest.fullWUSSsecondaryStructureForRNASequence()[pri:0, instance:jalview.io.StockholmFileTest@51bde877]" name="fullWUSSsecondaryStructureForRNASequence" class="jalview.io.StockholmFileTest"/>
        <method signature="StockholmFileTest.pfamFileDataExtraction()[pri:0, instance:jalview.io.StockholmFileTest@51bde877]" name="pfamFileDataExtraction" class="jalview.io.StockholmFileTest"/>
        <method signature="StockholmFileTest.pfamFileIO()[pri:0, instance:jalview.io.StockholmFileTest@51bde877]" name="pfamFileIO" class="jalview.io.StockholmFileTest"/>
        <method signature="StockholmFileTest.rfamFileIO()[pri:0, instance:jalview.io.StockholmFileTest@51bde877]" name="rfamFileIO" class="jalview.io.StockholmFileTest"/>
        <method signature="StockholmFileTest.secondaryStructureForRNASequence()[pri:0, instance:jalview.io.StockholmFileTest@51bde877]" name="secondaryStructureForRNASequence" class="jalview.io.StockholmFileTest"/>
        <method signature="StockholmFileTest.stockholmFileRnaSSAlphaChars()[pri:0, instance:jalview.io.StockholmFileTest@51bde877]" name="stockholmFileRnaSSAlphaChars" class="jalview.io.StockholmFileTest"/>
        <method signature="StockholmFileTest.stockholmFileRnaSSSpaceChars()[pri:0, instance:jalview.io.StockholmFileTest@51bde877]" name="stockholmFileRnaSSSpaceChars" class="jalview.io.StockholmFileTest"/>
        <method signature="StockholmFileTest.testAnnotationEquivalence()[pri:0, instance:jalview.io.StockholmFileTest@51bde877]" name="testAnnotationEquivalence" class="jalview.io.StockholmFileTest"/>
        <method signature="StrandColourSchemeTest.testFindColour()[pri:0, instance:jalview.schemes.StrandColourSchemeTest@5215cd9a]" name="testFindColour" class="jalview.schemes.StrandColourSchemeTest"/>
        <method signature="StringUtilsTest.testArrayToSeparatorList()[pri:0, instance:jalview.util.StringUtilsTest@632aa1a3]" name="testArrayToSeparatorList" class="jalview.util.StringUtilsTest"/>
        <method signature="StringUtilsTest.testCompareVersions()[pri:0, instance:jalview.util.StringUtilsTest@632aa1a3]" name="testCompareVersions" class="jalview.util.StringUtilsTest"/>
        <method signature="StringUtilsTest.testDeleteChars()[pri:0, instance:jalview.util.StringUtilsTest@632aa1a3]" name="testDeleteChars" class="jalview.util.StringUtilsTest"/>
        <method signature="StringUtilsTest.testGetLastToken()[pri:0, instance:jalview.util.StringUtilsTest@632aa1a3]" name="testGetLastToken" class="jalview.util.StringUtilsTest"/>
        <method signature="StringUtilsTest.testInsertCharAt()[pri:0, instance:jalview.util.StringUtilsTest@632aa1a3]" name="testInsertCharAt" class="jalview.util.StringUtilsTest"/>
        <method signature="StringUtilsTest.testListToDelimitedString()[pri:0, instance:jalview.util.StringUtilsTest@632aa1a3]" name="testListToDelimitedString" class="jalview.util.StringUtilsTest"/>
        <method signature="StringUtilsTest.testParseInt()[pri:0, instance:jalview.util.StringUtilsTest@632aa1a3]" name="testParseInt" class="jalview.util.StringUtilsTest"/>
        <method signature="StringUtilsTest.testSeparatorListToArray()[pri:0, instance:jalview.util.StringUtilsTest@632aa1a3]" name="testSeparatorListToArray" class="jalview.util.StringUtilsTest"/>
        <method signature="StringUtilsTest.testStripHtmlTags()[pri:0, instance:jalview.util.StringUtilsTest@632aa1a3]" name="testStripHtmlTags" class="jalview.util.StringUtilsTest"/>
        <method signature="StringUtilsTest.testToSentenceCase()[pri:0, instance:jalview.util.StringUtilsTest@632aa1a3]" name="testToSentenceCase" class="jalview.util.StringUtilsTest"/>
        <method signature="StringUtilsTest.testUrlDecode()[pri:0, instance:jalview.util.StringUtilsTest@632aa1a3]" name="testUrlDecode" class="jalview.util.StringUtilsTest"/>
        <method signature="StringUtilsTest.testUrlEncode()[pri:0, instance:jalview.util.StringUtilsTest@632aa1a3]" name="testUrlEncode" class="jalview.util.StringUtilsTest"/>
        <method signature="StructureChooserQuerySourceTest.buildPDBQueryTest()[pri:0, instance:jalview.gui.structurechooser.StructureChooserQuerySourceTest@3be8821f]" name="buildPDBQueryTest" class="jalview.gui.structurechooser.StructureChooserQuerySourceTest"/>
        <method signature="StructureChooserQuerySourceTest.buildThreeDBQueryTest()[pri:0, instance:jalview.gui.structurechooser.StructureChooserQuerySourceTest@3be8821f]" name="buildThreeDBQueryTest" class="jalview.gui.structurechooser.StructureChooserQuerySourceTest"/>
        <method signature="StructureChooserQuerySourceTest.cascadingThreeDBandPDBQuerys(jalview.datamodel.SequenceI)[pri:0, instance:jalview.gui.structurechooser.StructureChooserQuerySourceTest@3be8821f]" name="cascadingThreeDBandPDBQuerys" class="jalview.gui.structurechooser.StructureChooserQuerySourceTest"/>
        <method signature="StructureChooserQuerySourceTest.sanitizeSeqNameTest()[pri:0, instance:jalview.gui.structurechooser.StructureChooserQuerySourceTest@3be8821f]" name="sanitizeSeqNameTest" class="jalview.gui.structurechooser.StructureChooserQuerySourceTest"/>
        <method signature="StructureChooserTest.displayTDBQueryTest()[pri:0, instance:jalview.gui.StructureChooserTest@7a34b7b8]" name="displayTDBQueryTest" class="jalview.gui.StructureChooserTest"/>
        <method signature="StructureChooserTest.fetchStructuresInfoMockedTest()[pri:0, instance:jalview.gui.StructureChooserTest@7a34b7b8]" name="fetchStructuresInfoMockedTest" class="jalview.gui.StructureChooserTest"/>
        <method signature="StructureChooserTest.populateFilterComboBoxTest()[pri:0, instance:jalview.gui.StructureChooserTest@7a34b7b8]" name="populateFilterComboBoxTest" class="jalview.gui.StructureChooserTest"/>
        <method signature="StructureChooserTest.sanitizeSeqNameTest()[pri:0, instance:jalview.gui.StructureChooserTest@7a34b7b8]" name="sanitizeSeqNameTest" class="jalview.gui.StructureChooserTest"/>
        <method signature="StructureCommandTest.testEquals()[pri:0, instance:jalview.structure.StructureCommandTest@aa5455e]" name="testEquals" class="jalview.structure.StructureCommandTest"/>
        <method signature="StructureMappingTest.testEquals()[pri:0, instance:jalview.structure.StructureMappingTest@282308c3]" name="testEquals" class="jalview.structure.StructureMappingTest"/>
        <method signature="StructureMappingTest.testGetPDBResNumRanges()[pri:0, instance:jalview.structure.StructureMappingTest@282308c3]" name="testGetPDBResNumRanges" class="jalview.structure.StructureMappingTest"/>
        <method signature="StructureSelectionManagerTest.testRegisterMapping()[pri:0, instance:jalview.structure.StructureSelectionManagerTest@5dda14d0]" name="testRegisterMapping" class="jalview.structure.StructureSelectionManagerTest"/>
        <method signature="StructureSelectionManagerTest.testRegisterMappings()[pri:0, instance:jalview.structure.StructureSelectionManagerTest@5dda14d0]" name="testRegisterMappings" class="jalview.structure.StructureSelectionManagerTest"/>
        <method signature="StructureSelectionManagerTest.testSetMapping_seqFeatures()[pri:0, instance:jalview.structure.StructureSelectionManagerTest@5dda14d0]" name="testSetMapping_seqFeatures" class="jalview.structure.StructureSelectionManagerTest"/>
        <method signature="StructureViewerTest.testGetSequencesForPdbs()[pri:0, instance:jalview.gui.StructureViewerTest@58cd06cb]" name="testGetSequencesForPdbs" class="jalview.gui.StructureViewerTest"/>
        <method signature="TCoffeeScoreFileTest.testGetAsArray()[pri:0, instance:jalview.io.TCoffeeScoreFileTest@60b85ba1]" name="testGetAsArray" class="jalview.io.TCoffeeScoreFileTest"/>
        <method signature="TCoffeeScoreFileTest.testGetAsList()[pri:0, instance:jalview.io.TCoffeeScoreFileTest@60b85ba1]" name="testGetAsList" class="jalview.io.TCoffeeScoreFileTest"/>
        <method signature="TCoffeeScoreFileTest.testHeightAndWidth()[pri:0, instance:jalview.io.TCoffeeScoreFileTest@60b85ba1]" name="testHeightAndWidth" class="jalview.io.TCoffeeScoreFileTest"/>
        <method signature="TCoffeeScoreFileTest.testHeightAndWidthWithResidueNumbers()[pri:0, instance:jalview.io.TCoffeeScoreFileTest@60b85ba1]" name="testHeightAndWidthWithResidueNumbers" class="jalview.io.TCoffeeScoreFileTest"/>
        <method signature="TCoffeeScoreFileTest.testParse()[pri:0, instance:jalview.io.TCoffeeScoreFileTest@60b85ba1]" name="testParse" class="jalview.io.TCoffeeScoreFileTest"/>
        <method signature="TCoffeeScoreFileTest.testReadBlock()[pri:0, instance:jalview.io.TCoffeeScoreFileTest@60b85ba1]" name="testReadBlock" class="jalview.io.TCoffeeScoreFileTest"/>
        <method signature="TCoffeeScoreFileTest.testReadHeader()[pri:0, instance:jalview.io.TCoffeeScoreFileTest@60b85ba1]" name="testReadHeader" class="jalview.io.TCoffeeScoreFileTest"/>
        <method signature="TCoffeeScoreFileTest.testWrongFile()[pri:0, instance:jalview.io.TCoffeeScoreFileTest@60b85ba1]" name="testWrongFile" class="jalview.io.TCoffeeScoreFileTest"/>
        <method signature="TDBeaconsFTSRestClientTest.coverageForEqualsAndHashFunction()[pri:0, instance:jalview.fts.threedbeacons.TDBeaconsFTSRestClientTest@3a71c100]" name="coverageForEqualsAndHashFunction" class="jalview.fts.threedbeacons.TDBeaconsFTSRestClientTest"/>
        <method signature="TDBeaconsFTSRestClientTest.getAllFTSDataColumns()[pri:0, instance:jalview.fts.threedbeacons.TDBeaconsFTSRestClientTest@3a71c100]" name="getAllFTSDataColumns" class="jalview.fts.threedbeacons.TDBeaconsFTSRestClientTest"/>
        <method signature="TDBeaconsFTSRestClientTest.getColumnClassTest()[pri:0, instance:jalview.fts.threedbeacons.TDBeaconsFTSRestClientTest@3a71c100]" name="getColumnClassTest" class="jalview.fts.threedbeacons.TDBeaconsFTSRestClientTest"/>
        <method signature="TDBeaconsFTSRestClientTest.getColumnMinWidthTest()[pri:0, instance:jalview.fts.threedbeacons.TDBeaconsFTSRestClientTest@3a71c100]" name="getColumnMinWidthTest" class="jalview.fts.threedbeacons.TDBeaconsFTSRestClientTest"/>
        <method signature="TDBeaconsFTSRestClientTest.getDataColumnByNameOrCode()[pri:0, instance:jalview.fts.threedbeacons.TDBeaconsFTSRestClientTest@3a71c100]" name="getDataColumnByNameOrCode" class="jalview.fts.threedbeacons.TDBeaconsFTSRestClientTest"/>
        <method signature="TDBeaconsFTSRestClientTest.getDataColumnGroupById()[pri:0, instance:jalview.fts.threedbeacons.TDBeaconsFTSRestClientTest@3a71c100]" name="getDataColumnGroupById" class="jalview.fts.threedbeacons.TDBeaconsFTSRestClientTest"/>
        <method signature="TDBeaconsFTSRestClientTest.getDataColumnsFieldsAsCommaDelimitedString()[pri:0, instance:jalview.fts.threedbeacons.TDBeaconsFTSRestClientTest@3a71c100]" name="getDataColumnsFieldsAsCommaDelimitedString" class="jalview.fts.threedbeacons.TDBeaconsFTSRestClientTest"/>
        <method signature="TDBeaconsFTSRestClientTest.getDefaultResponsePageSize()[pri:0, instance:jalview.fts.threedbeacons.TDBeaconsFTSRestClientTest@3a71c100]" name="getDefaultResponsePageSize" class="jalview.fts.threedbeacons.TDBeaconsFTSRestClientTest"/>
        <method signature="TDBeaconsFTSRestClientTest.getPrimaryKeyColumIndexTest()[pri:0, instance:jalview.fts.threedbeacons.TDBeaconsFTSRestClientTest@3a71c100]" name="getPrimaryKeyColumIndexTest" class="jalview.fts.threedbeacons.TDBeaconsFTSRestClientTest"/>
        <method signature="TDBeaconsFTSRestClientTest.getPrimaryKeyColumn()[pri:0, instance:jalview.fts.threedbeacons.TDBeaconsFTSRestClientTest@3a71c100]" name="getPrimaryKeyColumn" class="jalview.fts.threedbeacons.TDBeaconsFTSRestClientTest"/>
        <method signature="TDBeaconsFTSRestClientTest.getSearchableDataColumns()[pri:0, instance:jalview.fts.threedbeacons.TDBeaconsFTSRestClientTest@3a71c100]" name="getSearchableDataColumns" class="jalview.fts.threedbeacons.TDBeaconsFTSRestClientTest"/>
        <method signature="TDBeaconsFTSRestClientTest.getTDBIdColumIndexTest()[pri:0, instance:jalview.fts.threedbeacons.TDBeaconsFTSRestClientTest@3a71c100]" name="getTDBIdColumIndexTest" class="jalview.fts.threedbeacons.TDBeaconsFTSRestClientTest"/>
        <method signature="TDBeaconsFTSRestClientTest.testMockTDBRequest()[pri:0, instance:jalview.fts.threedbeacons.TDBeaconsFTSRestClientTest@3a71c100]" name="testMockTDBRequest" class="jalview.fts.threedbeacons.TDBeaconsFTSRestClientTest"/>
        <method signature="TDBeaconsPanelTest.populateCmbSearchTargetOptionsTest()[pri:0, instance:jalview.fts.threedbeacons.TDBeaconsPanelTest@5b69fd74]" name="populateCmbSearchTargetOptionsTest" class="jalview.fts.threedbeacons.TDBeaconsPanelTest"/>
        <method signature="TestAlignSeq.testExtractGaps()[pri:0, instance:jalview.analysis.TestAlignSeq@3704122f]" name="testExtractGaps" class="jalview.analysis.TestAlignSeq"/>
        <method signature="TestAlignSeq.testGetMappingForS1()[pri:0, instance:jalview.analysis.TestAlignSeq@3704122f]" name="testGetMappingForS1" class="jalview.analysis.TestAlignSeq"/>
        <method signature="TestAlignSeq.testPrintAlignment()[pri:0, instance:jalview.analysis.TestAlignSeq@3704122f]" name="testPrintAlignment" class="jalview.analysis.TestAlignSeq"/>
        <method signature="TestHtsContigDb.testCreateFastaSequenceIndex()[pri:0, instance:jalview.ext.htsjdk.TestHtsContigDb@54a3ab8f]" name="testCreateFastaSequenceIndex" class="jalview.ext.htsjdk.TestHtsContigDb"/>
        <method signature="TestHtsContigDb.testGetSequenceProxy()[pri:0, instance:jalview.ext.htsjdk.TestHtsContigDb@54a3ab8f]" name="testGetSequenceProxy" class="jalview.ext.htsjdk.TestHtsContigDb"/>
        <method signature="TestHtsContigDb.testGetSequenceProxy_indexed()[pri:0, instance:jalview.ext.htsjdk.TestHtsContigDb@54a3ab8f]" name="testGetSequenceProxy_indexed" class="jalview.ext.htsjdk.TestHtsContigDb"/>
        <method signature="TrimRegionCommandTest.testTrimLeft_noColumns()[pri:0, instance:jalview.commands.TrimRegionCommandTest@4ced35ed]" name="testTrimLeft_noColumns" class="jalview.commands.TrimRegionCommandTest"/>
        <method signature="TrimRegionCommandTest.testTrimLeft_oneColumn()[pri:0, instance:jalview.commands.TrimRegionCommandTest@4ced35ed]" name="testTrimLeft_oneColumn" class="jalview.commands.TrimRegionCommandTest"/>
        <method signature="TrimRegionCommandTest.testTrimLeft_withUndoAndRedo()[pri:0, instance:jalview.commands.TrimRegionCommandTest@4ced35ed]" name="testTrimLeft_withUndoAndRedo" class="jalview.commands.TrimRegionCommandTest"/>
        <method signature="TrimRegionCommandTest.testTrimRight_noColumns()[pri:0, instance:jalview.commands.TrimRegionCommandTest@4ced35ed]" name="testTrimRight_noColumns" class="jalview.commands.TrimRegionCommandTest"/>
        <method signature="TrimRegionCommandTest.testTrimRight_oneColumn()[pri:0, instance:jalview.commands.TrimRegionCommandTest@4ced35ed]" name="testTrimRight_oneColumn" class="jalview.commands.TrimRegionCommandTest"/>
        <method signature="TrimRegionCommandTest.testTrimRight_withUndoAndRedo()[pri:0, instance:jalview.commands.TrimRegionCommandTest@4ced35ed]" name="testTrimRight_withUndoAndRedo" class="jalview.commands.TrimRegionCommandTest"/>
        <method signature="TurnColourSchemeTest.testFindColour()[pri:0, instance:jalview.schemes.TurnColourSchemeTest@36b6964d]" name="testFindColour" class="jalview.schemes.TurnColourSchemeTest"/>
        <method signature="UniprotTest.testGetDescription()[pri:0, instance:jalview.ws.dbsources.UniprotTest@30272916]" name="testGetDescription" class="jalview.ws.dbsources.UniprotTest"/>
        <method signature="UniprotTest.testGetUniprotEntries()[pri:0, instance:jalview.ws.dbsources.UniprotTest@30272916]" name="testGetUniprotEntries" class="jalview.ws.dbsources.UniprotTest"/>
        <method signature="UniprotTest.testGetUniprotEntryDescription()[pri:0, instance:jalview.ws.dbsources.UniprotTest@30272916]" name="testGetUniprotEntryDescription" class="jalview.ws.dbsources.UniprotTest"/>
        <method signature="UniprotTest.testGetUniprotEntryId()[pri:0, instance:jalview.ws.dbsources.UniprotTest@30272916]" name="testGetUniprotEntryId" class="jalview.ws.dbsources.UniprotTest"/>
        <method signature="UniprotTest.testGetUniprotSequence()[pri:0, instance:jalview.ws.dbsources.UniprotTest@30272916]" name="testGetUniprotSequence" class="jalview.ws.dbsources.UniprotTest"/>
        <method signature="UrlLinkDisplayTest.getValue()[pri:0, instance:jalview.urls.UrlLinkDisplayTest@1ad777f]" name="getValue" class="jalview.urls.UrlLinkDisplayTest"/>
        <method signature="UrlLinkDisplayTest.testDescription()[pri:0, instance:jalview.urls.UrlLinkDisplayTest@1ad777f]" name="testDescription" class="jalview.urls.UrlLinkDisplayTest"/>
        <method signature="UrlLinkDisplayTest.testDisplayColumnNames()[pri:0, instance:jalview.urls.UrlLinkDisplayTest@1ad777f]" name="testDisplayColumnNames" class="jalview.urls.UrlLinkDisplayTest"/>
        <method signature="UrlLinkDisplayTest.testGetSetValue()[pri:0, instance:jalview.urls.UrlLinkDisplayTest@1ad777f]" name="testGetSetValue" class="jalview.urls.UrlLinkDisplayTest"/>
        <method signature="UrlLinkDisplayTest.testIsEditable()[pri:0, instance:jalview.urls.UrlLinkDisplayTest@1ad777f]" name="testIsEditable" class="jalview.urls.UrlLinkDisplayTest"/>
        <method signature="UrlLinkDisplayTest.testName()[pri:0, instance:jalview.urls.UrlLinkDisplayTest@1ad777f]" name="testName" class="jalview.urls.UrlLinkDisplayTest"/>
        <method signature="UrlLinkDisplayTest.testUrl()[pri:0, instance:jalview.urls.UrlLinkDisplayTest@1ad777f]" name="testUrl" class="jalview.urls.UrlLinkDisplayTest"/>
        <method signature="UrlLinkTableModelTest.testColumns()[pri:0, instance:jalview.urls.UrlLinkTableModelTest@5bbbdd4b]" name="testColumns" class="jalview.urls.UrlLinkTableModelTest"/>
        <method signature="UrlLinkTableModelTest.testCounts()[pri:0, instance:jalview.urls.UrlLinkTableModelTest@5bbbdd4b]" name="testCounts" class="jalview.urls.UrlLinkTableModelTest"/>
        <method signature="UrlLinkTableModelTest.testDeletable()[pri:0, instance:jalview.urls.UrlLinkTableModelTest@5bbbdd4b]" name="testDeletable" class="jalview.urls.UrlLinkTableModelTest"/>
        <method signature="UrlLinkTableModelTest.testEditable()[pri:0, instance:jalview.urls.UrlLinkTableModelTest@5bbbdd4b]" name="testEditable" class="jalview.urls.UrlLinkTableModelTest"/>
        <method signature="UrlLinkTableModelTest.testInitialisation()[pri:0, instance:jalview.urls.UrlLinkTableModelTest@5bbbdd4b]" name="testInitialisation" class="jalview.urls.UrlLinkTableModelTest"/>
        <method signature="UrlLinkTableModelTest.testRowDelete()[pri:0, instance:jalview.urls.UrlLinkTableModelTest@5bbbdd4b]" name="testRowDelete" class="jalview.urls.UrlLinkTableModelTest"/>
        <method signature="UrlLinkTableModelTest.testRowEditable()[pri:0, instance:jalview.urls.UrlLinkTableModelTest@5bbbdd4b]" name="testRowEditable" class="jalview.urls.UrlLinkTableModelTest"/>
        <method signature="UrlLinkTableModelTest.testRowInsert()[pri:0, instance:jalview.urls.UrlLinkTableModelTest@5bbbdd4b]" name="testRowInsert" class="jalview.urls.UrlLinkTableModelTest"/>
        <method signature="UrlLinkTableModelTest.testValues()[pri:0, instance:jalview.urls.UrlLinkTableModelTest@5bbbdd4b]" name="testValues" class="jalview.urls.UrlLinkTableModelTest"/>
        <method signature="UrlLinkTest.testCreateLinksForNonDynamic()[pri:0, instance:jalview.util.UrlLinkTest@20765ed5]" name="testCreateLinksForNonDynamic" class="jalview.util.UrlLinkTest"/>
        <method signature="UrlLinkTest.testCreateLinksFromNullSequence()[pri:0, instance:jalview.util.UrlLinkTest@20765ed5]" name="testCreateLinksFromNullSequence" class="jalview.util.UrlLinkTest"/>
        <method signature="UrlLinkTest.testCreateLinksFromSequence()[pri:0, instance:jalview.util.UrlLinkTest@20765ed5]" name="testCreateLinksFromSequence" class="jalview.util.UrlLinkTest"/>
        <method signature="UrlLinkTest.testLinkComparator()[pri:0, instance:jalview.util.UrlLinkTest@20765ed5]" name="testLinkComparator" class="jalview.util.UrlLinkTest"/>
        <method signature="UrlLinkTest.testLinksWithTargets()[pri:0, instance:jalview.util.UrlLinkTest@20765ed5]" name="testLinksWithTargets" class="jalview.util.UrlLinkTest"/>
        <method signature="UrlLinkTest.testMakeUrlNoRegex()[pri:0, instance:jalview.util.UrlLinkTest@20765ed5]" name="testMakeUrlNoRegex" class="jalview.util.UrlLinkTest"/>
        <method signature="UrlLinkTest.testMakeUrlWithRegex()[pri:0, instance:jalview.util.UrlLinkTest@20765ed5]" name="testMakeUrlWithRegex" class="jalview.util.UrlLinkTest"/>
        <method signature="UrlLinkTest.testUrlLinkCreationNoRegex()[pri:0, instance:jalview.util.UrlLinkTest@20765ed5]" name="testUrlLinkCreationNoRegex" class="jalview.util.UrlLinkTest"/>
        <method signature="UrlLinkTest.testUrlLinkCreationWithRegex()[pri:0, instance:jalview.util.UrlLinkTest@20765ed5]" name="testUrlLinkCreationWithRegex" class="jalview.util.UrlLinkTest"/>
        <method signature="UrlProviderTest.testInitUrlProvider()[pri:0, instance:jalview.urls.UrlProviderTest@438bad7c]" name="testInitUrlProvider" class="jalview.urls.UrlProviderTest"/>
        <method signature="UrlProviderTest.testSetDefaultUrl()[pri:0, instance:jalview.urls.UrlProviderTest@438bad7c]" name="testSetDefaultUrl" class="jalview.urls.UrlProviderTest"/>
        <method signature="UrlProviderTest.testSetDefaultUrlWrongly()[pri:0, instance:jalview.urls.UrlProviderTest@438bad7c]" name="testSetDefaultUrlWrongly" class="jalview.urls.UrlProviderTest"/>
        <method signature="UserColourSchemeTest.testConstructor_coloursArray()[pri:0, instance:jalview.schemes.UserColourSchemeTest@31198ceb]" name="testConstructor_coloursArray" class="jalview.schemes.UserColourSchemeTest"/>
        <method signature="UserColourSchemeTest.testParseAppletParameter()[pri:0, instance:jalview.schemes.UserColourSchemeTest@31198ceb]" name="testParseAppletParameter" class="jalview.schemes.UserColourSchemeTest"/>
        <method signature="UserColourSchemeTest.testToAppletParameter()[pri:0, instance:jalview.schemes.UserColourSchemeTest@31198ceb]" name="testToAppletParameter" class="jalview.schemes.UserColourSchemeTest"/>
        <method signature="VCFLoaderTest.testDoLoad()[pri:0, instance:jalview.io.vcf.VCFLoaderTest@17ae98d7]" name="testDoLoad" class="jalview.io.vcf.VCFLoaderTest"/>
        <method signature="VCFLoaderTest.testDoLoad_reverseStrand()[pri:0, instance:jalview.io.vcf.VCFLoaderTest@17ae98d7]" name="testDoLoad_reverseStrand" class="jalview.io.vcf.VCFLoaderTest"/>
        <method signature="VCFLoaderTest.testDoLoad_vepCsq()[pri:0, instance:jalview.io.vcf.VCFLoaderTest@17ae98d7]" name="testDoLoad_vepCsq" class="jalview.io.vcf.VCFLoaderTest"/>
        <method signature="VCFLoaderTest.testLoadVCFContig()[pri:0, instance:jalview.io.vcf.VCFLoaderTest@17ae98d7]" name="testLoadVCFContig" class="jalview.io.vcf.VCFLoaderTest"/>
        <method signature="VCFReaderTest.testQuery_plain()[pri:0, instance:jalview.ext.htsjdk.VCFReaderTest@13c612bd]" name="testQuery_plain" class="jalview.ext.htsjdk.VCFReaderTest"/>
        <method signature="VCFReaderTest.testReadVcf_plain()[pri:0, instance:jalview.ext.htsjdk.VCFReaderTest@13c612bd]" name="testReadVcf_plain" class="jalview.ext.htsjdk.VCFReaderTest"/>
        <method signature="ViewStyleTest.testCopyConstructor()[pri:0, instance:jalview.viewmodel.styles.ViewStyleTest@130a0f66]" name="testCopyConstructor" class="jalview.viewmodel.styles.ViewStyleTest"/>
        <method signature="ViewStyleTest.testEquals()[pri:0, instance:jalview.viewmodel.styles.ViewStyleTest@130a0f66]" name="testEquals" class="jalview.viewmodel.styles.ViewStyleTest"/>
        <method signature="ViewportRangesTest.testEventFiring()[pri:0, instance:jalview.viewmodel.ViewportRangesTest@76b0ae1b]" name="testEventFiring" class="jalview.viewmodel.ViewportRangesTest"/>
        <method signature="ViewportRangesTest.testGetAbsoluteAlignmentHeight()[pri:0, instance:jalview.viewmodel.ViewportRangesTest@76b0ae1b]" name="testGetAbsoluteAlignmentHeight" class="jalview.viewmodel.ViewportRangesTest"/>
        <method signature="ViewportRangesTest.testGetAbsoluteAlignmentWidth()[pri:0, instance:jalview.viewmodel.ViewportRangesTest@76b0ae1b]" name="testGetAbsoluteAlignmentWidth" class="jalview.viewmodel.ViewportRangesTest"/>
        <method signature="ViewportRangesTest.testGetWrappedMaxScroll()[pri:0, instance:jalview.viewmodel.ViewportRangesTest@76b0ae1b]" name="testGetWrappedMaxScroll" class="jalview.viewmodel.ViewportRangesTest"/>
        <method signature="ViewportRangesTest.testGetWrappedScrollPosition()[pri:0, instance:jalview.viewmodel.ViewportRangesTest@76b0ae1b]" name="testGetWrappedScrollPosition" class="jalview.viewmodel.ViewportRangesTest"/>
        <method signature="ViewportRangesTest.testPageUpDown()[pri:0, instance:jalview.viewmodel.ViewportRangesTest@76b0ae1b]" name="testPageUpDown" class="jalview.viewmodel.ViewportRangesTest"/>
        <method signature="ViewportRangesTest.testPageUpDownWrapped()[pri:0, instance:jalview.viewmodel.ViewportRangesTest@76b0ae1b]" name="testPageUpDownWrapped" class="jalview.viewmodel.ViewportRangesTest"/>
        <method signature="ViewportRangesTest.testScrollRight()[pri:0, instance:jalview.viewmodel.ViewportRangesTest@76b0ae1b]" name="testScrollRight" class="jalview.viewmodel.ViewportRangesTest"/>
        <method signature="ViewportRangesTest.testScrollRightWithHidden()[pri:0, instance:jalview.viewmodel.ViewportRangesTest@76b0ae1b]" name="testScrollRightWithHidden" class="jalview.viewmodel.ViewportRangesTest"/>
        <method signature="ViewportRangesTest.testScrollToVisible()[pri:0, instance:jalview.viewmodel.ViewportRangesTest@76b0ae1b]" name="testScrollToVisible" class="jalview.viewmodel.ViewportRangesTest"/>
        <method signature="ViewportRangesTest.testScrollToWrappedVisible()[pri:0, instance:jalview.viewmodel.ViewportRangesTest@76b0ae1b]" name="testScrollToWrappedVisible" class="jalview.viewmodel.ViewportRangesTest"/>
        <method signature="ViewportRangesTest.testScrollUp()[pri:0, instance:jalview.viewmodel.ViewportRangesTest@76b0ae1b]" name="testScrollUp" class="jalview.viewmodel.ViewportRangesTest"/>
        <method signature="ViewportRangesTest.testScrollUpWithHidden()[pri:0, instance:jalview.viewmodel.ViewportRangesTest@76b0ae1b]" name="testScrollUpWithHidden" class="jalview.viewmodel.ViewportRangesTest"/>
        <method signature="ViewportRangesTest.testScrollUp_wrapped()[pri:0, instance:jalview.viewmodel.ViewportRangesTest@76b0ae1b]" name="testScrollUp_wrapped" class="jalview.viewmodel.ViewportRangesTest"/>
        <method signature="ViewportRangesTest.testSetEndSeq()[pri:0, instance:jalview.viewmodel.ViewportRangesTest@76b0ae1b]" name="testSetEndSeq" class="jalview.viewmodel.ViewportRangesTest"/>
        <method signature="ViewportRangesTest.testSetStartEndRes()[pri:0, instance:jalview.viewmodel.ViewportRangesTest@76b0ae1b]" name="testSetStartEndRes" class="jalview.viewmodel.ViewportRangesTest"/>
        <method signature="ViewportRangesTest.testSetStartEndResWrapped()[pri:0, instance:jalview.viewmodel.ViewportRangesTest@76b0ae1b]" name="testSetStartEndResWrapped" class="jalview.viewmodel.ViewportRangesTest"/>
        <method signature="ViewportRangesTest.testSetStartEndSeq()[pri:0, instance:jalview.viewmodel.ViewportRangesTest@76b0ae1b]" name="testSetStartEndSeq" class="jalview.viewmodel.ViewportRangesTest"/>
        <method signature="ViewportRangesTest.testSetStartRes()[pri:0, instance:jalview.viewmodel.ViewportRangesTest@76b0ae1b]" name="testSetStartRes" class="jalview.viewmodel.ViewportRangesTest"/>
        <method signature="ViewportRangesTest.testSetStartResAndSeq()[pri:0, instance:jalview.viewmodel.ViewportRangesTest@76b0ae1b]" name="testSetStartResAndSeq" class="jalview.viewmodel.ViewportRangesTest"/>
        <method signature="ViewportRangesTest.testSetStartSeq()[pri:0, instance:jalview.viewmodel.ViewportRangesTest@76b0ae1b]" name="testSetStartSeq" class="jalview.viewmodel.ViewportRangesTest"/>
        <method signature="ViewportRangesTest.testSetViewportHeight()[pri:0, instance:jalview.viewmodel.ViewportRangesTest@76b0ae1b]" name="testSetViewportHeight" class="jalview.viewmodel.ViewportRangesTest"/>
        <method signature="ViewportRangesTest.testSetViewportLocation()[pri:0, instance:jalview.viewmodel.ViewportRangesTest@76b0ae1b]" name="testSetViewportLocation" class="jalview.viewmodel.ViewportRangesTest"/>
        <method signature="ViewportRangesTest.testSetViewportStartAndHeight()[pri:0, instance:jalview.viewmodel.ViewportRangesTest@76b0ae1b]" name="testSetViewportStartAndHeight" class="jalview.viewmodel.ViewportRangesTest"/>
        <method signature="ViewportRangesTest.testSetViewportStartAndWidth()[pri:0, instance:jalview.viewmodel.ViewportRangesTest@76b0ae1b]" name="testSetViewportStartAndWidth" class="jalview.viewmodel.ViewportRangesTest"/>
        <method signature="ViewportRangesTest.testSetViewportStartAndWidthWrapped()[pri:0, instance:jalview.viewmodel.ViewportRangesTest@76b0ae1b]" name="testSetViewportStartAndWidthWrapped" class="jalview.viewmodel.ViewportRangesTest"/>
        <method signature="ViewportRangesTest.testSetViewportWidth()[pri:0, instance:jalview.viewmodel.ViewportRangesTest@76b0ae1b]" name="testSetViewportWidth" class="jalview.viewmodel.ViewportRangesTest"/>
        <method signature="ViewportRangesTest.testViewportRanges()[pri:0, instance:jalview.viewmodel.ViewportRangesTest@76b0ae1b]" name="testViewportRanges" class="jalview.viewmodel.ViewportRangesTest"/>
        <method signature="VisibleContigsIteratorTest.testMultipleVisibleRegions()[pri:0, instance:jalview.datamodel.VisibleContigsIteratorTest@33d05366]" name="testMultipleVisibleRegions" class="jalview.datamodel.VisibleContigsIteratorTest"/>
        <method signature="VisibleContigsIteratorTest.testSimpleVisibleRegions()[pri:0, instance:jalview.datamodel.VisibleContigsIteratorTest@33d05366]" name="testSimpleVisibleRegions" class="jalview.datamodel.VisibleContigsIteratorTest"/>
        <method signature="VisibleContigsIteratorTest.testVisibleRegionsAtHiddenEdges()[pri:0, instance:jalview.datamodel.VisibleContigsIteratorTest@33d05366]" name="testVisibleRegionsAtHiddenEdges" class="jalview.datamodel.VisibleContigsIteratorTest"/>
        <method signature="VisibleRowsIteratorTest.testHasNextAndNextEndHidden()[pri:0, instance:jalview.datamodel.VisibleRowsIteratorTest@27a0a5a2]" name="testHasNextAndNextEndHidden" class="jalview.datamodel.VisibleRowsIteratorTest"/>
        <method signature="VisibleRowsIteratorTest.testHasNextAndNextNoHidden()[pri:0, instance:jalview.datamodel.VisibleRowsIteratorTest@27a0a5a2]" name="testHasNextAndNextNoHidden" class="jalview.datamodel.VisibleRowsIteratorTest"/>
        <method signature="VisibleRowsIteratorTest.testHasNextAndNextStartHidden()[pri:0, instance:jalview.datamodel.VisibleRowsIteratorTest@27a0a5a2]" name="testHasNextAndNextStartHidden" class="jalview.datamodel.VisibleRowsIteratorTest"/>
        <method signature="VisibleRowsIteratorTest.testHasNextAndNextWithHidden()[pri:0, instance:jalview.datamodel.VisibleRowsIteratorTest@27a0a5a2]" name="testHasNextAndNextWithHidden" class="jalview.datamodel.VisibleRowsIteratorTest"/>
        <method signature="VisibleRowsIteratorTest.testLastNextEndHidden()[pri:0, instance:jalview.datamodel.VisibleRowsIteratorTest@27a0a5a2]" name="testLastNextEndHidden" class="jalview.datamodel.VisibleRowsIteratorTest"/>
        <method signature="VisibleRowsIteratorTest.testLastNextNoHidden()[pri:0, instance:jalview.datamodel.VisibleRowsIteratorTest@27a0a5a2]" name="testLastNextNoHidden" class="jalview.datamodel.VisibleRowsIteratorTest"/>
        <method signature="VisibleRowsIteratorTest.testLastNextStartHidden()[pri:0, instance:jalview.datamodel.VisibleRowsIteratorTest@27a0a5a2]" name="testLastNextStartHidden" class="jalview.datamodel.VisibleRowsIteratorTest"/>
        <method signature="VisibleRowsIteratorTest.testLastNextWithHidden()[pri:0, instance:jalview.datamodel.VisibleRowsIteratorTest@27a0a5a2]" name="testLastNextWithHidden" class="jalview.datamodel.VisibleRowsIteratorTest"/>
        <method signature="VisibleRowsIteratorTest.testRemove()[pri:0, instance:jalview.datamodel.VisibleRowsIteratorTest@27a0a5a2]" name="testRemove" class="jalview.datamodel.VisibleRowsIteratorTest"/>
        <method signature="WindowsFileLoadAndSaveTest.loadAndSaveAlignment()[pri:0, instance:jalview.io.WindowsFileLoadAndSaveTest@492fc69e]" name="loadAndSaveAlignment" class="jalview.io.WindowsFileLoadAndSaveTest"/>
      </group> <!-- Functional -->
      <group name="Asserts">
        <method signature="AlignmentTest.testAssertDatasetIsNormalised()[pri:0, instance:jalview.datamodel.AlignmentTest@27dc79f7]" name="testAssertDatasetIsNormalised" class="jalview.datamodel.AlignmentTest"/>
      </group> <!-- Asserts -->
      <group name="Timing">
        <method signature="MatrixTest.testFindMinMax_timing()[pri:0, instance:jalview.math.MatrixTest@59221b97]" name="testFindMinMax_timing" class="jalview.math.MatrixTest"/>
      </group> <!-- Timing -->
      <group name="Not-bamboo">
        <method signature="AlignmentPanelTest.testGetVisibleWidth()[pri:0, instance:jalview.gui.AlignmentPanelTest@77b325b3]" name="testGetVisibleWidth" class="jalview.gui.AlignmentPanelTest"/>
      </group> <!-- Not-bamboo -->
    </groups>
    <test started-at="2023-07-02T08:11:14Z" name="Gradle test" finished-at="2023-07-02T08:13:44Z" duration-ms="149405">
      <class name="jalview.analysis.SeqsetUtilsTest">
        <test-method is-config="true" signature="setUpJvOptionPane()[pri:0, instance:jalview.analysis.SeqsetUtilsTest@2fa7ae9]" started-at="2023-07-02T10:12:07Z" name="setUpJvOptionPane" finished-at="2023-07-02T10:12:07Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpJvOptionPane -->
        <test-method signature="testSeqFeatureAddition()[pri:0, instance:jalview.analysis.SeqsetUtilsTest@2fa7ae9]" started-at="2023-07-02T10:12:07Z" name="testSeqFeatureAddition" finished-at="2023-07-02T10:12:07Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSeqFeatureAddition -->
      </class> <!-- jalview.analysis.SeqsetUtilsTest -->
      <class name="jalview.util.MathUtilsTest">
        <test-method signature="testGcd()[pri:0, instance:jalview.util.MathUtilsTest@38d5b107]" started-at="2023-07-02T10:12:31Z" name="testGcd" finished-at="2023-07-02T10:12:31Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGcd -->
      </class> <!-- jalview.util.MathUtilsTest -->
      <class name="jalview.controller.AlignViewControllerTest">
        <test-method is-config="true" signature="setUpJvOptionPane()[pri:0, instance:jalview.controller.AlignViewControllerTest@2c22a348]" started-at="2023-07-02T10:13:43Z" name="setUpJvOptionPane" finished-at="2023-07-02T10:13:43Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpJvOptionPane -->
        <test-method signature="testFindColumnsWithFeature()[pri:0, instance:jalview.controller.AlignViewControllerTest@2c22a348]" started-at="2023-07-02T10:13:43Z" name="testFindColumnsWithFeature" finished-at="2023-07-02T10:13:43Z" duration-ms="32" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFindColumnsWithFeature -->
        <test-method signature="testSelectColumnsWithHighlight()[pri:0, instance:jalview.controller.AlignViewControllerTest@2c22a348]" started-at="2023-07-02T10:13:43Z" name="testSelectColumnsWithHighlight" finished-at="2023-07-02T10:13:43Z" duration-ms="18" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSelectColumnsWithHighlight -->
      </class> <!-- jalview.controller.AlignViewControllerTest -->
      <class name="jalview.util.JSONUtilsTest">
        <test-method signature="testArrayToList()[pri:0, instance:jalview.util.JSONUtilsTest@315ba14a]" started-at="2023-07-02T10:12:18Z" name="testArrayToList" finished-at="2023-07-02T10:12:18Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testArrayToList -->
      </class> <!-- jalview.util.JSONUtilsTest -->
      <class name="jalview.gui.SequenceRendererTest">
        <test-method is-config="true" signature="setUpBeforeClass()[pri:0, instance:jalview.gui.SequenceRendererTest@66b72664]" started-at="2023-07-02T10:12:00Z" name="setUpBeforeClass" finished-at="2023-07-02T10:12:00Z" duration-ms="70" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpBeforeClass -->
        <test-method signature="testGetResidueColour_WithGroup()[pri:0, instance:jalview.gui.SequenceRendererTest@66b72664]" started-at="2023-07-02T10:12:00Z" name="testGetResidueColour_WithGroup" finished-at="2023-07-02T10:12:00Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetResidueColour_WithGroup -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:jalview.gui.SequenceRendererTest@66b72664]" started-at="2023-07-02T10:12:00Z" name="setUp" finished-at="2023-07-02T10:12:00Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
      </class> <!-- jalview.gui.SequenceRendererTest -->
      <class name="jalview.ext.rbvi.chimera.ChimeraXCommandsTest">
        <test-method is-config="true" signature="setUp()[pri:0, instance:jalview.ext.rbvi.chimera.ChimeraXCommandsTest@6a175569]" started-at="2023-07-02T10:11:38Z" name="setUp" finished-at="2023-07-02T10:11:38Z" duration-ms="3" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="testCloseViewer()[pri:0, instance:jalview.ext.rbvi.chimera.ChimeraXCommandsTest@6a175569]" started-at="2023-07-02T10:11:38Z" name="testCloseViewer" finished-at="2023-07-02T10:11:38Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCloseViewer -->
        <test-method signature="testColourByChain()[pri:0, instance:jalview.ext.rbvi.chimera.ChimeraXCommandsTest@6a175569]" started-at="2023-07-02T10:11:38Z" name="testColourByChain" finished-at="2023-07-02T10:11:38Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testColourByChain -->
        <test-method signature="testColourByCharge()[pri:0, instance:jalview.ext.rbvi.chimera.ChimeraXCommandsTest@6a175569]" started-at="2023-07-02T10:11:38Z" name="testColourByCharge" finished-at="2023-07-02T10:11:38Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testColourByCharge -->
        <test-method signature="testColourBySequence()[pri:0, instance:jalview.ext.rbvi.chimera.ChimeraXCommandsTest@6a175569]" started-at="2023-07-02T10:11:38Z" name="testColourBySequence" finished-at="2023-07-02T10:11:38Z" duration-ms="9" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testColourBySequence -->
        <test-method signature="testFocusView()[pri:0, instance:jalview.ext.rbvi.chimera.ChimeraXCommandsTest@6a175569]" started-at="2023-07-02T10:11:38Z" name="testFocusView" finished-at="2023-07-02T10:11:38Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFocusView -->
        <test-method signature="testGetAtomSpec()[pri:0, instance:jalview.ext.rbvi.chimera.ChimeraXCommandsTest@6a175569]" started-at="2023-07-02T10:11:38Z" name="testGetAtomSpec" finished-at="2023-07-02T10:11:38Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetAtomSpec -->
        <test-method signature="testGetAtomSpec_alphaOnly()[pri:0, instance:jalview.ext.rbvi.chimera.ChimeraXCommandsTest@6a175569]" started-at="2023-07-02T10:11:38Z" name="testGetAtomSpec_alphaOnly" finished-at="2023-07-02T10:11:38Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetAtomSpec_alphaOnly -->
        <test-method signature="testGetColourCommand()[pri:0, instance:jalview.ext.rbvi.chimera.ChimeraXCommandsTest@6a175569]" started-at="2023-07-02T10:11:38Z" name="testGetColourCommand" finished-at="2023-07-02T10:11:38Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetColourCommand -->
        <test-method signature="testGetResidueSpec()[pri:0, instance:jalview.ext.rbvi.chimera.ChimeraXCommandsTest@6a175569]" started-at="2023-07-02T10:11:38Z" name="testGetResidueSpec" finished-at="2023-07-02T10:11:38Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetResidueSpec -->
        <test-method signature="testGetModelStartNo()[pri:0, instance:jalview.ext.rbvi.chimera.ChimeraXCommandsTest@6a175569]" started-at="2023-07-02T10:11:38Z" name="testGetModelStartNo" finished-at="2023-07-02T10:11:38Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetModelStartNo -->
        <test-method signature="testGetSelectedResidues()[pri:0, instance:jalview.ext.rbvi.chimera.ChimeraXCommandsTest@6a175569]" started-at="2023-07-02T10:11:38Z" name="testGetSelectedResidues" finished-at="2023-07-02T10:11:38Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetSelectedResidues -->
        <test-method signature="testListResidueAttributes()[pri:0, instance:jalview.ext.rbvi.chimera.ChimeraXCommandsTest@6a175569]" started-at="2023-07-02T10:11:38Z" name="testListResidueAttributes" finished-at="2023-07-02T10:11:38Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testListResidueAttributes -->
        <test-method signature="testOpenCommandFile()[pri:0, instance:jalview.ext.rbvi.chimera.ChimeraXCommandsTest@6a175569]" started-at="2023-07-02T10:11:38Z" name="testOpenCommandFile" finished-at="2023-07-02T10:11:38Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testOpenCommandFile -->
        <test-method signature="testOpenSession()[pri:0, instance:jalview.ext.rbvi.chimera.ChimeraXCommandsTest@6a175569]" started-at="2023-07-02T10:11:38Z" name="testOpenSession" finished-at="2023-07-02T10:11:38Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testOpenSession -->
        <test-method signature="testSaveSession()[pri:0, instance:jalview.ext.rbvi.chimera.ChimeraXCommandsTest@6a175569]" started-at="2023-07-02T10:11:38Z" name="testSaveSession" finished-at="2023-07-02T10:11:38Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSaveSession -->
        <test-method signature="testSetAttribute()[pri:0, instance:jalview.ext.rbvi.chimera.ChimeraXCommandsTest@6a175569]" started-at="2023-07-02T10:11:38Z" name="testSetAttribute" finished-at="2023-07-02T10:11:38Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSetAttribute -->
        <test-method signature="testSetAttributes()[pri:0, instance:jalview.ext.rbvi.chimera.ChimeraXCommandsTest@6a175569]" started-at="2023-07-02T10:11:38Z" name="testSetAttributes" finished-at="2023-07-02T10:11:38Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSetAttributes -->
        <test-method signature="testSetBackgroundColour()[pri:0, instance:jalview.ext.rbvi.chimera.ChimeraXCommandsTest@6a175569]" started-at="2023-07-02T10:11:38Z" name="testSetBackgroundColour" finished-at="2023-07-02T10:11:38Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSetBackgroundColour -->
        <test-method signature="testShowBackbone()[pri:0, instance:jalview.ext.rbvi.chimera.ChimeraXCommandsTest@6a175569]" started-at="2023-07-02T10:11:38Z" name="testShowBackbone" finished-at="2023-07-02T10:11:38Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testShowBackbone -->
        <test-method signature="testStartNotifications()[pri:0, instance:jalview.ext.rbvi.chimera.ChimeraXCommandsTest@6a175569]" started-at="2023-07-02T10:11:38Z" name="testStartNotifications" finished-at="2023-07-02T10:11:38Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testStartNotifications -->
        <test-method signature="testSuperposeStructures()[pri:0, instance:jalview.ext.rbvi.chimera.ChimeraXCommandsTest@6a175569]" started-at="2023-07-02T10:11:38Z" name="testSuperposeStructures" finished-at="2023-07-02T10:11:38Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSuperposeStructures -->
        <test-method signature="testStopNotifications()[pri:0, instance:jalview.ext.rbvi.chimera.ChimeraXCommandsTest@6a175569]" started-at="2023-07-02T10:11:38Z" name="testStopNotifications" finished-at="2023-07-02T10:11:38Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testStopNotifications -->
      </class> <!-- jalview.ext.rbvi.chimera.ChimeraXCommandsTest -->
      <class name="jalview.schemes.ResiduePropertiesTest">
        <test-method signature="testCodonTranslate()[pri:0, instance:jalview.schemes.ResiduePropertiesTest@1e34c607]" started-at="2023-07-02T10:12:18Z" name="testCodonTranslate" finished-at="2023-07-02T10:12:18Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCodonTranslate -->
        <test-method is-config="true" signature="setUpJvOptionPane()[pri:0, instance:jalview.schemes.ResiduePropertiesTest@1e34c607]" started-at="2023-07-02T10:12:18Z" name="setUpJvOptionPane" finished-at="2023-07-02T10:12:18Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpJvOptionPane -->
        <test-method signature="testCodonTranslate_ambiguityCodes()[pri:0, instance:jalview.schemes.ResiduePropertiesTest@1e34c607]" started-at="2023-07-02T10:12:18Z" name="testCodonTranslate_ambiguityCodes" finished-at="2023-07-02T10:12:18Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCodonTranslate_ambiguityCodes -->
        <test-method signature="testGetCanonicalAminoAcid()[pri:0, instance:jalview.schemes.ResiduePropertiesTest@1e34c607]" started-at="2023-07-02T10:12:18Z" name="testGetCanonicalAminoAcid" finished-at="2023-07-02T10:12:18Z" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetCanonicalAminoAcid -->
        <test-method signature="testGetDssp3State()[pri:0, instance:jalview.schemes.ResiduePropertiesTest@1e34c607]" started-at="2023-07-02T10:12:18Z" name="testGetDssp3State" finished-at="2023-07-02T10:12:18Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetDssp3State -->
        <test-method signature="testPhysicoChemicalProperties()[pri:0, instance:jalview.schemes.ResiduePropertiesTest@1e34c607]" started-at="2023-07-02T10:12:18Z" name="testPhysicoChemicalProperties" finished-at="2023-07-02T10:12:18Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testPhysicoChemicalProperties -->
        <test-method signature="testGetSingleCharacterCode()[pri:0, instance:jalview.schemes.ResiduePropertiesTest@1e34c607]" started-at="2023-07-02T10:12:18Z" name="testGetSingleCharacterCode" finished-at="2023-07-02T10:12:18Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetSingleCharacterCode -->
        <test-method signature="testGetResidues_nucleotide()[pri:0, instance:jalview.schemes.ResiduePropertiesTest@1e34c607]" started-at="2023-07-02T10:12:18Z" name="testGetResidues_nucleotide" finished-at="2023-07-02T10:12:18Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetResidues_nucleotide -->
        <test-method signature="testGetResidues_peptide()[pri:0, instance:jalview.schemes.ResiduePropertiesTest@1e34c607]" started-at="2023-07-02T10:12:18Z" name="testGetResidues_peptide" finished-at="2023-07-02T10:12:18Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetResidues_peptide -->
      </class> <!-- jalview.schemes.ResiduePropertiesTest -->
      <class name="jalview.io.PfamFormatInputTest">
        <test-method is-config="true" signature="setUpJvOptionPane()[pri:0, instance:jalview.io.PfamFormatInputTest@5a12c728]" started-at="2023-07-02T10:11:45Z" name="setUpJvOptionPane" finished-at="2023-07-02T10:11:45Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpJvOptionPane -->
        <test-method signature="testPfamFormatNoLimits()[pri:0, instance:jalview.io.PfamFormatInputTest@5a12c728]" started-at="2023-07-02T10:11:45Z" name="testPfamFormatNoLimits" finished-at="2023-07-02T10:11:45Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testPfamFormatNoLimits -->
        <test-method signature="testPfamFormatValidLimits()[pri:0, instance:jalview.io.PfamFormatInputTest@5a12c728]" started-at="2023-07-02T10:11:45Z" name="testPfamFormatValidLimits" finished-at="2023-07-02T10:11:45Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testPfamFormatValidLimits -->
      </class> <!-- jalview.io.PfamFormatInputTest -->
      <class name="jalview.ext.rbvi.chimera.ChimeraCommandsTest">
        <test-method is-config="true" signature="setUp()[pri:0, instance:jalview.ext.rbvi.chimera.ChimeraCommandsTest@3d526ad9]" started-at="2023-07-02T10:11:41Z" name="setUp" finished-at="2023-07-02T10:11:41Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="testColourByCharge()[pri:0, instance:jalview.ext.rbvi.chimera.ChimeraCommandsTest@3d526ad9]" started-at="2023-07-02T10:11:41Z" name="testColourByCharge" finished-at="2023-07-02T10:11:41Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testColourByCharge -->
        <test-method signature="testColourByChain()[pri:0, instance:jalview.ext.rbvi.chimera.ChimeraCommandsTest@3d526ad9]" started-at="2023-07-02T10:11:41Z" name="testColourByChain" finished-at="2023-07-02T10:11:41Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testColourByChain -->
        <test-method signature="testCloseViewer()[pri:0, instance:jalview.ext.rbvi.chimera.ChimeraCommandsTest@3d526ad9]" started-at="2023-07-02T10:11:41Z" name="testCloseViewer" finished-at="2023-07-02T10:11:41Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCloseViewer -->
        <test-method signature="testColourBySequence()[pri:0, instance:jalview.ext.rbvi.chimera.ChimeraCommandsTest@3d526ad9]" started-at="2023-07-02T10:11:41Z" name="testColourBySequence" finished-at="2023-07-02T10:11:41Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testColourBySequence -->
        <test-method signature="testFocusView()[pri:0, instance:jalview.ext.rbvi.chimera.ChimeraCommandsTest@3d526ad9]" started-at="2023-07-02T10:11:41Z" name="testFocusView" finished-at="2023-07-02T10:11:41Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFocusView -->
        <test-method signature="testGetAtomSpec()[pri:0, instance:jalview.ext.rbvi.chimera.ChimeraCommandsTest@3d526ad9]" started-at="2023-07-02T10:11:41Z" name="testGetAtomSpec" finished-at="2023-07-02T10:11:41Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetAtomSpec -->
        <test-method signature="testGetAtomSpec_alphaOnly()[pri:0, instance:jalview.ext.rbvi.chimera.ChimeraCommandsTest@3d526ad9]" started-at="2023-07-02T10:11:41Z" name="testGetAtomSpec_alphaOnly" finished-at="2023-07-02T10:11:41Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetAtomSpec_alphaOnly -->
        <test-method signature="testGetColourCommand()[pri:0, instance:jalview.ext.rbvi.chimera.ChimeraCommandsTest@3d526ad9]" started-at="2023-07-02T10:11:41Z" name="testGetColourCommand" finished-at="2023-07-02T10:11:41Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetColourCommand -->
        <test-method signature="testGetModelStartNo()[pri:0, instance:jalview.ext.rbvi.chimera.ChimeraCommandsTest@3d526ad9]" started-at="2023-07-02T10:11:41Z" name="testGetModelStartNo" finished-at="2023-07-02T10:11:41Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetModelStartNo -->
        <test-method signature="testGetResidueAttributes()[pri:0, instance:jalview.ext.rbvi.chimera.ChimeraCommandsTest@3d526ad9]" started-at="2023-07-02T10:11:41Z" name="testGetResidueAttributes" finished-at="2023-07-02T10:11:41Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetResidueAttributes -->
        <test-method signature="testGetResidueSpec()[pri:0, instance:jalview.ext.rbvi.chimera.ChimeraCommandsTest@3d526ad9]" started-at="2023-07-02T10:11:41Z" name="testGetResidueSpec" finished-at="2023-07-02T10:11:41Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetResidueSpec -->
        <test-method signature="testGetSelectedResidues()[pri:0, instance:jalview.ext.rbvi.chimera.ChimeraCommandsTest@3d526ad9]" started-at="2023-07-02T10:11:41Z" name="testGetSelectedResidues" finished-at="2023-07-02T10:11:41Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetSelectedResidues -->
        <test-method signature="testLoadFile()[pri:0, instance:jalview.ext.rbvi.chimera.ChimeraCommandsTest@3d526ad9]" started-at="2023-07-02T10:11:41Z" name="testLoadFile" finished-at="2023-07-02T10:11:41Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testLoadFile -->
        <test-method signature="testListResidueAttributes()[pri:0, instance:jalview.ext.rbvi.chimera.ChimeraCommandsTest@3d526ad9]" started-at="2023-07-02T10:11:41Z" name="testListResidueAttributes" finished-at="2023-07-02T10:11:41Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testListResidueAttributes -->
        <test-method signature="testOpenCommandFile()[pri:0, instance:jalview.ext.rbvi.chimera.ChimeraCommandsTest@3d526ad9]" started-at="2023-07-02T10:11:41Z" name="testOpenCommandFile" finished-at="2023-07-02T10:11:41Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testOpenCommandFile -->
        <test-method signature="testMakeAttributeName()[pri:0, instance:jalview.ext.rbvi.chimera.ChimeraCommandsTest@3d526ad9]" started-at="2023-07-02T10:11:41Z" name="testMakeAttributeName" finished-at="2023-07-02T10:11:41Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMakeAttributeName -->
        <test-method signature="testSaveSession()[pri:0, instance:jalview.ext.rbvi.chimera.ChimeraCommandsTest@3d526ad9]" started-at="2023-07-02T10:11:41Z" name="testSaveSession" finished-at="2023-07-02T10:11:41Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSaveSession -->
        <test-method signature="testOpenSession()[pri:0, instance:jalview.ext.rbvi.chimera.ChimeraCommandsTest@3d526ad9]" started-at="2023-07-02T10:11:41Z" name="testOpenSession" finished-at="2023-07-02T10:11:41Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testOpenSession -->
        <test-method signature="testSetAttributes()[pri:0, instance:jalview.ext.rbvi.chimera.ChimeraCommandsTest@3d526ad9]" started-at="2023-07-02T10:11:41Z" name="testSetAttributes" finished-at="2023-07-02T10:11:41Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSetAttributes -->
        <test-method signature="testSetAttribute()[pri:0, instance:jalview.ext.rbvi.chimera.ChimeraCommandsTest@3d526ad9]" started-at="2023-07-02T10:11:41Z" name="testSetAttribute" finished-at="2023-07-02T10:11:41Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSetAttribute -->
        <test-method signature="testSetBackgroundColour()[pri:0, instance:jalview.ext.rbvi.chimera.ChimeraCommandsTest@3d526ad9]" started-at="2023-07-02T10:11:41Z" name="testSetBackgroundColour" finished-at="2023-07-02T10:11:41Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSetBackgroundColour -->
        <test-method signature="testShowBackbone()[pri:0, instance:jalview.ext.rbvi.chimera.ChimeraCommandsTest@3d526ad9]" started-at="2023-07-02T10:11:41Z" name="testShowBackbone" finished-at="2023-07-02T10:11:41Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testShowBackbone -->
        <test-method signature="testStartNotifications()[pri:0, instance:jalview.ext.rbvi.chimera.ChimeraCommandsTest@3d526ad9]" started-at="2023-07-02T10:11:41Z" name="testStartNotifications" finished-at="2023-07-02T10:11:41Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testStartNotifications -->
        <test-method signature="testStopNotifications()[pri:0, instance:jalview.ext.rbvi.chimera.ChimeraCommandsTest@3d526ad9]" started-at="2023-07-02T10:11:41Z" name="testStopNotifications" finished-at="2023-07-02T10:11:41Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testStopNotifications -->
        <test-method signature="testSuperposeStructures()[pri:0, instance:jalview.ext.rbvi.chimera.ChimeraCommandsTest@3d526ad9]" started-at="2023-07-02T10:11:41Z" name="testSuperposeStructures" finished-at="2023-07-02T10:11:41Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSuperposeStructures -->
      </class> <!-- jalview.ext.rbvi.chimera.ChimeraCommandsTest -->
      <class name="jalview.commands.EditCommandTest">
        <test-method is-config="true" signature="setUpJvOptionPane()[pri:0, instance:jalview.commands.EditCommandTest@12f3afb5]" started-at="2023-07-02T10:13:43Z" name="setUpJvOptionPane" finished-at="2023-07-02T10:13:43Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpJvOptionPane -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:jalview.commands.EditCommandTest@12f3afb5]" started-at="2023-07-02T10:13:43Z" name="setUp" finished-at="2023-07-02T10:13:43Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="testAppendEdit_deleteGap()[pri:0, instance:jalview.commands.EditCommandTest@12f3afb5]" started-at="2023-07-02T10:13:43Z" name="testAppendEdit_deleteGap" finished-at="2023-07-02T10:13:43Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAppendEdit_deleteGap -->
        <test-method signature="testAddEdit_groupInsertGaps()[pri:0, instance:jalview.commands.EditCommandTest@12f3afb5]" started-at="2023-07-02T10:13:43Z" name="testAddEdit_groupInsertGaps" finished-at="2023-07-02T10:13:43Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAddEdit_groupInsertGaps -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:jalview.commands.EditCommandTest@12f3afb5]" started-at="2023-07-02T10:13:43Z" name="setUp" finished-at="2023-07-02T10:13:43Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="testAddEdit_multipleDeleteGap()[pri:0, instance:jalview.commands.EditCommandTest@12f3afb5]" started-at="2023-07-02T10:13:43Z" name="testAddEdit_multipleDeleteGap" finished-at="2023-07-02T10:13:43Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAddEdit_multipleDeleteGap -->
        <test-method signature="testAddEdit_removeAllGaps()[pri:0, instance:jalview.commands.EditCommandTest@12f3afb5]" started-at="2023-07-02T10:13:43Z" name="testAddEdit_removeAllGaps" finished-at="2023-07-02T10:13:43Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAddEdit_removeAllGaps -->
        <test-method signature="testAddEdit_multipleInsertGap()[pri:0, instance:jalview.commands.EditCommandTest@12f3afb5]" started-at="2023-07-02T10:13:43Z" name="testAddEdit_multipleInsertGap" finished-at="2023-07-02T10:13:43Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAddEdit_multipleInsertGap -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:jalview.commands.EditCommandTest@12f3afb5]" started-at="2023-07-02T10:13:43Z" name="setUp" finished-at="2023-07-02T10:13:43Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:jalview.commands.EditCommandTest@12f3afb5]" started-at="2023-07-02T10:13:43Z" name="setUp" finished-at="2023-07-02T10:13:43Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:jalview.commands.EditCommandTest@12f3afb5]" started-at="2023-07-02T10:13:43Z" name="setUp" finished-at="2023-07-02T10:13:43Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:jalview.commands.EditCommandTest@12f3afb5]" started-at="2023-07-02T10:13:43Z" name="setUp" finished-at="2023-07-02T10:13:43Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:jalview.commands.EditCommandTest@12f3afb5]" started-at="2023-07-02T10:13:43Z" name="setUp" finished-at="2023-07-02T10:13:43Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:jalview.commands.EditCommandTest@12f3afb5]" started-at="2023-07-02T10:13:43Z" name="setUp" finished-at="2023-07-02T10:13:43Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="testCut_withFeatures()[pri:0, instance:jalview.commands.EditCommandTest@12f3afb5]" started-at="2023-07-02T10:13:43Z" name="testCut_withFeatures" finished-at="2023-07-02T10:13:43Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCut_withFeatures -->
        <test-method signature="testCut()[pri:0, instance:jalview.commands.EditCommandTest@12f3afb5]" started-at="2023-07-02T10:13:43Z" name="testCut" finished-at="2023-07-02T10:13:43Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCut -->
        <test-method signature="testAppendEdit_insertGap()[pri:0, instance:jalview.commands.EditCommandTest@12f3afb5]" started-at="2023-07-02T10:13:43Z" name="testAppendEdit_insertGap" finished-at="2023-07-02T10:13:43Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAppendEdit_insertGap -->
        <test-method signature="testCut_withFeatures5prime()[pri:0, instance:jalview.commands.EditCommandTest@12f3afb5]" started-at="2023-07-02T10:13:43Z" name="testCut_withFeatures5prime" finished-at="2023-07-02T10:13:43Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCut_withFeatures5prime -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:jalview.commands.EditCommandTest@12f3afb5]" started-at="2023-07-02T10:13:43Z" name="setUp" finished-at="2023-07-02T10:13:43Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="testCut_withFeatures_exhaustive()[pri:0, instance:jalview.commands.EditCommandTest@12f3afb5]" started-at="2023-07-02T10:13:43Z" name="testCut_withFeatures_exhaustive" finished-at="2023-07-02T10:13:43Z" duration-ms="31" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCut_withFeatures_exhaustive -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:jalview.commands.EditCommandTest@12f3afb5]" started-at="2023-07-02T10:13:43Z" name="setUp" finished-at="2023-07-02T10:13:43Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="testPriorState_multipleInserts()[pri:0, instance:jalview.commands.EditCommandTest@12f3afb5]" started-at="2023-07-02T10:13:43Z" name="testPriorState_multipleInserts" finished-at="2023-07-02T10:13:43Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testPriorState_multipleInserts -->
        <test-method signature="testPriorState_removeAllGaps()[pri:0, instance:jalview.commands.EditCommandTest@12f3afb5]" started-at="2023-07-02T10:13:43Z" name="testPriorState_removeAllGaps" finished-at="2023-07-02T10:13:43Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testPriorState_removeAllGaps -->
        <test-method signature="testPriorState_removeGappedCols()[pri:0, instance:jalview.commands.EditCommandTest@12f3afb5]" started-at="2023-07-02T10:13:43Z" name="testPriorState_removeGappedCols" finished-at="2023-07-02T10:13:43Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testPriorState_removeGappedCols -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:jalview.commands.EditCommandTest@12f3afb5]" started-at="2023-07-02T10:13:43Z" name="setUp" finished-at="2023-07-02T10:13:43Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:jalview.commands.EditCommandTest@12f3afb5]" started-at="2023-07-02T10:13:43Z" name="setUp" finished-at="2023-07-02T10:13:43Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:jalview.commands.EditCommandTest@12f3afb5]" started-at="2023-07-02T10:13:43Z" name="setUp" finished-at="2023-07-02T10:13:43Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:jalview.commands.EditCommandTest@12f3afb5]" started-at="2023-07-02T10:13:43Z" name="setUp" finished-at="2023-07-02T10:13:43Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="testPriorState_singleDelete()[pri:0, instance:jalview.commands.EditCommandTest@12f3afb5]" started-at="2023-07-02T10:13:43Z" name="testPriorState_singleDelete" finished-at="2023-07-02T10:13:43Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testPriorState_singleDelete -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:jalview.commands.EditCommandTest@12f3afb5]" started-at="2023-07-02T10:13:43Z" name="setUp" finished-at="2023-07-02T10:13:43Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="testPriorState_removeGapsMultipleSeqs()[pri:0, instance:jalview.commands.EditCommandTest@12f3afb5]" started-at="2023-07-02T10:13:43Z" name="testPriorState_removeGapsMultipleSeqs" finished-at="2023-07-02T10:13:43Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testPriorState_removeGapsMultipleSeqs -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:jalview.commands.EditCommandTest@12f3afb5]" started-at="2023-07-02T10:13:43Z" name="setUp" finished-at="2023-07-02T10:13:43Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="testPriorState_singleInsert()[pri:0, instance:jalview.commands.EditCommandTest@12f3afb5]" started-at="2023-07-02T10:13:43Z" name="testPriorState_singleInsert" finished-at="2023-07-02T10:13:43Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testPriorState_singleInsert -->
        <test-method signature="testPriorState_singleInsertWithOffset()[pri:0, instance:jalview.commands.EditCommandTest@12f3afb5]" started-at="2023-07-02T10:13:43Z" name="testPriorState_singleInsertWithOffset" finished-at="2023-07-02T10:13:43Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testPriorState_singleInsertWithOffset -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:jalview.commands.EditCommandTest@12f3afb5]" started-at="2023-07-02T10:13:43Z" name="setUp" finished-at="2023-07-02T10:13:43Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:jalview.commands.EditCommandTest@12f3afb5]" started-at="2023-07-02T10:13:43Z" name="setUp" finished-at="2023-07-02T10:13:43Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="testReplace()[pri:0, instance:jalview.commands.EditCommandTest@12f3afb5]" started-at="2023-07-02T10:13:43Z" name="testReplace" finished-at="2023-07-02T10:13:43Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testReplace -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:jalview.commands.EditCommandTest@12f3afb5]" started-at="2023-07-02T10:13:43Z" name="setUp" finished-at="2023-07-02T10:13:43Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:jalview.commands.EditCommandTest@12f3afb5]" started-at="2023-07-02T10:13:43Z" name="setUp" finished-at="2023-07-02T10:13:43Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="testUndo_cut()[pri:0, instance:jalview.commands.EditCommandTest@12f3afb5]" started-at="2023-07-02T10:13:43Z" name="testUndo_cut" finished-at="2023-07-02T10:13:43Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testUndo_cut -->
        <test-method signature="testReplaceFirstResiduesWithGaps()[pri:0, instance:jalview.commands.EditCommandTest@12f3afb5]" started-at="2023-07-02T10:13:43Z" name="testReplaceFirstResiduesWithGaps" finished-at="2023-07-02T10:13:43Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testReplaceFirstResiduesWithGaps -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:jalview.commands.EditCommandTest@12f3afb5]" started-at="2023-07-02T10:13:43Z" name="setUp" finished-at="2023-07-02T10:13:43Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="testReplace_withGaps()[pri:0, instance:jalview.commands.EditCommandTest@12f3afb5]" started-at="2023-07-02T10:13:43Z" name="testReplace_withGaps" finished-at="2023-07-02T10:13:43Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testReplace_withGaps -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:jalview.commands.EditCommandTest@12f3afb5]" started-at="2023-07-02T10:13:43Z" name="setUp" finished-at="2023-07-02T10:13:43Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="testUndo_deleteGap()[pri:0, instance:jalview.commands.EditCommandTest@12f3afb5]" started-at="2023-07-02T10:13:43Z" name="testUndo_deleteGap" finished-at="2023-07-02T10:13:43Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testUndo_deleteGap -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:jalview.commands.EditCommandTest@12f3afb5]" started-at="2023-07-02T10:13:43Z" name="setUp" finished-at="2023-07-02T10:13:43Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:jalview.commands.EditCommandTest@12f3afb5]" started-at="2023-07-02T10:13:43Z" name="setUp" finished-at="2023-07-02T10:13:43Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="testUndo_multipleCommands()[pri:0, instance:jalview.commands.EditCommandTest@12f3afb5]" started-at="2023-07-02T10:13:43Z" name="testUndo_multipleCommands" finished-at="2023-07-02T10:13:43Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testUndo_multipleCommands -->
        <test-method signature="testUndo_insertGap()[pri:0, instance:jalview.commands.EditCommandTest@12f3afb5]" started-at="2023-07-02T10:13:43Z" name="testUndo_insertGap" finished-at="2023-07-02T10:13:43Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testUndo_insertGap -->
        <test-method signature="testUndo_multipleInsertGaps()[pri:0, instance:jalview.commands.EditCommandTest@12f3afb5]" started-at="2023-07-02T10:13:43Z" name="testUndo_multipleInsertGaps" finished-at="2023-07-02T10:13:43Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testUndo_multipleInsertGaps -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:jalview.commands.EditCommandTest@12f3afb5]" started-at="2023-07-02T10:13:43Z" name="setUp" finished-at="2023-07-02T10:13:43Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
      </class> <!-- jalview.commands.EditCommandTest -->
      <class name="jalview.gui.FeatureSettingsTest">
        <test-method signature="testGetColorTooltip()[pri:0, instance:jalview.gui.FeatureSettingsTest@4d4d48a6]" started-at="2023-07-02T10:12:10Z" name="testGetColorTooltip" finished-at="2023-07-02T10:12:10Z" duration-ms="3" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetColorTooltip -->
        <test-method signature="testSaveLoad()[pri:0, instance:jalview.gui.FeatureSettingsTest@4d4d48a6]" started-at="2023-07-02T10:12:10Z" name="testSaveLoad" finished-at="2023-07-02T10:12:10Z" duration-ms="55" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSaveLoad -->
      </class> <!-- jalview.gui.FeatureSettingsTest -->
      <class name="jalview.analysis.CrossRefTest">
        <test-method is-config="true" signature="setUpJvOptionPane()[pri:0, instance:jalview.analysis.CrossRefTest@3c8bdd5b]" started-at="2023-07-02T10:11:59Z" name="setUpJvOptionPane" finished-at="2023-07-02T10:11:59Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpJvOptionPane -->
        <test-method signature="testFindXDbRefs()[pri:0, instance:jalview.analysis.CrossRefTest@3c8bdd5b]" started-at="2023-07-02T10:11:59Z" name="testFindXDbRefs" finished-at="2023-07-02T10:11:59Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFindXDbRefs -->
        <test-method signature="testFindXrefSequences_fromDbRefMap()[pri:0, instance:jalview.analysis.CrossRefTest@3c8bdd5b]" started-at="2023-07-02T10:11:59Z" name="testFindXrefSequences_fromDbRefMap" finished-at="2023-07-02T10:11:59Z" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFindXrefSequences_fromDbRefMap -->
        <test-method signature="testFindXrefSequences_indirectDbrefToNucleotide()[pri:0, instance:jalview.analysis.CrossRefTest@3c8bdd5b]" started-at="2023-07-02T10:11:59Z" name="testFindXrefSequences_indirectDbrefToNucleotide" finished-at="2023-07-02T10:11:59Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFindXrefSequences_indirectDbrefToNucleotide -->
        <test-method signature="testFindXrefSequences_indirectDbrefToProtein()[pri:0, instance:jalview.analysis.CrossRefTest@3c8bdd5b]" started-at="2023-07-02T10:11:59Z" name="testFindXrefSequences_indirectDbrefToProtein" finished-at="2023-07-02T10:11:59Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFindXrefSequences_indirectDbrefToProtein -->
        <test-method signature="testFindXrefSequences_noDbrefs()[pri:0, instance:jalview.analysis.CrossRefTest@3c8bdd5b]" started-at="2023-07-02T10:11:59Z" name="testFindXrefSequences_noDbrefs" finished-at="2023-07-02T10:11:59Z" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFindXrefSequences_noDbrefs -->
        <test-method signature="testSameSequence()[pri:0, instance:jalview.analysis.CrossRefTest@3c8bdd5b]" started-at="2023-07-02T10:11:59Z" name="testSameSequence" finished-at="2023-07-02T10:11:59Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSameSequence -->
        <test-method signature="testFindXrefSourcesForSequence_proteinToDna()[pri:0, instance:jalview.analysis.CrossRefTest@3c8bdd5b]" started-at="2023-07-02T10:11:59Z" name="testFindXrefSourcesForSequence_proteinToDna" finished-at="2023-07-02T10:11:59Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFindXrefSourcesForSequence_proteinToDna -->
        <test-method signature="testSearchDataset()[pri:0, instance:jalview.analysis.CrossRefTest@3c8bdd5b]" started-at="2023-07-02T10:11:59Z" name="testSearchDataset" finished-at="2023-07-02T10:11:59Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSearchDataset -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:jalview.analysis.CrossRefTest@3c8bdd5b]" started-at="2023-07-02T10:11:59Z" name="tearDown" finished-at="2023-07-02T10:11:59Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- jalview.analysis.CrossRefTest -->
      <class name="jalview.io.WindowsFileLoadAndSaveTest">
        <test-method is-config="true" signature="setUpJvOptionPane()[pri:0, instance:jalview.io.WindowsFileLoadAndSaveTest@492fc69e]" started-at="2023-07-02T10:12:02Z" name="setUpJvOptionPane" finished-at="2023-07-02T10:12:02Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpJvOptionPane -->
        <test-method signature="loadAndSaveAlignment()[pri:0, instance:jalview.io.WindowsFileLoadAndSaveTest@492fc69e]" started-at="2023-07-02T10:12:02Z" name="loadAndSaveAlignment" finished-at="2023-07-02T10:12:02Z" duration-ms="29" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loadAndSaveAlignment -->
        <test-method is-config="true" signature="cleanupTmpFiles()[pri:0, instance:jalview.io.WindowsFileLoadAndSaveTest@492fc69e]" started-at="2023-07-02T10:12:02Z" name="cleanupTmpFiles" finished-at="2023-07-02T10:12:02Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cleanupTmpFiles -->
      </class> <!-- jalview.io.WindowsFileLoadAndSaveTest -->
      <class name="jalview.math.SparseMatrixTest">
        <test-method signature="testConstructor()[pri:0, instance:jalview.math.SparseMatrixTest@5a772895]" started-at="2023-07-02T10:12:31Z" name="testConstructor" finished-at="2023-07-02T10:12:31Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testConstructor -->
        <test-method signature="testPostMultiply()[pri:0, instance:jalview.math.SparseMatrixTest@5a772895]" started-at="2023-07-02T10:12:31Z" name="testPostMultiply" finished-at="2023-07-02T10:12:31Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testPostMultiply -->
        <test-method signature="testFillRatio()[pri:0, instance:jalview.math.SparseMatrixTest@5a772895]" started-at="2023-07-02T10:12:31Z" name="testFillRatio" finished-at="2023-07-02T10:12:31Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFillRatio -->
        <test-method signature="testPreMultiply_sparseProduct()[pri:0, instance:jalview.math.SparseMatrixTest@5a772895]" started-at="2023-07-02T10:12:31Z" name="testPreMultiply_sparseProduct" finished-at="2023-07-02T10:12:31Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testPreMultiply_sparseProduct -->
        <test-method signature="testPreMultiply_tooFewColumns()[pri:0, instance:jalview.math.SparseMatrixTest@5a772895]" started-at="2023-07-02T10:12:31Z" name="testPreMultiply_tooFewColumns" finished-at="2023-07-02T10:12:31Z" duration-ms="1" status="PASS">
          <exception class="java.lang.IllegalArgumentException">
            <message>
              <![CDATA[Can't pre-multiply 2 rows by 3 columns]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IllegalArgumentException: Can't pre-multiply 2 rows by 3 columns
	at jalview.math.SparseMatrix.preMultiply(SparseMatrix.java:159)
	at jalview.math.SparseMatrixTest.testPreMultiply_tooFewColumns(SparseMatrixTest.java:136)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:648)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:834)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1142)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:124)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:771)
	at org.testng.TestRunner.run(TestRunner.java:621)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:357)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:352)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:310)
	at org.testng.SuiteRunner.run(SuiteRunner.java:259)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1176)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1101)
	at org.testng.TestNG.run(TestNG.java:1009)
	at org.gradle.api.internal.tasks.testing.testng.TestNGTestClassProcessor.runTests(TestNGTestClassProcessor.java:145)
	at org.gradle.api.internal.tasks.testing.testng.TestNGTestClassProcessor.stop(TestNGTestClassProcessor.java:92)
	at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.stop(SuiteTestClassProcessor.java:62)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:36)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24)
	at org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:33)
	at org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:94)
	at com.sun.proxy.$Proxy2.stop(Unknown Source)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker$3.run(TestWorker.java:193)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.executeAndMaintainThreadName(TestWorker.java:129)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.execute(TestWorker.java:100)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.execute(TestWorker.java:60)
	at org.gradle.process.internal.worker.child.ActionExecutionWorker.execute(ActionExecutionWorker.java:56)
	at org.gradle.process.internal.worker.child.SystemApplicationClassLoaderWorker.call(SystemApplicationClassLoaderWorker.java:113)
	at org.gradle.process.internal.worker.child.SystemApplicationClassLoaderWorker.call(SystemApplicationClassLoaderWorker.java:65)
	at worker.org.gradle.process.internal.worker.GradleWorkerMain.run(GradleWorkerMain.java:69)
	at worker.org.gradle.process.internal.worker.GradleWorkerMain.main(GradleWorkerMain.java:74)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalArgumentException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testPreMultiply_tooFewColumns -->
        <test-method signature="testPreMultiply()[pri:0, instance:jalview.math.SparseMatrixTest@5a772895]" started-at="2023-07-02T10:12:31Z" name="testPreMultiply" finished-at="2023-07-02T10:12:31Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testPreMultiply -->
        <test-method signature="testPreMultiply_tooManyColumns()[pri:0, instance:jalview.math.SparseMatrixTest@5a772895]" started-at="2023-07-02T10:12:31Z" name="testPreMultiply_tooManyColumns" finished-at="2023-07-02T10:12:31Z" duration-ms="0" status="PASS">
          <exception class="java.lang.IllegalArgumentException">
            <message>
              <![CDATA[Can't pre-multiply 2 rows by 3 columns]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IllegalArgumentException: Can't pre-multiply 2 rows by 3 columns
	at jalview.math.SparseMatrix.preMultiply(SparseMatrix.java:159)
	at jalview.math.SparseMatrixTest.testPreMultiply_tooManyColumns(SparseMatrixTest.java:118)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:648)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:834)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1142)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:124)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:771)
	at org.testng.TestRunner.run(TestRunner.java:621)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:357)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:352)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:310)
	at org.testng.SuiteRunner.run(SuiteRunner.java:259)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1176)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1101)
	at org.testng.TestNG.run(TestNG.java:1009)
	at org.gradle.api.internal.tasks.testing.testng.TestNGTestClassProcessor.runTests(TestNGTestClassProcessor.java:145)
	at org.gradle.api.internal.tasks.testing.testng.TestNGTestClassProcessor.stop(TestNGTestClassProcessor.java:92)
	at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.stop(SuiteTestClassProcessor.java:62)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:36)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24)
	at org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:33)
	at org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:94)
	at com.sun.proxy.$Proxy2.stop(Unknown Source)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker$3.run(TestWorker.java:193)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.executeAndMaintainThreadName(TestWorker.java:129)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.execute(TestWorker.java:100)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.execute(TestWorker.java:60)
	at org.gradle.process.internal.worker.child.ActionExecutionWorker.execute(ActionExecutionWorker.java:56)
	at org.gradle.process.internal.worker.child.SystemApplicationClassLoaderWorker.call(SystemApplicationClassLoaderWorker.java:113)
	at org.gradle.process.internal.worker.child.SystemApplicationClassLoaderWorker.call(SystemApplicationClassLoaderWorker.java:65)
	at worker.org.gradle.process.internal.worker.GradleWorkerMain.run(GradleWorkerMain.java:69)
	at worker.org.gradle.process.internal.worker.GradleWorkerMain.main(GradleWorkerMain.java:74)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalArgumentException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testPreMultiply_tooManyColumns -->
        <test-method signature="testTqli_matchesMatrix()[pri:0, instance:jalview.math.SparseMatrixTest@5a772895]" started-at="2023-07-02T10:12:31Z" name="testTqli_matchesMatrix" finished-at="2023-07-02T10:12:31Z" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testTqli_matchesMatrix -->
        <test-method signature="testTranspose()[pri:0, instance:jalview.math.SparseMatrixTest@5a772895]" started-at="2023-07-02T10:12:31Z" name="testTranspose" finished-at="2023-07-02T10:12:31Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testTranspose -->
        <test-method signature="testTred_matchesMatrix()[pri:0, instance:jalview.math.SparseMatrixTest@5a772895]" started-at="2023-07-02T10:12:31Z" name="testTred_matchesMatrix" finished-at="2023-07-02T10:12:31Z" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testTred_matchesMatrix -->
        <test-method signature="testTred_reproducible()[pri:0, instance:jalview.math.SparseMatrixTest@5a772895]" started-at="2023-07-02T10:12:31Z" name="testTred_reproducible" finished-at="2023-07-02T10:12:31Z" duration-ms="4" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testTred_reproducible -->
      </class> <!-- jalview.math.SparseMatrixTest -->
      <class name="jalview.datamodel.AlignmentAnnotationTests">
        <test-method is-config="true" signature="setUpJvOptionPane()[pri:0, instance:jalview.datamodel.AlignmentAnnotationTests@6831d8fd]" started-at="2023-07-02T10:13:43Z" name="setUpJvOptionPane" finished-at="2023-07-02T10:13:43Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpJvOptionPane -->
        <test-method signature="testAdjustForAlignment()[pri:0, instance:jalview.datamodel.AlignmentAnnotationTests@6831d8fd]" started-at="2023-07-02T10:13:43Z" name="testAdjustForAlignment" finished-at="2023-07-02T10:13:43Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAdjustForAlignment -->
        <test-method signature="testCopyConstructor()[pri:0, instance:jalview.datamodel.AlignmentAnnotationTests@6831d8fd]" started-at="2023-07-02T10:13:43Z" name="testCopyConstructor" finished-at="2023-07-02T10:13:43Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCopyConstructor -->
        <test-method signature="testIsQuantitative()[pri:0, instance:jalview.datamodel.AlignmentAnnotationTests@6831d8fd]" started-at="2023-07-02T10:13:43Z" name="testIsQuantitative" finished-at="2023-07-02T10:13:43Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testIsQuantitative -->
        <test-method signature="testGetDefaultRnaHelixSymbol()[pri:0, instance:jalview.datamodel.AlignmentAnnotationTests@6831d8fd]" started-at="2023-07-02T10:13:43Z" name="testGetDefaultRnaHelixSymbol" finished-at="2023-07-02T10:13:43Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetDefaultRnaHelixSymbol -->
        <test-method signature="testLiftOver()[pri:0, instance:jalview.datamodel.AlignmentAnnotationTests@6831d8fd]" started-at="2023-07-02T10:13:43Z" name="testLiftOver" finished-at="2023-07-02T10:13:43Z" duration-ms="6" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testLiftOver -->
        <test-method signature="testMakeVisibleAnnotation()[pri:0, instance:jalview.datamodel.AlignmentAnnotationTests@6831d8fd]" started-at="2023-07-02T10:13:43Z" name="testMakeVisibleAnnotation" finished-at="2023-07-02T10:13:43Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMakeVisibleAnnotation -->
      </class> <!-- jalview.datamodel.AlignmentAnnotationTests -->
      <class name="jalview.io.BioJsHTMLOutputTest">
        <test-method signature="expectedNullPointerException()[pri:0, instance:jalview.io.BioJsHTMLOutputTest@74a9c4b0]" started-at="2023-07-02T10:12:07Z" name="expectedNullPointerException" finished-at="2023-07-02T10:12:07Z" duration-ms="0" status="PASS">
          <exception class="java.lang.NullPointerException">
            <message>
              <![CDATA[dirName MUST not be null!]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.NullPointerException: dirName MUST not be null!
	at java.base/java.util.Objects.requireNonNull(Objects.java:246)
	at jalview.io.BioJsHTMLOutput.refreshVersionInfo(BioJsHTMLOutput.java:67)
	at jalview.io.BioJsHTMLOutputTest.expectedNullPointerException(BioJsHTMLOutputTest.java:84)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:648)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:834)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1142)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:124)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:771)
	at org.testng.TestRunner.run(TestRunner.java:621)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:357)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:352)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:310)
	at org.testng.SuiteRunner.run(SuiteRunner.java:259)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1176)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1101)
	at org.testng.TestNG.run(TestNG.java:1009)
	at org.gradle.api.internal.tasks.testing.testng.TestNGTestClassProcessor.runTests(TestNGTestClassProcessor.java:145)
	at org.gradle.api.internal.tasks.testing.testng.TestNGTestClassProcessor.stop(TestNGTestClassProcessor.java:92)
	at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.stop(SuiteTestClassProcessor.java:62)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:36)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24)
	at org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:33)
	at org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:94)
	at com.sun.proxy.$Proxy2.stop(Unknown Source)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker$3.run(TestWorker.java:193)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.executeAndMaintainThreadName(TestWorker.java:129)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.execute(TestWorker.java:100)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.execute(TestWorker.java:60)
	at org.gradle.process.internal.worker.child.ActionExecutionWorker.execute(ActionExecutionWorker.java:56)
	at org.gradle.process.internal.worker.child.SystemApplicationClassLoaderWorker.call(SystemApplicationClassLoaderWorker.java:113)
	at org.gradle.process.internal.worker.child.SystemApplicationClassLoaderWorker.call(SystemApplicationClassLoaderWorker.java:65)
	at worker.org.gradle.process.internal.worker.GradleWorkerMain.run(GradleWorkerMain.java:69)
	at worker.org.gradle.process.internal.worker.GradleWorkerMain.main(GradleWorkerMain.java:74)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.NullPointerException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- expectedNullPointerException -->
        <test-method signature="getBioJsMSAVersions()[pri:0, instance:jalview.io.BioJsHTMLOutputTest@74a9c4b0]" started-at="2023-07-02T10:12:07Z" name="getBioJsMSAVersions" finished-at="2023-07-02T10:12:07Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getBioJsMSAVersions -->
        <test-method is-config="true" signature="setUpJvOptionPane()[pri:0, instance:jalview.io.BioJsHTMLOutputTest@74a9c4b0]" started-at="2023-07-02T10:12:07Z" name="setUpJvOptionPane" finished-at="2023-07-02T10:12:07Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpJvOptionPane -->
        <test-method signature="getJalviewAlignmentAsJsonString()[pri:0, instance:jalview.io.BioJsHTMLOutputTest@74a9c4b0]" started-at="2023-07-02T10:12:07Z" name="getJalviewAlignmentAsJsonString" finished-at="2023-07-02T10:12:10Z" duration-ms="3050" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getJalviewAlignmentAsJsonString -->
      </class> <!-- jalview.io.BioJsHTMLOutputTest -->
      <class name="jalview.bin.CommandLineOperations">
        <test-method is-config="true" signature="initialize()[pri:0, instance:jalview.bin.CommandLineOperations@33c2bd]" started-at="2023-07-02T10:11:14Z" name="initialize" finished-at="2023-07-02T10:11:14Z" duration-ms="7" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method is-config="true" signature="setUpForCommandLineInputOperations()[pri:0, instance:jalview.bin.CommandLineOperations@33c2bd]" started-at="2023-07-02T10:11:14Z" name="setUpForCommandLineInputOperations" finished-at="2023-07-02T10:11:34Z" duration-ms="19261" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpForCommandLineInputOperations -->
        <test-method is-config="true" signature="setUpForHeadlessCommandLineInputOperations()[pri:0, instance:jalview.bin.CommandLineOperations@33c2bd]" started-at="2023-07-02T10:11:34Z" name="setUpForHeadlessCommandLineInputOperations" finished-at="2023-07-02T10:11:36Z" duration-ms="2687" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpForHeadlessCommandLineInputOperations -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:jalview.renderer.seqfeatures.FeatureColourFinderTest@4837595f]" started-at="2023-07-02T10:11:36Z" name="setUp" finished-at="2023-07-02T10:11:37Z" duration-ms="327" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:jalview.datamodel.HiddenSequencesTest@6754ef00]" started-at="2023-07-02T10:11:37Z" name="setUp" finished-at="2023-07-02T10:11:37Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="initialize()[pri:0, instance:jalview.bin.HiDPISettingTest2@3c321bdb]" started-at="2023-07-02T10:11:37Z" name="initialize" finished-at="2023-07-02T10:11:37Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method is-config="true" signature="setup()[pri:0, instance:jalview.io.JSONFileTest@54336c81]" started-at="2023-07-02T10:11:37Z" name="setup" finished-at="2023-07-02T10:11:37Z" duration-ms="94" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method is-config="true" signature="initialize()[pri:0, instance:jalview.util.Log4jTest@17f9344b]" started-at="2023-07-02T10:11:37Z" name="initialize" finished-at="2023-07-02T10:11:37Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:jalview.ws.dbsources.RemoteFormatTest@199e4c2b]" started-at="2023-07-02T10:11:37Z" name="setUp" finished-at="2023-07-02T10:11:37Z" duration-ms="400" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="clearDesktop()[pri:0, instance:jalview.io.CrossRef2xmlTests@1c05a54d]" started-at="2023-07-02T10:11:37Z" name="clearDesktop" finished-at="2023-07-02T10:11:37Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- clearDesktop -->
        <test-method is-config="true" signature="populateExpectedMapping()[pri:0, instance:jalview.ws.sifts.SiftsClientTest@62df0ff3]" started-at="2023-07-02T10:11:37Z" name="populateExpectedMapping" finished-at="2023-07-02T10:11:37Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- populateExpectedMapping -->
        <test-method is-config="true" signature="setUpSiftsClient()[pri:0, instance:jalview.ws.sifts.SiftsClientTest@62df0ff3]" started-at="2023-07-02T10:11:37Z" name="setUpSiftsClient" finished-at="2023-07-02T10:11:38Z" duration-ms="540" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpSiftsClient -->
        <test-method is-config="true" signature="setUpBeforeTest()[pri:0, instance:jalview.io.vcf.VCFLoaderTest@17ae98d7]" started-at="2023-07-02T10:11:38Z" name="setUpBeforeTest" finished-at="2023-07-02T10:11:38Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpBeforeTest -->
        <test-method signature="reportCurrentWorkingDirectory()[pri:0, instance:jalview.bin.CommandLineOperations@33c2bd]" started-at="2023-07-02T10:12:31Z" name="reportCurrentWorkingDirectory" finished-at="2023-07-02T10:12:31Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportCurrentWorkingDirectory -->
        <test-method signature="testAllInputOperations(java.lang.String, java.lang.String)[pri:0, instance:jalview.bin.CommandLineOperations@33c2bd]" started-at="2023-07-02T10:12:31Z" name="testAllInputOperations" data-provider="allInputOperationsData" finished-at="2023-07-02T10:12:31Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[CMD [-open examples/uniref50.fa] executed successfully!]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Failed command : -open examples/uniref50.fa]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAllInputOperations -->
        <test-method signature="testAllInputOperations(java.lang.String, java.lang.String)[pri:0, instance:jalview.bin.CommandLineOperations@33c2bd]" started-at="2023-07-02T10:12:31Z" name="testAllInputOperations" data-provider="allInputOperationsData" finished-at="2023-07-02T10:12:31Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[CMD [-props test/jalview/bin/testProps.jvprops] executed successfully!]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Failed command : -props File]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAllInputOperations -->
        <test-method signature="testAllInputOperations(java.lang.String, java.lang.String)[pri:0, instance:jalview.bin.CommandLineOperations@33c2bd]" started-at="2023-07-02T10:12:31Z" name="testAllInputOperations" data-provider="allInputOperationsData" finished-at="2023-07-02T10:12:31Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[CMD [-sortbytree] executed successfully!]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Failed command : -sortbytree]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAllInputOperations -->
        <test-method signature="testAllInputOperations(java.lang.String, java.lang.String)[pri:0, instance:jalview.bin.CommandLineOperations@33c2bd]" started-at="2023-07-02T10:12:31Z" name="testAllInputOperations" data-provider="allInputOperationsData" finished-at="2023-07-02T10:12:31Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[CMD [-features examples/testdata/plantfdx.features]  executed successfully!]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Failed command : -features examples/testdata/plantfdx.features]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAllInputOperations -->
        <test-method signature="testAllInputOperations(java.lang.String, java.lang.String)[pri:0, instance:jalview.bin.CommandLineOperations@33c2bd]" started-at="2023-07-02T10:12:31Z" name="testAllInputOperations" data-provider="allInputOperationsData" finished-at="2023-07-02T10:12:31Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[CMD [-tree examples/testdata/uniref50_test_tree] executed successfully!]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Failed command : -tree examples/testdata/uniref50_test_tree]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAllInputOperations -->
        <test-method signature="testAllInputOperations(java.lang.String, java.lang.String)[pri:0, instance:jalview.bin.CommandLineOperations@33c2bd]" started-at="2023-07-02T10:12:31Z" name="testAllInputOperations" data-provider="allInputOperationsData" finished-at="2023-07-02T10:12:31Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[CMD [-jabaws http://www.compbio.dundee.ac.uk/jabaws] executed successfully!]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Failed command : -jabaws http://www.compbio.dundee.ac.uk/jabaws]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAllInputOperations -->
        <test-method is-config="true" signature="setUpJvOptionPane()[pri:0, instance:jalview.bin.CommandLineOperations@33c2bd]" started-at="2023-07-02T10:12:31Z" name="setUpJvOptionPane" finished-at="2023-07-02T10:12:31Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpJvOptionPane -->
        <test-method signature="testAllInputOperations(java.lang.String, java.lang.String)[pri:0, instance:jalview.bin.CommandLineOperations@33c2bd]" started-at="2023-07-02T10:12:31Z" name="testAllInputOperations" data-provider="allInputOperationsData" finished-at="2023-07-02T10:12:31Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[CMD [-color zappo] executed successfully!]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Failed command : -color zappo]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAllInputOperations -->
        <test-method signature="testAllInputOperations(java.lang.String, java.lang.String)[pri:0, instance:jalview.bin.CommandLineOperations@33c2bd]" started-at="2023-07-02T10:12:31Z" name="testAllInputOperations" data-provider="allInputOperationsData" finished-at="2023-07-02T10:12:31Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[CMD [-annotations examples/testdata/plantfdx.annotations] executed successfully!]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Failed command : -annotations examples/testdata/plantfdx.annotations]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAllInputOperations -->
        <test-method signature="testAllInputOperations(java.lang.String, java.lang.String)[pri:0, instance:jalview.bin.CommandLineOperations@33c2bd]" started-at="2023-07-02T10:12:31Z" name="testAllInputOperations" data-provider="allInputOperationsData" finished-at="2023-07-02T10:12:31Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[CMD [-nosortbytree] executed successfully!]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Failed command : -nosortbytree]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAllInputOperations -->
        <test-method signature="testAllInputOperations(java.lang.String, java.lang.String)[pri:0, instance:jalview.bin.CommandLineOperations@33c2bd]" started-at="2023-07-02T10:12:31Z" name="testAllInputOperations" data-provider="allInputOperationsData" finished-at="2023-07-02T10:12:31Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[CMD [-nousagestats] executed successfully!]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Failed command : -nousagestats]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAllInputOperations -->
        <test-method signature="testHeadlessModeOutputOperations(java.lang.String, java.lang.String, java.lang.String, boolean, int, int)[pri:0, instance:jalview.bin.CommandLineOperations@33c2bd]" started-at="2023-07-02T10:12:31Z" name="testHeadlessModeOutputOperations" data-provider="headlessModeOutputOperationsData" finished-at="2023-07-02T10:12:33Z" duration-ms="2559" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[nodisplay -open examples/uniref50.fa]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[ -eps]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[test/jalview/bin/test_uniref50_out.eps]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[true]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[4096]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[13000]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testHeadlessModeOutputOperations -->
        <test-method signature="testAllInputOperations(java.lang.String, java.lang.String)[pri:0, instance:jalview.bin.CommandLineOperations@33c2bd]" started-at="2023-07-02T10:12:31Z" name="testAllInputOperations" data-provider="allInputOperationsData" finished-at="2023-07-02T10:12:31Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[CMD [-noquestionnaire] executed successfully!]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Failed command : -noquestionnaire]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAllInputOperations -->
        <test-method signature="testHeadlessModeOutputOperations(java.lang.String, java.lang.String, java.lang.String, boolean, int, int)[pri:0, instance:jalview.bin.CommandLineOperations@33c2bd]" started-at="2023-07-02T10:12:33Z" name="testHeadlessModeOutputOperations" data-provider="headlessModeOutputOperationsData" finished-at="2023-07-02T10:12:36Z" duration-ms="2804" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[nodisplay -open examples/uniref50.fa]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[ -eps]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[test/jalview/bin/test_uniref50_out.eps]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[4096]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[13000]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testHeadlessModeOutputOperations -->
        <test-method signature="testHeadlessModeOutputOperations(java.lang.String, java.lang.String, java.lang.String, boolean, int, int)[pri:0, instance:jalview.bin.CommandLineOperations@33c2bd]" started-at="2023-07-02T10:12:36Z" name="testHeadlessModeOutputOperations" data-provider="headlessModeOutputOperationsData" finished-at="2023-07-02T10:12:39Z" duration-ms="2546" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[nogui -open examples/uniref50.fa]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[ -eps]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[test/jalview/bin/test_uniref50_out.eps]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[true]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[4096]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[13000]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testHeadlessModeOutputOperations -->
        <test-method signature="testHeadlessModeOutputOperations(java.lang.String, java.lang.String, java.lang.String, boolean, int, int)[pri:0, instance:jalview.bin.CommandLineOperations@33c2bd]" started-at="2023-07-02T10:12:39Z" name="testHeadlessModeOutputOperations" data-provider="headlessModeOutputOperationsData" finished-at="2023-07-02T10:12:41Z" duration-ms="2825" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[nogui -open examples/uniref50.fa]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[ -eps]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[test/jalview/bin/test_uniref50_out.eps]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[4096]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[13000]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testHeadlessModeOutputOperations -->
        <test-method signature="testHeadlessModeOutputOperations(java.lang.String, java.lang.String, java.lang.String, boolean, int, int)[pri:0, instance:jalview.bin.CommandLineOperations@33c2bd]" started-at="2023-07-02T10:12:41Z" name="testHeadlessModeOutputOperations" data-provider="headlessModeOutputOperationsData" finished-at="2023-07-02T10:12:44Z" duration-ms="2521" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[headless -open examples/uniref50.fa]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[ -eps]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[test/jalview/bin/test_uniref50_out.eps]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[true]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[4096]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[13000]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testHeadlessModeOutputOperations -->
        <test-method signature="testHeadlessModeOutputOperations(java.lang.String, java.lang.String, java.lang.String, boolean, int, int)[pri:0, instance:jalview.bin.CommandLineOperations@33c2bd]" started-at="2023-07-02T10:12:44Z" name="testHeadlessModeOutputOperations" data-provider="headlessModeOutputOperationsData" finished-at="2023-07-02T10:12:47Z" duration-ms="2837" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[headless -open examples/uniref50.fa]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[ -svg]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[test/jalview/bin/test_uniref50_out.svg]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[4096]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[13000]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testHeadlessModeOutputOperations -->
        <test-method signature="testHeadlessModeOutputOperations(java.lang.String, java.lang.String, java.lang.String, boolean, int, int)[pri:0, instance:jalview.bin.CommandLineOperations@33c2bd]" started-at="2023-07-02T10:12:47Z" name="testHeadlessModeOutputOperations" data-provider="headlessModeOutputOperationsData" finished-at="2023-07-02T10:12:49Z" duration-ms="2548" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[headless -open examples/uniref50.fa]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[ -png]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[test/jalview/bin/test_uniref50_out.png]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[true]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[4096]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[13000]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testHeadlessModeOutputOperations -->
        <test-method signature="testHeadlessModeOutputOperations(java.lang.String, java.lang.String, java.lang.String, boolean, int, int)[pri:0, instance:jalview.bin.CommandLineOperations@33c2bd]" started-at="2023-07-02T10:12:49Z" name="testHeadlessModeOutputOperations" data-provider="headlessModeOutputOperationsData" finished-at="2023-07-02T10:12:52Z" duration-ms="2582" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[headless -open examples/uniref50.fa]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[ -html]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[test/jalview/bin/test_uniref50_out.html]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[true]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[4096]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[13000]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testHeadlessModeOutputOperations -->
        <test-method signature="testHeadlessModeOutputOperations(java.lang.String, java.lang.String, java.lang.String, boolean, int, int)[pri:0, instance:jalview.bin.CommandLineOperations@33c2bd]" started-at="2023-07-02T10:12:52Z" name="testHeadlessModeOutputOperations" data-provider="headlessModeOutputOperationsData" finished-at="2023-07-02T10:12:54Z" duration-ms="2578" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[headless -open examples/uniref50.fa]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[ -fasta]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[test/jalview/bin/test_uniref50_out.mfa]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[true]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[2096]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[13000]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testHeadlessModeOutputOperations -->
        <test-method signature="testHeadlessModeOutputOperations(java.lang.String, java.lang.String, java.lang.String, boolean, int, int)[pri:0, instance:jalview.bin.CommandLineOperations@33c2bd]" started-at="2023-07-02T10:12:54Z" name="testHeadlessModeOutputOperations" data-provider="headlessModeOutputOperationsData" finished-at="2023-07-02T10:12:57Z" duration-ms="2553" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[headless -open examples/uniref50.fa]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[ -clustal]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[test/jalview/bin/test_uniref50_out.aln]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[true]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[2096]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[13000]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testHeadlessModeOutputOperations -->
        <test-method signature="testHeadlessModeOutputOperations(java.lang.String, java.lang.String, java.lang.String, boolean, int, int)[pri:0, instance:jalview.bin.CommandLineOperations@33c2bd]" started-at="2023-07-02T10:12:57Z" name="testHeadlessModeOutputOperations" data-provider="headlessModeOutputOperationsData" finished-at="2023-07-02T10:13:00Z" duration-ms="2653" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[headless -open examples/uniref50.fa]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[ -msf]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[test/jalview/bin/test_uniref50_out.msf]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[true]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[2096]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[13000]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testHeadlessModeOutputOperations -->
        <test-method signature="testHeadlessModeOutputOperations(java.lang.String, java.lang.String, java.lang.String, boolean, int, int)[pri:0, instance:jalview.bin.CommandLineOperations@33c2bd]" started-at="2023-07-02T10:13:00Z" name="testHeadlessModeOutputOperations" data-provider="headlessModeOutputOperationsData" finished-at="2023-07-02T10:13:02Z" duration-ms="2678" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[headless -open examples/uniref50.fa]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[ -pileup]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[test/jalview/bin/test_uniref50_out.aln]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[true]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[2096]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[13000]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testHeadlessModeOutputOperations -->
        <test-method signature="testHeadlessModeOutputOperations(java.lang.String, java.lang.String, java.lang.String, boolean, int, int)[pri:0, instance:jalview.bin.CommandLineOperations@33c2bd]" started-at="2023-07-02T10:13:02Z" name="testHeadlessModeOutputOperations" data-provider="headlessModeOutputOperationsData" finished-at="2023-07-02T10:13:05Z" duration-ms="2581" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[headless -open examples/uniref50.fa]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[ -pir]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[test/jalview/bin/test_uniref50_out.pir]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[true]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[2096]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[13000]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testHeadlessModeOutputOperations -->
        <test-method signature="testHeadlessModeOutputOperations(java.lang.String, java.lang.String, java.lang.String, boolean, int, int)[pri:0, instance:jalview.bin.CommandLineOperations@33c2bd]" started-at="2023-07-02T10:13:05Z" name="testHeadlessModeOutputOperations" data-provider="headlessModeOutputOperationsData" finished-at="2023-07-02T10:13:08Z" duration-ms="2662" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[headless -open examples/uniref50.fa]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[ -pfam]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[test/jalview/bin/test_uniref50_out.pfam]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[true]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[2096]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[13000]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testHeadlessModeOutputOperations -->
        <test-method signature="testHeadlessModeOutputOperations(java.lang.String, java.lang.String, java.lang.String, boolean, int, int)[pri:0, instance:jalview.bin.CommandLineOperations@33c2bd]" started-at="2023-07-02T10:13:08Z" name="testHeadlessModeOutputOperations" data-provider="headlessModeOutputOperationsData" finished-at="2023-07-02T10:13:10Z" duration-ms="2637" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[headless -open examples/uniref50.fa]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[ -blc]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[test/jalview/bin/test_uniref50_out.blc]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[true]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[2096]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[13000]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testHeadlessModeOutputOperations -->
        <test-method signature="testHeadlessModeOutputOperations(java.lang.String, java.lang.String, java.lang.String, boolean, int, int)[pri:0, instance:jalview.bin.CommandLineOperations@33c2bd]" started-at="2023-07-02T10:13:10Z" name="testHeadlessModeOutputOperations" data-provider="headlessModeOutputOperationsData" finished-at="2023-07-02T10:13:13Z" duration-ms="2912" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[headless -open examples/uniref50.fa]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[ -jalview]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[test/jalview/bin/test_uniref50_out.jvp]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[true]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[2096]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[13000]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testHeadlessModeOutputOperations -->
      </class> <!-- jalview.bin.CommandLineOperations -->
      <class name="jalview.gui.StructureChooserTest">
        <test-method is-config="true" signature="setUpJvOptionPane()[pri:0, instance:jalview.gui.StructureChooserTest@7a34b7b8]" started-at="2023-07-02T10:12:01Z" name="setUpJvOptionPane" finished-at="2023-07-02T10:12:01Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpJvOptionPane -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:jalview.gui.StructureChooserTest@7a34b7b8]" started-at="2023-07-02T10:12:01Z" name="setUp" finished-at="2023-07-02T10:12:01Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="displayTDBQueryTest()[pri:0, instance:jalview.gui.StructureChooserTest@7a34b7b8]" started-at="2023-07-02T10:12:01Z" name="displayTDBQueryTest" finished-at="2023-07-02T10:12:01Z" duration-ms="291" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- displayTDBQueryTest -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:jalview.gui.StructureChooserTest@7a34b7b8]" started-at="2023-07-02T10:12:01Z" name="tearDown" finished-at="2023-07-02T10:12:01Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:jalview.gui.StructureChooserTest@7a34b7b8]" started-at="2023-07-02T10:12:01Z" name="setUp" finished-at="2023-07-02T10:12:01Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="fetchStructuresInfoMockedTest()[pri:0, instance:jalview.gui.StructureChooserTest@7a34b7b8]" started-at="2023-07-02T10:12:01Z" name="fetchStructuresInfoMockedTest" finished-at="2023-07-02T10:12:01Z" duration-ms="318" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- fetchStructuresInfoMockedTest -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:jalview.gui.StructureChooserTest@7a34b7b8]" started-at="2023-07-02T10:12:01Z" name="tearDown" finished-at="2023-07-02T10:12:01Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method signature="populateFilterComboBoxTest()[pri:0, instance:jalview.gui.StructureChooserTest@7a34b7b8]" started-at="2023-07-02T10:12:01Z" name="populateFilterComboBoxTest" finished-at="2023-07-02T10:12:02Z" duration-ms="171" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- populateFilterComboBoxTest -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:jalview.gui.StructureChooserTest@7a34b7b8]" started-at="2023-07-02T10:12:01Z" name="setUp" finished-at="2023-07-02T10:12:01Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:jalview.gui.StructureChooserTest@7a34b7b8]" started-at="2023-07-02T10:12:02Z" name="setUp" finished-at="2023-07-02T10:12:02Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="sanitizeSeqNameTest()[pri:0, instance:jalview.gui.StructureChooserTest@7a34b7b8]" started-at="2023-07-02T10:12:02Z" name="sanitizeSeqNameTest" finished-at="2023-07-02T10:12:02Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- sanitizeSeqNameTest -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:jalview.gui.StructureChooserTest@7a34b7b8]" started-at="2023-07-02T10:12:02Z" name="tearDown" finished-at="2023-07-02T10:12:02Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:jalview.gui.StructureChooserTest@7a34b7b8]" started-at="2023-07-02T10:12:02Z" name="tearDown" finished-at="2023-07-02T10:12:02Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- jalview.gui.StructureChooserTest -->
      <class name="jalview.ext.android.SparseIntArrayTest">
        <test-method is-config="true" signature="setUpJvOptionPane()[pri:0, instance:jalview.ext.android.SparseIntArrayTest@10ad20cb]" started-at="2023-07-02T10:11:41Z" name="setUpJvOptionPane" finished-at="2023-07-02T10:11:41Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpJvOptionPane -->
        <test-method signature="testAdd()[pri:0, instance:jalview.ext.android.SparseIntArrayTest@10ad20cb]" started-at="2023-07-02T10:11:41Z" name="testAdd" finished-at="2023-07-02T10:11:41Z" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAdd -->
        <test-method signature="testPut()[pri:0, instance:jalview.ext.android.SparseIntArrayTest@10ad20cb]" started-at="2023-07-02T10:11:41Z" name="testPut" finished-at="2023-07-02T10:11:41Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testPut -->
        <test-method signature="testCheckOverflow()[pri:0, instance:jalview.ext.android.SparseIntArrayTest@10ad20cb]" started-at="2023-07-02T10:11:41Z" name="testCheckOverflow" finished-at="2023-07-02T10:11:41Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCheckOverflow -->
      </class> <!-- jalview.ext.android.SparseIntArrayTest -->
      <class name="jalview.urls.UrlLinkTableModelTest">
        <test-method is-config="true" signature="setup()[pri:0, instance:jalview.urls.UrlLinkTableModelTest@5bbbdd4b]" started-at="2023-07-02T10:12:02Z" name="setup" finished-at="2023-07-02T10:12:02Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="testColumns()[pri:0, instance:jalview.urls.UrlLinkTableModelTest@5bbbdd4b]" started-at="2023-07-02T10:12:02Z" name="testColumns" finished-at="2023-07-02T10:12:02Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testColumns -->
        <test-method signature="testCounts()[pri:0, instance:jalview.urls.UrlLinkTableModelTest@5bbbdd4b]" started-at="2023-07-02T10:12:02Z" name="testCounts" finished-at="2023-07-02T10:12:02Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCounts -->
        <test-method is-config="true" signature="setup()[pri:0, instance:jalview.urls.UrlLinkTableModelTest@5bbbdd4b]" started-at="2023-07-02T10:12:02Z" name="setup" finished-at="2023-07-02T10:12:02Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method is-config="true" signature="setup()[pri:0, instance:jalview.urls.UrlLinkTableModelTest@5bbbdd4b]" started-at="2023-07-02T10:12:02Z" name="setup" finished-at="2023-07-02T10:12:02Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="testDeletable()[pri:0, instance:jalview.urls.UrlLinkTableModelTest@5bbbdd4b]" started-at="2023-07-02T10:12:02Z" name="testDeletable" finished-at="2023-07-02T10:12:02Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testDeletable -->
        <test-method is-config="true" signature="setup()[pri:0, instance:jalview.urls.UrlLinkTableModelTest@5bbbdd4b]" started-at="2023-07-02T10:12:02Z" name="setup" finished-at="2023-07-02T10:12:02Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="testInitialisation()[pri:0, instance:jalview.urls.UrlLinkTableModelTest@5bbbdd4b]" started-at="2023-07-02T10:12:02Z" name="testInitialisation" finished-at="2023-07-02T10:12:02Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testInitialisation -->
        <test-method signature="testEditable()[pri:0, instance:jalview.urls.UrlLinkTableModelTest@5bbbdd4b]" started-at="2023-07-02T10:12:02Z" name="testEditable" finished-at="2023-07-02T10:12:02Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testEditable -->
        <test-method is-config="true" signature="setup()[pri:0, instance:jalview.urls.UrlLinkTableModelTest@5bbbdd4b]" started-at="2023-07-02T10:12:02Z" name="setup" finished-at="2023-07-02T10:12:02Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method is-config="true" signature="setup()[pri:0, instance:jalview.urls.UrlLinkTableModelTest@5bbbdd4b]" started-at="2023-07-02T10:12:02Z" name="setup" finished-at="2023-07-02T10:12:02Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="testRowDelete()[pri:0, instance:jalview.urls.UrlLinkTableModelTest@5bbbdd4b]" started-at="2023-07-02T10:12:02Z" name="testRowDelete" finished-at="2023-07-02T10:12:02Z" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRowDelete -->
        <test-method signature="testRowEditable()[pri:0, instance:jalview.urls.UrlLinkTableModelTest@5bbbdd4b]" started-at="2023-07-02T10:12:02Z" name="testRowEditable" finished-at="2023-07-02T10:12:02Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRowEditable -->
        <test-method is-config="true" signature="setup()[pri:0, instance:jalview.urls.UrlLinkTableModelTest@5bbbdd4b]" started-at="2023-07-02T10:12:02Z" name="setup" finished-at="2023-07-02T10:12:02Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method is-config="true" signature="setup()[pri:0, instance:jalview.urls.UrlLinkTableModelTest@5bbbdd4b]" started-at="2023-07-02T10:12:02Z" name="setup" finished-at="2023-07-02T10:12:02Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="testRowInsert()[pri:0, instance:jalview.urls.UrlLinkTableModelTest@5bbbdd4b]" started-at="2023-07-02T10:12:02Z" name="testRowInsert" finished-at="2023-07-02T10:12:02Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRowInsert -->
        <test-method is-config="true" signature="setup()[pri:0, instance:jalview.urls.UrlLinkTableModelTest@5bbbdd4b]" started-at="2023-07-02T10:12:02Z" name="setup" finished-at="2023-07-02T10:12:02Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="testValues()[pri:0, instance:jalview.urls.UrlLinkTableModelTest@5bbbdd4b]" started-at="2023-07-02T10:12:02Z" name="testValues" finished-at="2023-07-02T10:12:02Z" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testValues -->
      </class> <!-- jalview.urls.UrlLinkTableModelTest -->
      <class name="jalview.ws.dbsources.PfamFullTest">
        <test-method is-config="true" signature="setUp()[pri:0, instance:jalview.ws.dbsources.PfamFullTest@77e2a6e2]" started-at="2023-07-02T10:11:42Z" name="setUp" finished-at="2023-07-02T10:11:42Z" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="testGetURL()[pri:0, instance:jalview.ws.dbsources.PfamFullTest@77e2a6e2]" started-at="2023-07-02T10:11:42Z" name="testGetURL" finished-at="2023-07-02T10:11:42Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetURL -->
      </class> <!-- jalview.ws.dbsources.PfamFullTest -->
      <class name="jalview.structure.StructureCommandTest">
        <test-method signature="testEquals()[pri:0, instance:jalview.structure.StructureCommandTest@aa5455e]" started-at="2023-07-02T10:11:41Z" name="testEquals" finished-at="2023-07-02T10:11:41Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testEquals -->
      </class> <!-- jalview.structure.StructureCommandTest -->
      <class name="jalview.datamodel.SeqCigarTest">
        <test-method is-config="true" signature="setUpJvOptionPane()[pri:0, instance:jalview.datamodel.SeqCigarTest@6e9c413e]" started-at="2023-07-02T10:12:02Z" name="setUpJvOptionPane" finished-at="2023-07-02T10:12:02Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpJvOptionPane -->
        <test-method signature="testFindPosition()[pri:0, instance:jalview.datamodel.SeqCigarTest@6e9c413e]" started-at="2023-07-02T10:12:02Z" name="testFindPosition" finished-at="2023-07-02T10:12:02Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFindPosition -->
        <test-method signature="testSomething()[pri:0, instance:jalview.datamodel.SeqCigarTest@6e9c413e]" started-at="2023-07-02T10:12:02Z" name="testSomething" finished-at="2023-07-02T10:12:02Z" duration-ms="14" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSomething -->
      </class> <!-- jalview.datamodel.SeqCigarTest -->
      <class name="jalview.io.FeaturesFileTest">
        <test-method is-config="true" signature="setUpJvOptionPane()[pri:0, instance:jalview.io.FeaturesFileTest@214894fc]" started-at="2023-07-02T10:12:18Z" name="setUpJvOptionPane" finished-at="2023-07-02T10:12:18Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpJvOptionPane -->
        <test-method signature="readGff3File()[pri:0, instance:jalview.io.FeaturesFileTest@214894fc]" started-at="2023-07-02T10:12:18Z" name="readGff3File" finished-at="2023-07-02T10:12:18Z" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- readGff3File -->
        <test-method signature="simpleGff3FileClass()[pri:0, instance:jalview.io.FeaturesFileTest@214894fc]" started-at="2023-07-02T10:12:18Z" name="simpleGff3FileClass" finished-at="2023-07-02T10:12:18Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- simpleGff3FileClass -->
        <test-method signature="simpleGff3FileLoader()[pri:0, instance:jalview.io.FeaturesFileTest@214894fc]" started-at="2023-07-02T10:12:18Z" name="simpleGff3FileLoader" finished-at="2023-07-02T10:12:18Z" duration-ms="17" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- simpleGff3FileLoader -->
        <test-method signature="simpleGff3RelaxedIdMatching()[pri:0, instance:jalview.io.FeaturesFileTest@214894fc]" started-at="2023-07-02T10:12:18Z" name="simpleGff3RelaxedIdMatching" finished-at="2023-07-02T10:12:19Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- simpleGff3RelaxedIdMatching -->
        <test-method signature="testOutputFeatureFilters()[pri:0, instance:jalview.io.FeaturesFileTest@214894fc]" started-at="2023-07-02T10:12:19Z" name="testOutputFeatureFilters" finished-at="2023-07-02T10:12:19Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testOutputFeatureFilters -->
        <test-method signature="testParse()[pri:0, instance:jalview.io.FeaturesFileTest@214894fc]" started-at="2023-07-02T10:12:19Z" name="testParse" finished-at="2023-07-02T10:12:19Z" duration-ms="38" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testParse -->
        <test-method signature="testParseFilters()[pri:0, instance:jalview.io.FeaturesFileTest@214894fc]" started-at="2023-07-02T10:12:19Z" name="testParseFilters" finished-at="2023-07-02T10:12:19Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testParseFilters -->
        <test-method signature="testParse_jalviewFeaturesOnly()[pri:0, instance:jalview.io.FeaturesFileTest@214894fc]" started-at="2023-07-02T10:12:19Z" name="testParse_jalviewFeaturesOnly" finished-at="2023-07-02T10:12:19Z" duration-ms="16" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testParse_jalviewFeaturesOnly -->
        <test-method signature="testParse_mixedJalviewGff()[pri:0, instance:jalview.io.FeaturesFileTest@214894fc]" started-at="2023-07-02T10:12:19Z" name="testParse_mixedJalviewGff" finished-at="2023-07-02T10:12:19Z" duration-ms="18" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testParse_mixedJalviewGff -->
        <test-method signature="testParse_pureGff3()[pri:0, instance:jalview.io.FeaturesFileTest@214894fc]" started-at="2023-07-02T10:12:19Z" name="testParse_pureGff3" finished-at="2023-07-02T10:12:19Z" duration-ms="16" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testParse_pureGff3 -->
        <test-method signature="testPrintGffFormat()[pri:0, instance:jalview.io.FeaturesFileTest@214894fc]" started-at="2023-07-02T10:12:19Z" name="testPrintGffFormat" finished-at="2023-07-02T10:12:19Z" duration-ms="18" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testPrintGffFormat -->
        <test-method signature="testPrintGffFormat_withFilters()[pri:0, instance:jalview.io.FeaturesFileTest@214894fc]" started-at="2023-07-02T10:12:19Z" name="testPrintGffFormat_withFilters" finished-at="2023-07-02T10:12:19Z" duration-ms="15" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testPrintGffFormat_withFilters -->
        <test-method signature="testPrintJalviewFormat()[pri:0, instance:jalview.io.FeaturesFileTest@214894fc]" started-at="2023-07-02T10:12:19Z" name="testPrintJalviewFormat" finished-at="2023-07-02T10:12:19Z" duration-ms="18" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testPrintJalviewFormat -->
        <test-method signature="testPrintJalviewFormat_withFilters()[pri:0, instance:jalview.io.FeaturesFileTest@214894fc]" started-at="2023-07-02T10:12:19Z" name="testPrintJalviewFormat_withFilters" finished-at="2023-07-02T10:12:19Z" duration-ms="16" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testPrintJalviewFormat_withFilters -->
        <test-method is-config="true" signature="tearDownAfterClass()[pri:0, instance:jalview.io.FeaturesFileTest@214894fc]" started-at="2023-07-02T10:12:19Z" name="tearDownAfterClass" finished-at="2023-07-02T10:12:19Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownAfterClass -->
      </class> <!-- jalview.io.FeaturesFileTest -->
      <class name="jalview.renderer.seqfeatures.FeatureRendererTest">
        <test-method signature="testFilterFeaturesForDisplay()[pri:0, instance:jalview.renderer.seqfeatures.FeatureRendererTest@2bffa76d]" started-at="2023-07-02T10:11:54Z" name="testFilterFeaturesForDisplay" finished-at="2023-07-02T10:11:54Z" duration-ms="36" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFilterFeaturesForDisplay -->
        <test-method signature="testFindAllFeatures()[pri:0, instance:jalview.renderer.seqfeatures.FeatureRendererTest@2bffa76d]" started-at="2023-07-02T10:11:54Z" name="testFindAllFeatures" finished-at="2023-07-02T10:11:54Z" duration-ms="50" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFindAllFeatures -->
        <test-method signature="testFindComplementFeaturesAtResidue()[pri:0, instance:jalview.renderer.seqfeatures.FeatureRendererTest@2bffa76d]" started-at="2023-07-02T10:11:54Z" name="testFindComplementFeaturesAtResidue" finished-at="2023-07-02T10:11:54Z" duration-ms="278" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFindComplementFeaturesAtResidue -->
        <test-method signature="testFindFeaturesAtColumn()[pri:0, instance:jalview.renderer.seqfeatures.FeatureRendererTest@2bffa76d]" started-at="2023-07-02T10:11:54Z" name="testFindFeaturesAtColumn" finished-at="2023-07-02T10:11:54Z" duration-ms="37" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFindFeaturesAtColumn -->
        <test-method signature="testGetColour()[pri:0, instance:jalview.renderer.seqfeatures.FeatureRendererTest@2bffa76d]" started-at="2023-07-02T10:11:54Z" name="testGetColour" finished-at="2023-07-02T10:11:54Z" duration-ms="30" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetColour -->
        <test-method signature="testIsVisible()[pri:0, instance:jalview.renderer.seqfeatures.FeatureRendererTest@2bffa76d]" started-at="2023-07-02T10:11:54Z" name="testIsVisible" finished-at="2023-07-02T10:11:54Z" duration-ms="114" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testIsVisible -->
      </class> <!-- jalview.renderer.seqfeatures.FeatureRendererTest -->
      <class name="jalview.schemes.FeatureColourTest">
        <test-method signature="testConstructors()[pri:0, instance:jalview.schemes.FeatureColourTest@7668d560]" started-at="2023-07-02T10:12:02Z" name="testConstructors" finished-at="2023-07-02T10:12:02Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testConstructors -->
        <test-method signature="testCopyConstructor()[pri:0, instance:jalview.schemes.FeatureColourTest@7668d560]" started-at="2023-07-02T10:12:02Z" name="testCopyConstructor" finished-at="2023-07-02T10:12:02Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCopyConstructor -->
        <test-method signature="testGetColor_GraduatedByAttributeValue()[pri:0, instance:jalview.schemes.FeatureColourTest@7668d560]" started-at="2023-07-02T10:12:02Z" name="testGetColor_GraduatedByAttributeValue" finished-at="2023-07-02T10:12:02Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetColor_GraduatedByAttributeValue -->
        <test-method signature="testGetColor_aboveBelowThreshold()[pri:0, instance:jalview.schemes.FeatureColourTest@7668d560]" started-at="2023-07-02T10:12:02Z" name="testGetColor_aboveBelowThreshold" finished-at="2023-07-02T10:12:02Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetColor_aboveBelowThreshold -->
        <test-method is-config="true" signature="setUpJvOptionPane()[pri:0, instance:jalview.schemes.FeatureColourTest@7668d560]" started-at="2023-07-02T10:12:02Z" name="setUpJvOptionPane" finished-at="2023-07-02T10:12:02Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpJvOptionPane -->
        <test-method signature="testGetColor_Graduated()[pri:0, instance:jalview.schemes.FeatureColourTest@7668d560]" started-at="2023-07-02T10:12:02Z" name="testGetColor_Graduated" finished-at="2023-07-02T10:12:02Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetColor_Graduated -->
        <test-method signature="testGetColor_colourByLabel()[pri:0, instance:jalview.schemes.FeatureColourTest@7668d560]" started-at="2023-07-02T10:12:02Z" name="testGetColor_colourByLabel" finished-at="2023-07-02T10:12:02Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetColor_colourByLabel -->
        <test-method signature="testGetColor_simpleColour()[pri:0, instance:jalview.schemes.FeatureColourTest@7668d560]" started-at="2023-07-02T10:12:02Z" name="testGetColor_simpleColour" finished-at="2023-07-02T10:12:02Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetColor_simpleColour -->
        <test-method signature="testGetColor_colourByAttributeText()[pri:0, instance:jalview.schemes.FeatureColourTest@7668d560]" started-at="2023-07-02T10:12:02Z" name="testGetColor_colourByAttributeText" finished-at="2023-07-02T10:12:02Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetColor_colourByAttributeText -->
        <test-method signature="testGetDescription()[pri:0, instance:jalview.schemes.FeatureColourTest@7668d560]" started-at="2023-07-02T10:12:02Z" name="testGetDescription" finished-at="2023-07-02T10:12:02Z" duration-ms="3" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetDescription -->
        <test-method signature="testParseJalviewFeatureColour()[pri:0, instance:jalview.schemes.FeatureColourTest@7668d560]" started-at="2023-07-02T10:12:02Z" name="testParseJalviewFeatureColour" finished-at="2023-07-02T10:12:02Z" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testParseJalviewFeatureColour -->
        <test-method signature="testIsOutwithThreshold()[pri:0, instance:jalview.schemes.FeatureColourTest@7668d560]" started-at="2023-07-02T10:12:02Z" name="testIsOutwithThreshold" finished-at="2023-07-02T10:12:02Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testIsOutwithThreshold -->
        <test-method signature="testToJalviewFormat()[pri:0, instance:jalview.schemes.FeatureColourTest@7668d560]" started-at="2023-07-02T10:12:02Z" name="testToJalviewFormat" finished-at="2023-07-02T10:12:02Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testToJalviewFormat -->
      </class> <!-- jalview.schemes.FeatureColourTest -->
      <class name="jalview.analysis.GeneticCodesTest">
        <test-method signature="testGetCodeTables()[pri:0, instance:jalview.analysis.GeneticCodesTest@751e664e]" started-at="2023-07-02T10:12:02Z" name="testGetCodeTables" finished-at="2023-07-02T10:12:02Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetCodeTables -->
        <test-method signature="testGetCodeTable()[pri:0, instance:jalview.analysis.GeneticCodesTest@751e664e]" started-at="2023-07-02T10:12:02Z" name="testGetCodeTable" finished-at="2023-07-02T10:12:02Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetCodeTable -->
        <test-method signature="testTranslate()[pri:0, instance:jalview.analysis.GeneticCodesTest@751e664e]" started-at="2023-07-02T10:12:02Z" name="testTranslate" finished-at="2023-07-02T10:12:02Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testTranslate -->
        <test-method signature="testTranslateCanonical()[pri:0, instance:jalview.analysis.GeneticCodesTest@751e664e]" started-at="2023-07-02T10:12:02Z" name="testTranslateCanonical" finished-at="2023-07-02T10:12:02Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testTranslateCanonical -->
        <test-method signature="testTranslate_standardTable()[pri:0, instance:jalview.analysis.GeneticCodesTest@751e664e]" started-at="2023-07-02T10:12:02Z" name="testTranslate_standardTable" finished-at="2023-07-02T10:12:02Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testTranslate_standardTable -->
        <test-method signature="testTranslate_nonStandardTableAmbiguityCodes()[pri:0, instance:jalview.analysis.GeneticCodesTest@751e664e]" started-at="2023-07-02T10:12:02Z" name="testTranslate_nonStandardTableAmbiguityCodes" finished-at="2023-07-02T10:12:02Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testTranslate_nonStandardTableAmbiguityCodes -->
        <test-method signature="testTranslate_standardTableAmbiguityCodes()[pri:0, instance:jalview.analysis.GeneticCodesTest@751e664e]" started-at="2023-07-02T10:12:02Z" name="testTranslate_standardTableAmbiguityCodes" finished-at="2023-07-02T10:12:02Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testTranslate_standardTableAmbiguityCodes -->
      </class> <!-- jalview.analysis.GeneticCodesTest -->
      <class name="jalview.viewmodel.OverviewDimensionsShowHiddenTest">
        <test-method is-config="true" signature="setUpAlignment()[pri:0, instance:jalview.viewmodel.OverviewDimensionsShowHiddenTest@c1a4620]" started-at="2023-07-02T10:13:44Z" name="setUpAlignment" finished-at="2023-07-02T10:13:44Z" duration-ms="9" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpAlignment -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:jalview.viewmodel.OverviewDimensionsShowHiddenTest@c1a4620]" started-at="2023-07-02T10:13:44Z" name="setUp" finished-at="2023-07-02T10:13:44Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="testConstructor()[pri:0, instance:jalview.viewmodel.OverviewDimensionsShowHiddenTest@c1a4620]" started-at="2023-07-02T10:13:44Z" name="testConstructor" finished-at="2023-07-02T10:13:44Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testConstructor -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:jalview.viewmodel.OverviewDimensionsShowHiddenTest@c1a4620]" started-at="2023-07-02T10:13:44Z" name="setUp" finished-at="2023-07-02T10:13:44Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="testDragging()[pri:0, instance:jalview.viewmodel.OverviewDimensionsShowHiddenTest@c1a4620]" started-at="2023-07-02T10:13:44Z" name="testDragging" finished-at="2023-07-02T10:13:44Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testDragging -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:jalview.viewmodel.OverviewDimensionsShowHiddenTest@c1a4620]" started-at="2023-07-02T10:13:44Z" name="setUp" finished-at="2023-07-02T10:13:44Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="testFromMouseWithHiddenColsAtEnd()[pri:0, instance:jalview.viewmodel.OverviewDimensionsShowHiddenTest@c1a4620]" started-at="2023-07-02T10:13:44Z" name="testFromMouseWithHiddenColsAtEnd" finished-at="2023-07-02T10:13:44Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFromMouseWithHiddenColsAtEnd -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:jalview.viewmodel.OverviewDimensionsShowHiddenTest@c1a4620]" started-at="2023-07-02T10:13:44Z" name="setUp" finished-at="2023-07-02T10:13:44Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="testFromMouseWithHiddenColsAtStart()[pri:0, instance:jalview.viewmodel.OverviewDimensionsShowHiddenTest@c1a4620]" started-at="2023-07-02T10:13:44Z" name="testFromMouseWithHiddenColsAtStart" finished-at="2023-07-02T10:13:44Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFromMouseWithHiddenColsAtStart -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:jalview.viewmodel.OverviewDimensionsShowHiddenTest@c1a4620]" started-at="2023-07-02T10:13:44Z" name="setUp" finished-at="2023-07-02T10:13:44Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="testFromMouseWithHiddenColsInMiddle()[pri:0, instance:jalview.viewmodel.OverviewDimensionsShowHiddenTest@c1a4620]" started-at="2023-07-02T10:13:44Z" name="testFromMouseWithHiddenColsInMiddle" finished-at="2023-07-02T10:13:44Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFromMouseWithHiddenColsInMiddle -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:jalview.viewmodel.OverviewDimensionsShowHiddenTest@c1a4620]" started-at="2023-07-02T10:13:44Z" name="setUp" finished-at="2023-07-02T10:13:44Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="testFromMouseWithHiddenRowsAtEnd()[pri:0, instance:jalview.viewmodel.OverviewDimensionsShowHiddenTest@c1a4620]" started-at="2023-07-02T10:13:44Z" name="testFromMouseWithHiddenRowsAtEnd" finished-at="2023-07-02T10:13:44Z" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFromMouseWithHiddenRowsAtEnd -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:jalview.viewmodel.OverviewDimensionsShowHiddenTest@c1a4620]" started-at="2023-07-02T10:13:44Z" name="setUp" finished-at="2023-07-02T10:13:44Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="testFromMouseWithHiddenRowsAtStart()[pri:0, instance:jalview.viewmodel.OverviewDimensionsShowHiddenTest@c1a4620]" started-at="2023-07-02T10:13:44Z" name="testFromMouseWithHiddenRowsAtStart" finished-at="2023-07-02T10:13:44Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFromMouseWithHiddenRowsAtStart -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:jalview.viewmodel.OverviewDimensionsShowHiddenTest@c1a4620]" started-at="2023-07-02T10:13:44Z" name="setUp" finished-at="2023-07-02T10:13:44Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="testFromMouseWithHiddenRowsAtStartWrapped()[pri:0, instance:jalview.viewmodel.OverviewDimensionsShowHiddenTest@c1a4620]" started-at="2023-07-02T10:13:44Z" name="testFromMouseWithHiddenRowsAtStartWrapped" finished-at="2023-07-02T10:13:44Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFromMouseWithHiddenRowsAtStartWrapped -->
        <test-method signature="testFromMouseWithHiddenRowsInMiddle()[pri:0, instance:jalview.viewmodel.OverviewDimensionsShowHiddenTest@c1a4620]" started-at="2023-07-02T10:13:44Z" name="testFromMouseWithHiddenRowsInMiddle" finished-at="2023-07-02T10:13:44Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFromMouseWithHiddenRowsInMiddle -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:jalview.viewmodel.OverviewDimensionsShowHiddenTest@c1a4620]" started-at="2023-07-02T10:13:44Z" name="setUp" finished-at="2023-07-02T10:13:44Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:jalview.viewmodel.OverviewDimensionsShowHiddenTest@c1a4620]" started-at="2023-07-02T10:13:44Z" name="setUp" finished-at="2023-07-02T10:13:44Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="testPositionInBox()[pri:0, instance:jalview.viewmodel.OverviewDimensionsShowHiddenTest@c1a4620]" started-at="2023-07-02T10:13:44Z" name="testPositionInBox" finished-at="2023-07-02T10:13:44Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testPositionInBox -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:jalview.viewmodel.OverviewDimensionsShowHiddenTest@c1a4620]" started-at="2023-07-02T10:13:44Z" name="setUp" finished-at="2023-07-02T10:13:44Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="testSetBoxFromMouseClick()[pri:0, instance:jalview.viewmodel.OverviewDimensionsShowHiddenTest@c1a4620]" started-at="2023-07-02T10:13:44Z" name="testSetBoxFromMouseClick" finished-at="2023-07-02T10:13:44Z" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSetBoxFromMouseClick -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:jalview.viewmodel.OverviewDimensionsShowHiddenTest@c1a4620]" started-at="2023-07-02T10:13:44Z" name="setUp" finished-at="2023-07-02T10:13:44Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="testSetBoxFromViewport()[pri:0, instance:jalview.viewmodel.OverviewDimensionsShowHiddenTest@c1a4620]" started-at="2023-07-02T10:13:44Z" name="testSetBoxFromViewport" finished-at="2023-07-02T10:13:44Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSetBoxFromViewport -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:jalview.viewmodel.OverviewDimensionsShowHiddenTest@c1a4620]" started-at="2023-07-02T10:13:44Z" name="setUp" finished-at="2023-07-02T10:13:44Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="testSetBoxFromViewportHiddenColsAtEnd()[pri:0, instance:jalview.viewmodel.OverviewDimensionsShowHiddenTest@c1a4620]" started-at="2023-07-02T10:13:44Z" name="testSetBoxFromViewportHiddenColsAtEnd" finished-at="2023-07-02T10:13:44Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSetBoxFromViewportHiddenColsAtEnd -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:jalview.viewmodel.OverviewDimensionsShowHiddenTest@c1a4620]" started-at="2023-07-02T10:13:44Z" name="setUp" finished-at="2023-07-02T10:13:44Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="testSetBoxFromViewportHiddenColsAtStart()[pri:0, instance:jalview.viewmodel.OverviewDimensionsShowHiddenTest@c1a4620]" started-at="2023-07-02T10:13:44Z" name="testSetBoxFromViewportHiddenColsAtStart" finished-at="2023-07-02T10:13:44Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSetBoxFromViewportHiddenColsAtStart -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:jalview.viewmodel.OverviewDimensionsShowHiddenTest@c1a4620]" started-at="2023-07-02T10:13:44Z" name="setUp" finished-at="2023-07-02T10:13:44Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="testSetBoxFromViewportHiddenColsInMiddle()[pri:0, instance:jalview.viewmodel.OverviewDimensionsShowHiddenTest@c1a4620]" started-at="2023-07-02T10:13:44Z" name="testSetBoxFromViewportHiddenColsInMiddle" finished-at="2023-07-02T10:13:44Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSetBoxFromViewportHiddenColsInMiddle -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:jalview.viewmodel.OverviewDimensionsShowHiddenTest@c1a4620]" started-at="2023-07-02T10:13:44Z" name="setUp" finished-at="2023-07-02T10:13:44Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="testSetBoxFromViewportHiddenRowsAtEnd()[pri:0, instance:jalview.viewmodel.OverviewDimensionsShowHiddenTest@c1a4620]" started-at="2023-07-02T10:13:44Z" name="testSetBoxFromViewportHiddenRowsAtEnd" finished-at="2023-07-02T10:13:44Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSetBoxFromViewportHiddenRowsAtEnd -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:jalview.viewmodel.OverviewDimensionsShowHiddenTest@c1a4620]" started-at="2023-07-02T10:13:44Z" name="setUp" finished-at="2023-07-02T10:13:44Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="testSetBoxFromViewportHiddenRowsAtStart()[pri:0, instance:jalview.viewmodel.OverviewDimensionsShowHiddenTest@c1a4620]" started-at="2023-07-02T10:13:44Z" name="testSetBoxFromViewportHiddenRowsAtStart" finished-at="2023-07-02T10:13:44Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSetBoxFromViewportHiddenRowsAtStart -->
        <test-method signature="testSetBoxFromViewportHiddenRowsInMiddle()[pri:0, instance:jalview.viewmodel.OverviewDimensionsShowHiddenTest@c1a4620]" started-at="2023-07-02T10:13:44Z" name="testSetBoxFromViewportHiddenRowsInMiddle" finished-at="2023-07-02T10:13:44Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSetBoxFromViewportHiddenRowsInMiddle -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:jalview.viewmodel.OverviewDimensionsShowHiddenTest@c1a4620]" started-at="2023-07-02T10:13:44Z" name="setUp" finished-at="2023-07-02T10:13:44Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="cleanUp()[pri:0, instance:jalview.viewmodel.OverviewDimensionsShowHiddenTest@c1a4620]" started-at="2023-07-02T10:13:44Z" name="cleanUp" finished-at="2023-07-02T10:13:44Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cleanUp -->
      </class> <!-- jalview.viewmodel.OverviewDimensionsShowHiddenTest -->
      <class name="jalview.util.ComparisonTest">
        <test-method signature="testIsGap()[pri:0, instance:jalview.util.ComparisonTest@54f5f647]" started-at="2023-07-02T10:12:07Z" name="testIsGap" finished-at="2023-07-02T10:12:07Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testIsGap -->
        <test-method is-config="true" signature="setUpJvOptionPane()[pri:0, instance:jalview.util.ComparisonTest@54f5f647]" started-at="2023-07-02T10:12:07Z" name="setUpJvOptionPane" finished-at="2023-07-02T10:12:07Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpJvOptionPane -->
        <test-method signature="testPID_includingGaps()[pri:0, instance:jalview.util.ComparisonTest@54f5f647]" started-at="2023-07-02T10:12:07Z" name="testPID_includingGaps" finished-at="2023-07-02T10:12:07Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testPID_includingGaps -->
        <test-method signature="testIsSameResidue()[pri:0, instance:jalview.util.ComparisonTest@54f5f647]" started-at="2023-07-02T10:12:07Z" name="testIsSameResidue" finished-at="2023-07-02T10:12:07Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testIsSameResidue -->
        <test-method signature="testIsNucleotide()[pri:0, instance:jalview.util.ComparisonTest@54f5f647]" started-at="2023-07-02T10:12:07Z" name="testIsNucleotide" finished-at="2023-07-02T10:12:07Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testIsNucleotide -->
        <test-method signature="testIsNucleotideSequence()[pri:0, instance:jalview.util.ComparisonTest@54f5f647]" started-at="2023-07-02T10:12:07Z" name="testIsNucleotideSequence" finished-at="2023-07-02T10:12:07Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testIsNucleotideSequence -->
        <test-method signature="testIsNucleotide_sequences()[pri:0, instance:jalview.util.ComparisonTest@54f5f647]" started-at="2023-07-02T10:12:07Z" name="testIsNucleotide_sequences" finished-at="2023-07-02T10:12:07Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testIsNucleotide_sequences -->
        <test-method signature="testPID_ungappedOnly()[pri:0, instance:jalview.util.ComparisonTest@54f5f647]" started-at="2023-07-02T10:12:07Z" name="testPID_ungappedOnly" finished-at="2023-07-02T10:12:07Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testPID_ungappedOnly -->
      </class> <!-- jalview.util.ComparisonTest -->
      <class name="mc_view.BondTest">
        <test-method signature="testTranslate()[pri:0, instance:mc_view.BondTest@26f3d90c]" started-at="2023-07-02T10:11:41Z" name="testTranslate" finished-at="2023-07-02T10:11:41Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testTranslate -->
        <test-method is-config="true" signature="setUpJvOptionPane()[pri:0, instance:mc_view.BondTest@26f3d90c]" started-at="2023-07-02T10:11:41Z" name="setUpJvOptionPane" finished-at="2023-07-02T10:11:41Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpJvOptionPane -->
      </class> <!-- mc_view.BondTest -->
      <class name="jalview.datamodel.ResidueCountTest">
        <test-method signature="testGetSymbolCounts_nucleotide()[pri:0, instance:jalview.datamodel.ResidueCountTest@24b52d3e]" started-at="2023-07-02T10:12:01Z" name="testGetSymbolCounts_nucleotide" finished-at="2023-07-02T10:12:01Z" duration-ms="3" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetSymbolCounts_nucleotide -->
        <test-method is-config="true" signature="setUpJvOptionPane()[pri:0, instance:jalview.datamodel.ResidueCountTest@24b52d3e]" started-at="2023-07-02T10:12:01Z" name="setUpJvOptionPane" finished-at="2023-07-02T10:12:01Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpJvOptionPane -->
        <test-method signature="testGetResiduesForCount()[pri:0, instance:jalview.datamodel.ResidueCountTest@24b52d3e]" started-at="2023-07-02T10:12:01Z" name="testGetResiduesForCount" finished-at="2023-07-02T10:12:01Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetResiduesForCount -->
        <test-method signature="testGetModalCount()[pri:0, instance:jalview.datamodel.ResidueCountTest@24b52d3e]" started-at="2023-07-02T10:12:01Z" name="testGetModalCount" finished-at="2023-07-02T10:12:01Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetModalCount -->
        <test-method signature="testAddGap()[pri:0, instance:jalview.datamodel.ResidueCountTest@24b52d3e]" started-at="2023-07-02T10:12:01Z" name="testAddGap" finished-at="2023-07-02T10:12:01Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAddGap -->
        <test-method signature="testGetTooltip()[pri:0, instance:jalview.datamodel.ResidueCountTest@24b52d3e]" started-at="2023-07-02T10:12:01Z" name="testGetTooltip" finished-at="2023-07-02T10:12:01Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetTooltip -->
        <test-method signature="testGetSymbolCounts_peptide()[pri:0, instance:jalview.datamodel.ResidueCountTest@24b52d3e]" started-at="2023-07-02T10:12:01Z" name="testGetSymbolCounts_peptide" finished-at="2023-07-02T10:12:01Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetSymbolCounts_peptide -->
        <test-method signature="testToString()[pri:0, instance:jalview.datamodel.ResidueCountTest@24b52d3e]" started-at="2023-07-02T10:12:01Z" name="testToString" finished-at="2023-07-02T10:12:01Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testToString -->
        <test-method signature="testPut()[pri:0, instance:jalview.datamodel.ResidueCountTest@24b52d3e]" started-at="2023-07-02T10:12:01Z" name="testPut" finished-at="2023-07-02T10:12:01Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testPut -->
        <test-method signature="testOverflow()[pri:0, instance:jalview.datamodel.ResidueCountTest@24b52d3e]" started-at="2023-07-02T10:12:01Z" name="testOverflow" finished-at="2023-07-02T10:12:01Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testOverflow -->
        <test-method signature="test_countNucleotide()[pri:0, instance:jalview.datamodel.ResidueCountTest@24b52d3e]" started-at="2023-07-02T10:12:01Z" name="test_countNucleotide" finished-at="2023-07-02T10:12:01Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_countNucleotide -->
        <test-method signature="test_unexpectedNucleotide()[pri:0, instance:jalview.datamodel.ResidueCountTest@24b52d3e]" started-at="2023-07-02T10:12:01Z" name="test_unexpectedNucleotide" finished-at="2023-07-02T10:12:01Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_unexpectedNucleotide -->
        <test-method signature="test_countPeptide()[pri:0, instance:jalview.datamodel.ResidueCountTest@24b52d3e]" started-at="2023-07-02T10:12:01Z" name="test_countPeptide" finished-at="2023-07-02T10:12:01Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_countPeptide -->
        <test-method signature="test_unexpectedPeptide()[pri:0, instance:jalview.datamodel.ResidueCountTest@24b52d3e]" started-at="2023-07-02T10:12:01Z" name="test_unexpectedPeptide" finished-at="2023-07-02T10:12:01Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_unexpectedPeptide -->
      </class> <!-- jalview.datamodel.ResidueCountTest -->
      <class name="jalview.urls.AppletUrlProviderFactoryTest">
        <test-method signature="testCreateUrlProvider()[pri:0, instance:jalview.urls.AppletUrlProviderFactoryTest@d4ab71a]" started-at="2023-07-02T10:11:54Z" name="testCreateUrlProvider" finished-at="2023-07-02T10:11:54Z" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCreateUrlProvider -->
      </class> <!-- jalview.urls.AppletUrlProviderFactoryTest -->
      <class name="jalview.datamodel.MappingTest">
        <test-method signature="testCopyConstructor()[pri:0, instance:jalview.datamodel.MappingTest@323e8306]" started-at="2023-07-02T10:11:54Z" name="testCopyConstructor" finished-at="2023-07-02T10:11:54Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCopyConstructor -->
        <test-method is-config="true" signature="setUpJvOptionPane()[pri:0, instance:jalview.datamodel.MappingTest@323e8306]" started-at="2023-07-02T10:11:54Z" name="setUpJvOptionPane" finished-at="2023-07-02T10:11:54Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpJvOptionPane -->
        <test-method signature="testIntersectVisContigs()[pri:0, instance:jalview.datamodel.MappingTest@323e8306]" started-at="2023-07-02T10:11:54Z" name="testIntersectVisContigs" finished-at="2023-07-02T10:11:54Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testIntersectVisContigs -->
        <test-method signature="testToString()[pri:0, instance:jalview.datamodel.MappingTest@323e8306]" started-at="2023-07-02T10:11:54Z" name="testToString" finished-at="2023-07-02T10:11:54Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testToString -->
      </class> <!-- jalview.datamodel.MappingTest -->
      <class name="jalview.io.NewickFileTests">
        <test-method is-config="true" signature="setUpJvOptionPane()[pri:0, instance:jalview.io.NewickFileTests@772485dd]" started-at="2023-07-02T10:11:41Z" name="setUpJvOptionPane" finished-at="2023-07-02T10:11:41Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpJvOptionPane -->
        <test-method is-config="true" signature="setUpBeforeClass()[pri:0, instance:jalview.io.NewickFileTests@772485dd]" started-at="2023-07-02T10:11:41Z" name="setUpBeforeClass" finished-at="2023-07-02T10:11:41Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpBeforeClass -->
        <test-method signature="testTreeIO()[pri:0, instance:jalview.io.NewickFileTests@49bd54f7]" started-at="2023-07-02T10:11:41Z" name="testTreeIO" finished-at="2023-07-02T10:11:41Z" duration-ms="27" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testTreeIO -->
        <test-method is-config="true" signature="setUpJvOptionPane()[pri:0, instance:jalview.io.NewickFileTests@772485dd]" started-at="2023-07-02T10:11:41Z" name="setUpJvOptionPane" finished-at="2023-07-02T10:11:41Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpJvOptionPane -->
        <test-method signature="testTreeIO()[pri:0, instance:jalview.io.NewickFileTests@6b5f8707]" started-at="2023-07-02T10:11:41Z" name="testTreeIO" finished-at="2023-07-02T10:11:41Z" duration-ms="8" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testTreeIO -->
        <test-method is-config="true" signature="setUpBeforeClass()[pri:0, instance:jalview.io.NewickFileTests@772485dd]" started-at="2023-07-02T10:11:41Z" name="setUpBeforeClass" finished-at="2023-07-02T10:11:41Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpBeforeClass -->
        <test-method is-config="true" signature="tearDownAfterClass()[pri:0, instance:jalview.io.NewickFileTests@772485dd]" started-at="2023-07-02T10:11:41Z" name="tearDownAfterClass" finished-at="2023-07-02T10:11:41Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownAfterClass -->
        <test-method is-config="true" signature="tearDownAfterClass()[pri:0, instance:jalview.io.NewickFileTests@772485dd]" started-at="2023-07-02T10:11:41Z" name="tearDownAfterClass" finished-at="2023-07-02T10:11:41Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownAfterClass -->
        <test-method is-config="true" signature="setUpBeforeClass()[pri:0, instance:jalview.io.NewickFileTests@772485dd]" started-at="2023-07-02T10:11:41Z" name="setUpBeforeClass" finished-at="2023-07-02T10:11:41Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpBeforeClass -->
        <test-method is-config="true" signature="setUpJvOptionPane()[pri:0, instance:jalview.io.NewickFileTests@772485dd]" started-at="2023-07-02T10:11:41Z" name="setUpJvOptionPane" finished-at="2023-07-02T10:11:41Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpJvOptionPane -->
        <test-method signature="testTreeIO()[pri:0, instance:jalview.io.NewickFileTests@772485dd]" started-at="2023-07-02T10:11:41Z" name="testTreeIO" finished-at="2023-07-02T10:11:42Z" duration-ms="4" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testTreeIO -->
        <test-method is-config="true" signature="tearDownAfterClass()[pri:0, instance:jalview.io.NewickFileTests@772485dd]" started-at="2023-07-02T10:11:42Z" name="tearDownAfterClass" finished-at="2023-07-02T10:11:42Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownAfterClass -->
      </class> <!-- jalview.io.NewickFileTests -->
      <class name="jalview.gui.structurechooser.StructureChooserQuerySourceTest">
        <test-method is-config="true" signature="setUp()[pri:0, instance:jalview.gui.structurechooser.StructureChooserQuerySourceTest@3be8821f]" started-at="2023-07-02T10:12:02Z" name="setUp" finished-at="2023-07-02T10:12:02Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="buildPDBQueryTest()[pri:0, instance:jalview.gui.structurechooser.StructureChooserQuerySourceTest@3be8821f]" started-at="2023-07-02T10:12:02Z" name="buildPDBQueryTest" finished-at="2023-07-02T10:12:02Z" duration-ms="7" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- buildPDBQueryTest -->
        <test-method is-config="true" signature="setUpJvOptionPane()[pri:0, instance:jalview.gui.structurechooser.StructureChooserQuerySourceTest@3be8821f]" started-at="2023-07-02T10:12:02Z" name="setUpJvOptionPane" finished-at="2023-07-02T10:12:02Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpJvOptionPane -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:jalview.gui.structurechooser.StructureChooserQuerySourceTest@3be8821f]" started-at="2023-07-02T10:12:02Z" name="tearDown" finished-at="2023-07-02T10:12:02Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:jalview.gui.structurechooser.StructureChooserQuerySourceTest@3be8821f]" started-at="2023-07-02T10:12:02Z" name="setUp" finished-at="2023-07-02T10:12:02Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="buildThreeDBQueryTest()[pri:0, instance:jalview.gui.structurechooser.StructureChooserQuerySourceTest@3be8821f]" started-at="2023-07-02T10:12:02Z" name="buildThreeDBQueryTest" finished-at="2023-07-02T10:12:02Z" duration-ms="22" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- buildThreeDBQueryTest -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:jalview.gui.structurechooser.StructureChooserQuerySourceTest@3be8821f]" started-at="2023-07-02T10:12:02Z" name="tearDown" finished-at="2023-07-02T10:12:02Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method signature="cascadingThreeDBandPDBQuerys(jalview.datamodel.SequenceI)[pri:0, instance:jalview.gui.structurechooser.StructureChooserQuerySourceTest@3be8821f]" started-at="2023-07-02T10:12:02Z" name="cascadingThreeDBandPDBQuerys" data-provider="testUpSeqs" finished-at="2023-07-02T10:12:02Z" duration-ms="368" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[P38398]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cascadingThreeDBandPDBQuerys -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:jalview.gui.structurechooser.StructureChooserQuerySourceTest@3be8821f]" started-at="2023-07-02T10:12:02Z" name="setUp" finished-at="2023-07-02T10:12:02Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:jalview.gui.structurechooser.StructureChooserQuerySourceTest@3be8821f]" started-at="2023-07-02T10:12:02Z" name="setUp" finished-at="2023-07-02T10:12:02Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="cascadingThreeDBandPDBQuerys(jalview.datamodel.SequenceI)[pri:0, instance:jalview.gui.structurechooser.StructureChooserQuerySourceTest@3be8821f]" started-at="2023-07-02T10:12:02Z" name="cascadingThreeDBandPDBQuerys" data-provider="testUpSeqs" finished-at="2023-07-02T10:12:03Z" duration-ms="506" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[INS_HUMAN]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cascadingThreeDBandPDBQuerys -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:jalview.gui.structurechooser.StructureChooserQuerySourceTest@3be8821f]" started-at="2023-07-02T10:12:02Z" name="tearDown" finished-at="2023-07-02T10:12:02Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:jalview.gui.structurechooser.StructureChooserQuerySourceTest@3be8821f]" started-at="2023-07-02T10:12:03Z" name="setUp" finished-at="2023-07-02T10:12:03Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:jalview.gui.structurechooser.StructureChooserQuerySourceTest@3be8821f]" started-at="2023-07-02T10:12:03Z" name="tearDown" finished-at="2023-07-02T10:12:03Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method signature="cascadingThreeDBandPDBQuerys(jalview.datamodel.SequenceI)[pri:0, instance:jalview.gui.structurechooser.StructureChooserQuerySourceTest@3be8821f]" started-at="2023-07-02T10:12:03Z" name="cascadingThreeDBandPDBQuerys" data-provider="testUpSeqs" finished-at="2023-07-02T10:12:04Z" duration-ms="1392" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[R1AB_SARS2]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cascadingThreeDBandPDBQuerys -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:jalview.gui.structurechooser.StructureChooserQuerySourceTest@3be8821f]" started-at="2023-07-02T10:12:04Z" name="tearDown" finished-at="2023-07-02T10:12:04Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method signature="cascadingThreeDBandPDBQuerys(jalview.datamodel.SequenceI)[pri:0, instance:jalview.gui.structurechooser.StructureChooserQuerySourceTest@3be8821f]" started-at="2023-07-02T10:12:04Z" name="cascadingThreeDBandPDBQuerys" data-provider="testUpSeqs" finished-at="2023-07-02T10:12:05Z" duration-ms="281" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[FER1_MAIZE]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cascadingThreeDBandPDBQuerys -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:jalview.gui.structurechooser.StructureChooserQuerySourceTest@3be8821f]" started-at="2023-07-02T10:12:04Z" name="setUp" finished-at="2023-07-02T10:12:04Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="sanitizeSeqNameTest()[pri:0, instance:jalview.gui.structurechooser.StructureChooserQuerySourceTest@3be8821f]" started-at="2023-07-02T10:12:05Z" name="sanitizeSeqNameTest" finished-at="2023-07-02T10:12:05Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- sanitizeSeqNameTest -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:jalview.gui.structurechooser.StructureChooserQuerySourceTest@3be8821f]" started-at="2023-07-02T10:12:05Z" name="tearDown" finished-at="2023-07-02T10:12:05Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:jalview.gui.structurechooser.StructureChooserQuerySourceTest@3be8821f]" started-at="2023-07-02T10:12:05Z" name="tearDown" finished-at="2023-07-02T10:12:05Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:jalview.gui.structurechooser.StructureChooserQuerySourceTest@3be8821f]" started-at="2023-07-02T10:12:05Z" name="setUp" finished-at="2023-07-02T10:12:05Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
      </class> <!-- jalview.gui.structurechooser.StructureChooserQuerySourceTest -->
      <class name="jalview.renderer.OverviewResColourFinderTest">
        <test-method is-config="true" signature="setUpJvOptionPane()[pri:0, instance:jalview.renderer.OverviewResColourFinderTest@5d332969]" started-at="2023-07-02T10:11:41Z" name="setUpJvOptionPane" finished-at="2023-07-02T10:11:41Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpJvOptionPane -->
        <test-method signature="testGetResidueBoxColour_none()[pri:0, instance:jalview.renderer.OverviewResColourFinderTest@5d332969]" started-at="2023-07-02T10:11:41Z" name="testGetResidueBoxColour_none" finished-at="2023-07-02T10:11:41Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetResidueBoxColour_none -->
        <test-method signature="testGetResidueBoxColour_userdef()[pri:0, instance:jalview.renderer.OverviewResColourFinderTest@5d332969]" started-at="2023-07-02T10:11:41Z" name="testGetResidueBoxColour_userdef" finished-at="2023-07-02T10:11:41Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetResidueBoxColour_userdef -->
        <test-method signature="testGetResidueBoxColour_zappo()[pri:0, instance:jalview.renderer.OverviewResColourFinderTest@5d332969]" started-at="2023-07-02T10:11:41Z" name="testGetResidueBoxColour_zappo" finished-at="2023-07-02T10:11:41Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetResidueBoxColour_zappo -->
      </class> <!-- jalview.renderer.OverviewResColourFinderTest -->
      <class name="jalview.io.FileIOTester">
        <test-method is-config="true" signature="setUpJvOptionPane()[pri:0, instance:jalview.io.FileIOTester@e362c57]" started-at="2023-07-02T10:12:21Z" name="setUpJvOptionPane" finished-at="2023-07-02T10:12:21Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpJvOptionPane -->
        <test-method is-config="true" signature="setUpBeforeClass()[pri:0, instance:jalview.io.FileIOTester@e362c57]" started-at="2023-07-02T10:12:21Z" name="setUpBeforeClass" finished-at="2023-07-02T10:12:21Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpBeforeClass -->
        <test-method signature="testGzipIo()[pri:0, instance:jalview.io.FileIOTester@e362c57]" started-at="2023-07-02T10:12:21Z" name="testGzipIo" finished-at="2023-07-02T10:12:21Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGzipIo -->
        <test-method signature="testGziplocalFileIO()[pri:0, instance:jalview.io.FileIOTester@e362c57]" started-at="2023-07-02T10:12:21Z" name="testGziplocalFileIO" finished-at="2023-07-02T10:12:21Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGziplocalFileIO -->
        <test-method signature="testIsGzipInputStream()[pri:0, instance:jalview.io.FileIOTester@e362c57]" started-at="2023-07-02T10:12:21Z" name="testIsGzipInputStream" finished-at="2023-07-02T10:12:21Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testIsGzipInputStream -->
        <test-method signature="testNonGzipURLIO()[pri:0, instance:jalview.io.FileIOTester@e362c57]" started-at="2023-07-02T10:12:21Z" name="testNonGzipURLIO" finished-at="2023-07-02T10:12:21Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testNonGzipURLIO -->
        <test-method signature="testStarsInFasta2()[pri:0, instance:jalview.io.FileIOTester@e362c57]" started-at="2023-07-02T10:12:21Z" name="testStarsInFasta2" finished-at="2023-07-02T10:12:21Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testStarsInFasta2 -->
        <test-method signature="testStarsInFasta1()[pri:0, instance:jalview.io.FileIOTester@e362c57]" started-at="2023-07-02T10:12:21Z" name="testStarsInFasta1" finished-at="2023-07-02T10:12:21Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testStarsInFasta1 -->
        <test-method signature="testNonGziplocalFileIO()[pri:0, instance:jalview.io.FileIOTester@e362c57]" started-at="2023-07-02T10:12:21Z" name="testNonGziplocalFileIO" finished-at="2023-07-02T10:12:21Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testNonGziplocalFileIO -->
        <test-method is-config="true" signature="tearDownAfterClass()[pri:0, instance:jalview.io.FileIOTester@e362c57]" started-at="2023-07-02T10:12:21Z" name="tearDownAfterClass" finished-at="2023-07-02T10:12:21Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownAfterClass -->
      </class> <!-- jalview.io.FileIOTester -->
      <class name="jalview.structure.AtomSpecModelTest">
        <test-method signature="testGetRanges()[pri:0, instance:jalview.structure.AtomSpecModelTest@9257031]" started-at="2023-07-02T10:12:21Z" name="testGetRanges" finished-at="2023-07-02T10:12:21Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetRanges -->
      </class> <!-- jalview.structure.AtomSpecModelTest -->
      <class name="jalview.util.CaseInsensitiveStringTest">
        <test-method is-config="true" signature="setUpJvOptionPane()[pri:0, instance:jalview.util.CaseInsensitiveStringTest@4fdf8f12]" started-at="2023-07-02T10:12:07Z" name="setUpJvOptionPane" finished-at="2023-07-02T10:12:07Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpJvOptionPane -->
        <test-method signature="testHashcode()[pri:0, instance:jalview.util.CaseInsensitiveStringTest@4fdf8f12]" started-at="2023-07-02T10:12:07Z" name="testHashcode" finished-at="2023-07-02T10:12:07Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testHashcode -->
        <test-method signature="testEquals()[pri:0, instance:jalview.util.CaseInsensitiveStringTest@4fdf8f12]" started-at="2023-07-02T10:12:07Z" name="testEquals" finished-at="2023-07-02T10:12:07Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testEquals -->
      </class> <!-- jalview.util.CaseInsensitiveStringTest -->
      <class name="jalview.datamodel.SequenceGroupTest">
        <test-method signature="testAddSequence()[pri:0, instance:jalview.datamodel.SequenceGroupTest@3a45c42a]" started-at="2023-07-02T10:12:07Z" name="testAddSequence" finished-at="2023-07-02T10:12:07Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAddSequence -->
        <test-method signature="testConstructor_list()[pri:0, instance:jalview.datamodel.SequenceGroupTest@3a45c42a]" started-at="2023-07-02T10:12:07Z" name="testConstructor_list" finished-at="2023-07-02T10:12:07Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testConstructor_list -->
        <test-method signature="testAddOrRemove()[pri:0, instance:jalview.datamodel.SequenceGroupTest@3a45c42a]" started-at="2023-07-02T10:12:07Z" name="testAddOrRemove" finished-at="2023-07-02T10:12:07Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAddOrRemove -->
        <test-method signature="testCopyConstructor()[pri:0, instance:jalview.datamodel.SequenceGroupTest@3a45c42a]" started-at="2023-07-02T10:12:07Z" name="testCopyConstructor" finished-at="2023-07-02T10:12:07Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCopyConstructor -->
        <test-method signature="testGetColourScheme()[pri:0, instance:jalview.datamodel.SequenceGroupTest@3a45c42a]" started-at="2023-07-02T10:12:07Z" name="testGetColourScheme" finished-at="2023-07-02T10:12:07Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetColourScheme -->
        <test-method signature="testContains()[pri:0, instance:jalview.datamodel.SequenceGroupTest@3a45c42a]" started-at="2023-07-02T10:12:07Z" name="testContains" finished-at="2023-07-02T10:12:07Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testContains -->
        <test-method signature="testSetContext()[pri:0, instance:jalview.datamodel.SequenceGroupTest@3a45c42a]" started-at="2023-07-02T10:12:07Z" name="testSetContext" finished-at="2023-07-02T10:12:07Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSetContext -->
      </class> <!-- jalview.datamodel.SequenceGroupTest -->
      <class name="jalview.io.gff.GffHelperBaseTest">
        <test-method signature="testParseAttributeMap()[pri:0, instance:jalview.io.gff.GffHelperBaseTest@1a1d3c1a]" started-at="2023-07-02T10:12:07Z" name="testParseAttributeMap" finished-at="2023-07-02T10:12:07Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testParseAttributeMap -->
        <test-method is-config="true" signature="setUpJvOptionPane()[pri:0, instance:jalview.io.gff.GffHelperBaseTest@1a1d3c1a]" started-at="2023-07-02T10:12:07Z" name="setUpJvOptionPane" finished-at="2023-07-02T10:12:07Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpJvOptionPane -->
        <test-method signature="testParseNameValuePairs()[pri:0, instance:jalview.io.gff.GffHelperBaseTest@1a1d3c1a]" started-at="2023-07-02T10:12:07Z" name="testParseNameValuePairs" finished-at="2023-07-02T10:12:07Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testParseNameValuePairs -->
        <test-method signature="testTrimMapping()[pri:0, instance:jalview.io.gff.GffHelperBaseTest@1a1d3c1a]" started-at="2023-07-02T10:12:07Z" name="testTrimMapping" finished-at="2023-07-02T10:12:07Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testTrimMapping -->
      </class> <!-- jalview.io.gff.GffHelperBaseTest -->
      <class name="jalview.datamodel.SequenceFeatureTest">
        <test-method is-config="true" signature="setUpJvOptionPane()[pri:0, instance:jalview.datamodel.SequenceFeatureTest@5af5def9]" started-at="2023-07-02T10:12:07Z" name="setUpJvOptionPane" finished-at="2023-07-02T10:12:07Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpJvOptionPane -->
        <test-method signature="testEqualsAndHashCode()[pri:0, instance:jalview.datamodel.SequenceFeatureTest@5af5def9]" started-at="2023-07-02T10:12:07Z" name="testEqualsAndHashCode" finished-at="2023-07-02T10:12:07Z" duration-ms="6" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testEqualsAndHashCode -->
        <test-method signature="testCopyConstructors()[pri:0, instance:jalview.datamodel.SequenceFeatureTest@5af5def9]" started-at="2023-07-02T10:12:07Z" name="testCopyConstructors" finished-at="2023-07-02T10:12:07Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCopyConstructors -->
        <test-method signature="testGetDetailsReport()[pri:0, instance:jalview.datamodel.SequenceFeatureTest@5af5def9]" started-at="2023-07-02T10:12:07Z" name="testGetDetailsReport" finished-at="2023-07-02T10:12:07Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetDetailsReport -->
        <test-method signature="testGetDetailsReport_virtualFeature()[pri:0, instance:jalview.datamodel.SequenceFeatureTest@5af5def9]" started-at="2023-07-02T10:12:07Z" name="testGetDetailsReport_virtualFeature" finished-at="2023-07-02T10:12:07Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetDetailsReport_virtualFeature -->
        <test-method signature="testGetValue()[pri:0, instance:jalview.datamodel.SequenceFeatureTest@5af5def9]" started-at="2023-07-02T10:12:07Z" name="testGetValue" finished-at="2023-07-02T10:12:07Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetValue -->
        <test-method signature="testIsContactFeature()[pri:0, instance:jalview.datamodel.SequenceFeatureTest@5af5def9]" started-at="2023-07-02T10:12:07Z" name="testIsContactFeature" finished-at="2023-07-02T10:12:07Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testIsContactFeature -->
        <test-method signature="testGetStrand()[pri:0, instance:jalview.datamodel.SequenceFeatureTest@5af5def9]" started-at="2023-07-02T10:12:07Z" name="testGetStrand" finished-at="2023-07-02T10:12:07Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetStrand -->
      </class> <!-- jalview.datamodel.SequenceFeatureTest -->
      <class name="jalview.util.StringUtilsTest">
        <test-method is-config="true" signature="setUpJvOptionPane()[pri:0, instance:jalview.util.StringUtilsTest@632aa1a3]" started-at="2023-07-02T10:13:43Z" name="setUpJvOptionPane" finished-at="2023-07-02T10:13:43Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpJvOptionPane -->
        <test-method signature="testDeleteChars()[pri:0, instance:jalview.util.StringUtilsTest@632aa1a3]" started-at="2023-07-02T10:13:43Z" name="testDeleteChars" finished-at="2023-07-02T10:13:43Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testDeleteChars -->
        <test-method signature="testArrayToSeparatorList()[pri:0, instance:jalview.util.StringUtilsTest@632aa1a3]" started-at="2023-07-02T10:13:43Z" name="testArrayToSeparatorList" finished-at="2023-07-02T10:13:43Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testArrayToSeparatorList -->
        <test-method signature="testCompareVersions()[pri:0, instance:jalview.util.StringUtilsTest@632aa1a3]" started-at="2023-07-02T10:13:43Z" name="testCompareVersions" finished-at="2023-07-02T10:13:43Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCompareVersions -->
        <test-method signature="testInsertCharAt()[pri:0, instance:jalview.util.StringUtilsTest@632aa1a3]" started-at="2023-07-02T10:13:43Z" name="testInsertCharAt" finished-at="2023-07-02T10:13:43Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testInsertCharAt -->
        <test-method signature="testGetLastToken()[pri:0, instance:jalview.util.StringUtilsTest@632aa1a3]" started-at="2023-07-02T10:13:43Z" name="testGetLastToken" finished-at="2023-07-02T10:13:43Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetLastToken -->
        <test-method signature="testParseInt()[pri:0, instance:jalview.util.StringUtilsTest@632aa1a3]" started-at="2023-07-02T10:13:43Z" name="testParseInt" finished-at="2023-07-02T10:13:43Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testParseInt -->
        <test-method signature="testListToDelimitedString()[pri:0, instance:jalview.util.StringUtilsTest@632aa1a3]" started-at="2023-07-02T10:13:43Z" name="testListToDelimitedString" finished-at="2023-07-02T10:13:43Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testListToDelimitedString -->
        <test-method signature="testSeparatorListToArray()[pri:0, instance:jalview.util.StringUtilsTest@632aa1a3]" started-at="2023-07-02T10:13:43Z" name="testSeparatorListToArray" finished-at="2023-07-02T10:13:43Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSeparatorListToArray -->
        <test-method signature="testStripHtmlTags()[pri:0, instance:jalview.util.StringUtilsTest@632aa1a3]" started-at="2023-07-02T10:13:43Z" name="testStripHtmlTags" finished-at="2023-07-02T10:13:43Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testStripHtmlTags -->
        <test-method signature="testToSentenceCase()[pri:0, instance:jalview.util.StringUtilsTest@632aa1a3]" started-at="2023-07-02T10:13:43Z" name="testToSentenceCase" finished-at="2023-07-02T10:13:43Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testToSentenceCase -->
        <test-method signature="testUrlDecode()[pri:0, instance:jalview.util.StringUtilsTest@632aa1a3]" started-at="2023-07-02T10:13:43Z" name="testUrlDecode" finished-at="2023-07-02T10:13:43Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testUrlDecode -->
        <test-method signature="testUrlEncode()[pri:0, instance:jalview.util.StringUtilsTest@632aa1a3]" started-at="2023-07-02T10:13:43Z" name="testUrlEncode" finished-at="2023-07-02T10:13:43Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testUrlEncode -->
      </class> <!-- jalview.util.StringUtilsTest -->
      <class name="jalview.gui.PairwiseAlignmentPanelTest">
        <test-method signature="testConstructor_noSelectionGroup()[pri:0, instance:jalview.gui.PairwiseAlignmentPanelTest@4201a617]" started-at="2023-07-02T10:11:45Z" name="testConstructor_noSelectionGroup" finished-at="2023-07-02T10:11:45Z" duration-ms="50" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testConstructor_noSelectionGroup -->
        <test-method signature="testConstructor_withSelectionGroup()[pri:0, instance:jalview.gui.PairwiseAlignmentPanelTest@4201a617]" started-at="2023-07-02T10:11:45Z" name="testConstructor_withSelectionGroup" finished-at="2023-07-02T10:11:45Z" duration-ms="36" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testConstructor_withSelectionGroup -->
      </class> <!-- jalview.gui.PairwiseAlignmentPanelTest -->
      <class name="jalview.gui.CalculationChooserTest">
        <test-method is-config="true" signature="setUp()[pri:0, instance:jalview.gui.CalculationChooserTest@51abf713]" started-at="2023-07-02T10:12:07Z" name="setUp" finished-at="2023-07-02T10:12:07Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="testGetApplicableScoreModels()[pri:0, instance:jalview.gui.CalculationChooserTest@51abf713]" started-at="2023-07-02T10:12:07Z" name="testGetApplicableScoreModels" finished-at="2023-07-02T10:12:07Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetApplicableScoreModels -->
      </class> <!-- jalview.gui.CalculationChooserTest -->
      <class name="jalview.schemes.ClustalxColourSchemeTest">
        <test-method signature="testFindColour()[pri:0, instance:jalview.schemes.ClustalxColourSchemeTest@49bf29c6]" started-at="2023-07-02T10:12:00Z" name="testFindColour" finished-at="2023-07-02T10:12:00Z" duration-ms="23" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFindColour -->
        <test-method signature="testFindColour_ignoreGaps()[pri:0, instance:jalview.schemes.ClustalxColourSchemeTest@49bf29c6]" started-at="2023-07-02T10:12:00Z" name="testFindColour_ignoreGaps" finished-at="2023-07-02T10:12:00Z" duration-ms="24" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFindColour_ignoreGaps -->
      </class> <!-- jalview.schemes.ClustalxColourSchemeTest -->
      <class name="mc_view.ResidueTest">
        <test-method is-config="true" signature="setUpJvOptionPane()[pri:0, instance:mc_view.ResidueTest@74518890]" started-at="2023-07-02T10:11:53Z" name="setUpJvOptionPane" finished-at="2023-07-02T10:11:53Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpJvOptionPane -->
        <test-method signature="testFindAtom()[pri:0, instance:mc_view.ResidueTest@74518890]" started-at="2023-07-02T10:11:53Z" name="testFindAtom" finished-at="2023-07-02T10:11:53Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFindAtom -->
      </class> <!-- mc_view.ResidueTest -->
      <class name="jalview.util.UrlLinkTest">
        <test-method is-config="true" signature="setUpJvOptionPane()[pri:0, instance:jalview.util.UrlLinkTest@20765ed5]" started-at="2023-07-02T10:13:43Z" name="setUpJvOptionPane" finished-at="2023-07-02T10:13:43Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpJvOptionPane -->
        <test-method signature="testCreateLinksForNonDynamic()[pri:0, instance:jalview.util.UrlLinkTest@20765ed5]" started-at="2023-07-02T10:13:43Z" name="testCreateLinksForNonDynamic" finished-at="2023-07-02T10:13:43Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCreateLinksForNonDynamic -->
        <test-method signature="testCreateLinksFromNullSequence()[pri:0, instance:jalview.util.UrlLinkTest@20765ed5]" started-at="2023-07-02T10:13:43Z" name="testCreateLinksFromNullSequence" finished-at="2023-07-02T10:13:43Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCreateLinksFromNullSequence -->
        <test-method signature="testCreateLinksFromSequence()[pri:0, instance:jalview.util.UrlLinkTest@20765ed5]" started-at="2023-07-02T10:13:43Z" name="testCreateLinksFromSequence" finished-at="2023-07-02T10:13:43Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCreateLinksFromSequence -->
        <test-method signature="testMakeUrlNoRegex()[pri:0, instance:jalview.util.UrlLinkTest@20765ed5]" started-at="2023-07-02T10:13:43Z" name="testMakeUrlNoRegex" finished-at="2023-07-02T10:13:43Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMakeUrlNoRegex -->
        <test-method signature="testLinksWithTargets()[pri:0, instance:jalview.util.UrlLinkTest@20765ed5]" started-at="2023-07-02T10:13:43Z" name="testLinksWithTargets" finished-at="2023-07-02T10:13:43Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testLinksWithTargets -->
        <test-method signature="testLinkComparator()[pri:0, instance:jalview.util.UrlLinkTest@20765ed5]" started-at="2023-07-02T10:13:43Z" name="testLinkComparator" finished-at="2023-07-02T10:13:43Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testLinkComparator -->
        <test-method signature="testMakeUrlWithRegex()[pri:0, instance:jalview.util.UrlLinkTest@20765ed5]" started-at="2023-07-02T10:13:43Z" name="testMakeUrlWithRegex" finished-at="2023-07-02T10:13:43Z" duration-ms="10" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMakeUrlWithRegex -->
        <test-method signature="testUrlLinkCreationNoRegex()[pri:0, instance:jalview.util.UrlLinkTest@20765ed5]" started-at="2023-07-02T10:13:43Z" name="testUrlLinkCreationNoRegex" finished-at="2023-07-02T10:13:43Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testUrlLinkCreationNoRegex -->
        <test-method signature="testUrlLinkCreationWithRegex()[pri:0, instance:jalview.util.UrlLinkTest@20765ed5]" started-at="2023-07-02T10:13:43Z" name="testUrlLinkCreationWithRegex" finished-at="2023-07-02T10:13:43Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testUrlLinkCreationWithRegex -->
      </class> <!-- jalview.util.UrlLinkTest -->
      <class name="jalview.datamodel.features.FeatureMatcherTest">
        <test-method signature="testFromString()[pri:0, instance:jalview.datamodel.features.FeatureMatcherTest@32c0915e]" started-at="2023-07-02T10:12:21Z" name="testFromString" finished-at="2023-07-02T10:12:21Z" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFromString -->
        <test-method signature="testIsByAttribute()[pri:0, instance:jalview.datamodel.features.FeatureMatcherTest@32c0915e]" started-at="2023-07-02T10:12:21Z" name="testIsByAttribute" finished-at="2023-07-02T10:12:21Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testIsByAttribute -->
        <test-method signature="testGetMatcher()[pri:0, instance:jalview.datamodel.features.FeatureMatcherTest@32c0915e]" started-at="2023-07-02T10:12:21Z" name="testGetMatcher" finished-at="2023-07-02T10:12:21Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetMatcher -->
        <test-method signature="testGetAttribute()[pri:0, instance:jalview.datamodel.features.FeatureMatcherTest@32c0915e]" started-at="2023-07-02T10:12:21Z" name="testGetAttribute" finished-at="2023-07-02T10:12:21Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetAttribute -->
        <test-method signature="testMatches_byAttribute()[pri:0, instance:jalview.datamodel.features.FeatureMatcherTest@32c0915e]" started-at="2023-07-02T10:12:21Z" name="testMatches_byAttribute" finished-at="2023-07-02T10:12:21Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMatches_byAttribute -->
        <test-method signature="testMatches_byLabel()[pri:0, instance:jalview.datamodel.features.FeatureMatcherTest@32c0915e]" started-at="2023-07-02T10:12:21Z" name="testMatches_byLabel" finished-at="2023-07-02T10:12:21Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMatches_byLabel -->
        <test-method signature="testIsByScore()[pri:0, instance:jalview.datamodel.features.FeatureMatcherTest@32c0915e]" started-at="2023-07-02T10:12:21Z" name="testIsByScore" finished-at="2023-07-02T10:12:21Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testIsByScore -->
        <test-method signature="testIsByLabel()[pri:0, instance:jalview.datamodel.features.FeatureMatcherTest@32c0915e]" started-at="2023-07-02T10:12:21Z" name="testIsByLabel" finished-at="2023-07-02T10:12:21Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testIsByLabel -->
        <test-method signature="testToStableString()[pri:0, instance:jalview.datamodel.features.FeatureMatcherTest@32c0915e]" started-at="2023-07-02T10:12:21Z" name="testToStableString" finished-at="2023-07-02T10:12:21Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testToStableString -->
        <test-method signature="testToString()[pri:0, instance:jalview.datamodel.features.FeatureMatcherTest@32c0915e]" started-at="2023-07-02T10:12:21Z" name="testToString" finished-at="2023-07-02T10:12:21Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testToString -->
        <test-method signature="testMatches_byScore()[pri:0, instance:jalview.datamodel.features.FeatureMatcherTest@32c0915e]" started-at="2023-07-02T10:12:21Z" name="testMatches_byScore" finished-at="2023-07-02T10:12:21Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMatches_byScore -->
      </class> <!-- jalview.datamodel.features.FeatureMatcherTest -->
      <class name="jalview.analysis.SequenceIdMatcherTest">
        <test-method is-config="true" signature="setUpJvOptionPane()[pri:0, instance:jalview.analysis.SequenceIdMatcherTest@7577b641]" started-at="2023-07-02T10:12:10Z" name="setUpJvOptionPane" finished-at="2023-07-02T10:12:10Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpJvOptionPane -->
        <test-method signature="test_seqIdNameEquals()[pri:0, instance:jalview.analysis.SequenceIdMatcherTest@7577b641]" started-at="2023-07-02T10:12:10Z" name="test_seqIdNameEquals" finished-at="2023-07-02T10:12:10Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_seqIdNameEquals -->
      </class> <!-- jalview.analysis.SequenceIdMatcherTest -->
      <class name="mc_view.PDBChainTest">
        <test-method signature="testGetNewlineString()[pri:0, instance:mc_view.PDBChainTest@3c49fab6]" started-at="2023-07-02T10:11:42Z" name="testGetNewlineString" finished-at="2023-07-02T10:11:42Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetNewlineString -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:mc_view.PDBChainTest@3c49fab6]" started-at="2023-07-02T10:11:42Z" name="setUp" finished-at="2023-07-02T10:11:42Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="testGetChargeColour()[pri:0, instance:mc_view.PDBChainTest@3c49fab6]" started-at="2023-07-02T10:11:42Z" name="testGetChargeColour" finished-at="2023-07-02T10:11:42Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetChargeColour -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:mc_view.PDBChainTest@3c49fab6]" started-at="2023-07-02T10:11:42Z" name="setUp" finished-at="2023-07-02T10:11:42Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="setUpJvOptionPane()[pri:0, instance:mc_view.PDBChainTest@3c49fab6]" started-at="2023-07-02T10:11:42Z" name="setUpJvOptionPane" finished-at="2023-07-02T10:11:42Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpJvOptionPane -->
        <test-method signature="testMakeBond()[pri:0, instance:mc_view.PDBChainTest@3c49fab6]" started-at="2023-07-02T10:11:42Z" name="testMakeBond" finished-at="2023-07-02T10:11:42Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMakeBond -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:mc_view.PDBChainTest@3c49fab6]" started-at="2023-07-02T10:11:42Z" name="setUp" finished-at="2023-07-02T10:11:42Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:mc_view.PDBChainTest@3c49fab6]" started-at="2023-07-02T10:11:42Z" name="setUp" finished-at="2023-07-02T10:11:42Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="testMakeCaBondList_nucleotide()[pri:0, instance:mc_view.PDBChainTest@3c49fab6]" started-at="2023-07-02T10:11:42Z" name="testMakeCaBondList_nucleotide" finished-at="2023-07-02T10:11:42Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMakeCaBondList_nucleotide -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:mc_view.PDBChainTest@3c49fab6]" started-at="2023-07-02T10:11:42Z" name="setUp" finished-at="2023-07-02T10:11:42Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="testMakeCaBondList()[pri:0, instance:mc_view.PDBChainTest@3c49fab6]" started-at="2023-07-02T10:11:42Z" name="testMakeCaBondList" finished-at="2023-07-02T10:11:42Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMakeCaBondList -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:mc_view.PDBChainTest@3c49fab6]" started-at="2023-07-02T10:11:42Z" name="setUp" finished-at="2023-07-02T10:11:42Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="testMakeExactMapping()[pri:0, instance:mc_view.PDBChainTest@3c49fab6]" started-at="2023-07-02T10:11:42Z" name="testMakeExactMapping" finished-at="2023-07-02T10:11:42Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMakeExactMapping -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:mc_view.PDBChainTest@3c49fab6]" started-at="2023-07-02T10:11:42Z" name="setUp" finished-at="2023-07-02T10:11:42Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="testMakeResidueList_noAnnotation()[pri:0, instance:mc_view.PDBChainTest@3c49fab6]" started-at="2023-07-02T10:11:42Z" name="testMakeResidueList_noAnnotation" finished-at="2023-07-02T10:11:42Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMakeResidueList_noAnnotation -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:mc_view.PDBChainTest@3c49fab6]" started-at="2023-07-02T10:11:42Z" name="setUp" finished-at="2023-07-02T10:11:42Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="testMakeResidueList_withTempFactor()[pri:0, instance:mc_view.PDBChainTest@3c49fab6]" started-at="2023-07-02T10:11:42Z" name="testMakeResidueList_withTempFactor" finished-at="2023-07-02T10:11:42Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMakeResidueList_withTempFactor -->
        <test-method signature="testPrint()[pri:0, instance:mc_view.PDBChainTest@3c49fab6]" started-at="2023-07-02T10:11:42Z" name="testPrint" finished-at="2023-07-02T10:11:42Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testPrint -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:mc_view.PDBChainTest@3c49fab6]" started-at="2023-07-02T10:11:42Z" name="setUp" finished-at="2023-07-02T10:11:42Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:mc_view.PDBChainTest@3c49fab6]" started-at="2023-07-02T10:11:42Z" name="setUp" finished-at="2023-07-02T10:11:42Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="testSetChainColours_colour()[pri:0, instance:mc_view.PDBChainTest@3c49fab6]" started-at="2023-07-02T10:11:42Z" name="testSetChainColours_colour" finished-at="2023-07-02T10:11:42Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSetChainColours_colour -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:mc_view.PDBChainTest@3c49fab6]" started-at="2023-07-02T10:11:42Z" name="setUp" finished-at="2023-07-02T10:11:42Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:mc_view.PDBChainTest@3c49fab6]" started-at="2023-07-02T10:11:42Z" name="setUp" finished-at="2023-07-02T10:11:42Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="testSetChargeColours()[pri:0, instance:mc_view.PDBChainTest@3c49fab6]" started-at="2023-07-02T10:11:42Z" name="testSetChargeColours" finished-at="2023-07-02T10:11:42Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSetChargeColours -->
        <test-method signature="testSetChainColours_colourScheme()[pri:0, instance:mc_view.PDBChainTest@3c49fab6]" started-at="2023-07-02T10:11:42Z" name="testSetChainColours_colourScheme" finished-at="2023-07-02T10:11:42Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSetChainColours_colourScheme -->
      </class> <!-- mc_view.PDBChainTest -->
      <class name="jalview.analysis.scoremodels.ScoreMatrixTest">
        <test-method signature="testBlosum62_values()[pri:0, instance:jalview.analysis.scoremodels.ScoreMatrixTest@28a2a3e7]" started-at="2023-07-02T10:12:20Z" name="testBlosum62_values" finished-at="2023-07-02T10:12:20Z" duration-ms="6" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testBlosum62_values -->
        <test-method signature="testBuildSymbolIndex()[pri:0, instance:jalview.analysis.scoremodels.ScoreMatrixTest@28a2a3e7]" started-at="2023-07-02T10:12:20Z" name="testBuildSymbolIndex" finished-at="2023-07-02T10:12:20Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testBuildSymbolIndex -->
        <test-method signature="testComputePairwiseScores()[pri:0, instance:jalview.analysis.scoremodels.ScoreMatrixTest@28a2a3e7]" started-at="2023-07-02T10:12:20Z" name="testComputePairwiseScores" finished-at="2023-07-02T10:12:20Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testComputePairwiseScores -->
        <test-method signature="testBuildSymbolIndex_nonAscii()[pri:0, instance:jalview.analysis.scoremodels.ScoreMatrixTest@28a2a3e7]" started-at="2023-07-02T10:12:20Z" name="testBuildSymbolIndex_nonAscii" finished-at="2023-07-02T10:12:20Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testBuildSymbolIndex_nonAscii -->
        <test-method signature="testConstructor_matrixTooSmall()[pri:0, instance:jalview.analysis.scoremodels.ScoreMatrixTest@28a2a3e7]" started-at="2023-07-02T10:12:20Z" name="testConstructor_matrixTooSmall" finished-at="2023-07-02T10:12:20Z" duration-ms="0" status="PASS">
          <exception class="java.lang.IllegalArgumentException">
            <message>
              <![CDATA[score matrix size must match alphabet size]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IllegalArgumentException: score matrix size must match alphabet size
	at jalview.analysis.scoremodels.ScoreMatrix.<init>(ScoreMatrix.java:140)
	at jalview.analysis.scoremodels.ScoreMatrix.<init>(ScoreMatrix.java:118)
	at jalview.analysis.scoremodels.ScoreMatrixTest.testConstructor_matrixTooSmall(ScoreMatrixTest.java:84)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:648)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:834)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1142)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:124)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:771)
	at org.testng.TestRunner.run(TestRunner.java:621)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:357)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:352)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:310)
	at org.testng.SuiteRunner.run(SuiteRunner.java:259)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1176)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1101)
	at org.testng.TestNG.run(TestNG.java:1009)
	at org.gradle.api.internal.tasks.testing.testng.TestNGTestClassProcessor.runTests(TestNGTestClassProcessor.java:145)
	at org.gradle.api.internal.tasks.testing.testng.TestNGTestClassProcessor.stop(TestNGTestClassProcessor.java:92)
	at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.stop(SuiteTestClassProcessor.java:62)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:36)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24)
	at org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:33)
	at org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:94)
	at com.sun.proxy.$Proxy2.stop(Unknown Source)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker$3.run(TestWorker.java:193)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.executeAndMaintainThreadName(TestWorker.java:129)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.execute(TestWorker.java:100)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.execute(TestWorker.java:60)
	at org.gradle.process.internal.worker.child.ActionExecutionWorker.execute(ActionExecutionWorker.java:56)
	at org.gradle.process.internal.worker.child.SystemApplicationClassLoaderWorker.call(SystemApplicationClassLoaderWorker.java:113)
	at org.gradle.process.internal.worker.child.SystemApplicationClassLoaderWorker.call(SystemApplicationClassLoaderWorker.java:65)
	at worker.org.gradle.process.internal.worker.GradleWorkerMain.run(GradleWorkerMain.java:69)
	at worker.org.gradle.process.internal.worker.GradleWorkerMain.main(GradleWorkerMain.java:74)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalArgumentException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testConstructor_matrixTooSmall -->
        <test-method signature="testConstructor_matrixTooBig()[pri:0, instance:jalview.analysis.scoremodels.ScoreMatrixTest@28a2a3e7]" started-at="2023-07-02T10:12:20Z" name="testConstructor_matrixTooBig" finished-at="2023-07-02T10:12:20Z" duration-ms="0" status="PASS">
          <exception class="java.lang.IllegalArgumentException">
            <message>
              <![CDATA[score matrix size must match alphabet size]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IllegalArgumentException: score matrix size must match alphabet size
	at jalview.analysis.scoremodels.ScoreMatrix.<init>(ScoreMatrix.java:140)
	at jalview.analysis.scoremodels.ScoreMatrix.<init>(ScoreMatrix.java:118)
	at jalview.analysis.scoremodels.ScoreMatrixTest.testConstructor_matrixTooBig(ScoreMatrixTest.java:96)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:648)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:834)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1142)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:124)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:771)
	at org.testng.TestRunner.run(TestRunner.java:621)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:357)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:352)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:310)
	at org.testng.SuiteRunner.run(SuiteRunner.java:259)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1176)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1101)
	at org.testng.TestNG.run(TestNG.java:1009)
	at org.gradle.api.internal.tasks.testing.testng.TestNGTestClassProcessor.runTests(TestNGTestClassProcessor.java:145)
	at org.gradle.api.internal.tasks.testing.testng.TestNGTestClassProcessor.stop(TestNGTestClassProcessor.java:92)
	at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.stop(SuiteTestClassProcessor.java:62)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:36)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24)
	at org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:33)
	at org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:94)
	at com.sun.proxy.$Proxy2.stop(Unknown Source)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker$3.run(TestWorker.java:193)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.executeAndMaintainThreadName(TestWorker.java:129)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.execute(TestWorker.java:100)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.execute(TestWorker.java:60)
	at org.gradle.process.internal.worker.child.ActionExecutionWorker.execute(ActionExecutionWorker.java:56)
	at org.gradle.process.internal.worker.child.SystemApplicationClassLoaderWorker.call(SystemApplicationClassLoaderWorker.java:113)
	at org.gradle.process.internal.worker.child.SystemApplicationClassLoaderWorker.call(SystemApplicationClassLoaderWorker.java:65)
	at worker.org.gradle.process.internal.worker.GradleWorkerMain.run(GradleWorkerMain.java:69)
	at worker.org.gradle.process.internal.worker.GradleWorkerMain.main(GradleWorkerMain.java:74)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalArgumentException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testConstructor_matrixTooBig -->
        <test-method signature="testConstructor()[pri:0, instance:jalview.analysis.scoremodels.ScoreMatrixTest@28a2a3e7]" started-at="2023-07-02T10:12:20Z" name="testConstructor" finished-at="2023-07-02T10:12:20Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testConstructor -->
        <test-method signature="testConstructor_gapDash()[pri:0, instance:jalview.analysis.scoremodels.ScoreMatrixTest@28a2a3e7]" started-at="2023-07-02T10:12:20Z" name="testConstructor_gapDash" finished-at="2023-07-02T10:12:20Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testConstructor_gapDash -->
        <test-method signature="testConstructor_matrixNotSquare()[pri:0, instance:jalview.analysis.scoremodels.ScoreMatrixTest@28a2a3e7]" started-at="2023-07-02T10:12:20Z" name="testConstructor_matrixNotSquare" finished-at="2023-07-02T10:12:20Z" duration-ms="0" status="PASS">
          <exception class="java.lang.IllegalArgumentException">
            <message>
              <![CDATA[score matrix size must be square]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IllegalArgumentException: score matrix size must be square
	at jalview.analysis.scoremodels.ScoreMatrix.<init>(ScoreMatrix.java:147)
	at jalview.analysis.scoremodels.ScoreMatrix.<init>(ScoreMatrix.java:118)
	at jalview.analysis.scoremodels.ScoreMatrixTest.testConstructor_matrixNotSquare(ScoreMatrixTest.java:108)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:648)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:834)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1142)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:124)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:771)
	at org.testng.TestRunner.run(TestRunner.java:621)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:357)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:352)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:310)
	at org.testng.SuiteRunner.run(SuiteRunner.java:259)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1176)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1101)
	at org.testng.TestNG.run(TestNG.java:1009)
	at org.gradle.api.internal.tasks.testing.testng.TestNGTestClassProcessor.runTests(TestNGTestClassProcessor.java:145)
	at org.gradle.api.internal.tasks.testing.testng.TestNGTestClassProcessor.stop(TestNGTestClassProcessor.java:92)
	at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.stop(SuiteTestClassProcessor.java:62)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:36)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24)
	at org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:33)
	at org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:94)
	at com.sun.proxy.$Proxy2.stop(Unknown Source)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker$3.run(TestWorker.java:193)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.executeAndMaintainThreadName(TestWorker.java:129)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.execute(TestWorker.java:100)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.execute(TestWorker.java:60)
	at org.gradle.process.internal.worker.child.ActionExecutionWorker.execute(ActionExecutionWorker.java:56)
	at org.gradle.process.internal.worker.child.SystemApplicationClassLoaderWorker.call(SystemApplicationClassLoaderWorker.java:113)
	at org.gradle.process.internal.worker.child.SystemApplicationClassLoaderWorker.call(SystemApplicationClassLoaderWorker.java:65)
	at worker.org.gradle.process.internal.worker.GradleWorkerMain.run(GradleWorkerMain.java:69)
	at worker.org.gradle.process.internal.worker.GradleWorkerMain.main(GradleWorkerMain.java:74)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalArgumentException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testConstructor_matrixNotSquare -->
        <test-method signature="testEqualsAndHashCode()[pri:0, instance:jalview.analysis.scoremodels.ScoreMatrixTest@28a2a3e7]" started-at="2023-07-02T10:12:20Z" name="testEqualsAndHashCode" finished-at="2023-07-02T10:12:20Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testEqualsAndHashCode -->
        <test-method signature="testGetMatrix()[pri:0, instance:jalview.analysis.scoremodels.ScoreMatrixTest@28a2a3e7]" started-at="2023-07-02T10:12:20Z" name="testGetMatrix" finished-at="2023-07-02T10:12:20Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetMatrix -->
        <test-method signature="testGetPairwiseScore()[pri:0, instance:jalview.analysis.scoremodels.ScoreMatrixTest@28a2a3e7]" started-at="2023-07-02T10:12:20Z" name="testGetPairwiseScore" finished-at="2023-07-02T10:12:20Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetPairwiseScore -->
        <test-method signature="testGetMatrixIndex()[pri:0, instance:jalview.analysis.scoremodels.ScoreMatrixTest@28a2a3e7]" started-at="2023-07-02T10:12:20Z" name="testGetMatrixIndex" finished-at="2023-07-02T10:12:20Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetMatrixIndex -->
        <test-method signature="testGetSize()[pri:0, instance:jalview.analysis.scoremodels.ScoreMatrixTest@28a2a3e7]" started-at="2023-07-02T10:12:20Z" name="testGetSize" finished-at="2023-07-02T10:12:20Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetSize -->
        <test-method signature="testIsSymmetric()[pri:0, instance:jalview.analysis.scoremodels.ScoreMatrixTest@28a2a3e7]" started-at="2023-07-02T10:12:20Z" name="testIsSymmetric" finished-at="2023-07-02T10:12:20Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testIsSymmetric -->
        <test-method signature="testGetMinimumScore()[pri:0, instance:jalview.analysis.scoremodels.ScoreMatrixTest@28a2a3e7]" started-at="2023-07-02T10:12:20Z" name="testGetMinimumScore" finished-at="2023-07-02T10:12:20Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetMinimumScore -->
        <test-method signature="testGetMaximumScore()[pri:0, instance:jalview.analysis.scoremodels.ScoreMatrixTest@28a2a3e7]" started-at="2023-07-02T10:12:20Z" name="testGetMaximumScore" finished-at="2023-07-02T10:12:20Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetMaximumScore -->
        <test-method signature="testOutputMatrix_roundTrip()[pri:0, instance:jalview.analysis.scoremodels.ScoreMatrixTest@28a2a3e7]" started-at="2023-07-02T10:12:20Z" name="testOutputMatrix_roundTrip" finished-at="2023-07-02T10:12:20Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testOutputMatrix_roundTrip -->
        <test-method signature="testOutputMatrix_html()[pri:0, instance:jalview.analysis.scoremodels.ScoreMatrixTest@28a2a3e7]" started-at="2023-07-02T10:12:20Z" name="testOutputMatrix_html" finished-at="2023-07-02T10:12:20Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testOutputMatrix_html -->
        <test-method signature="testSymmetric()[pri:0, instance:jalview.analysis.scoremodels.ScoreMatrixTest@28a2a3e7]" started-at="2023-07-02T10:12:20Z" name="testSymmetric" finished-at="2023-07-02T10:12:20Z" duration-ms="11" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSymmetric -->
        <test-method signature="testcomputeSimilarity_matchLongestSequence()[pri:0, instance:jalview.analysis.scoremodels.ScoreMatrixTest@28a2a3e7]" started-at="2023-07-02T10:12:20Z" name="testcomputeSimilarity_matchLongestSequence" finished-at="2023-07-02T10:12:20Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testcomputeSimilarity_matchLongestSequence -->
        <test-method signature="testcomputeSimilarity_matchShortestSequence()[pri:0, instance:jalview.analysis.scoremodels.ScoreMatrixTest@28a2a3e7]" started-at="2023-07-02T10:12:20Z" name="testcomputeSimilarity_matchShortestSequence" finished-at="2023-07-02T10:12:20Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testcomputeSimilarity_matchShortestSequence -->
      </class> <!-- jalview.analysis.scoremodels.ScoreMatrixTest -->
      <class name="jalview.datamodel.features.SequenceFeaturesTest">
        <test-method signature="testConstructor()[pri:0, instance:jalview.datamodel.features.SequenceFeaturesTest@70f43b45]" started-at="2023-07-02T10:13:35Z" name="testConstructor" finished-at="2023-07-02T10:13:35Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testConstructor -->
        <test-method signature="testFindFeatures()[pri:0, instance:jalview.datamodel.features.SequenceFeaturesTest@70f43b45]" started-at="2023-07-02T10:13:35Z" name="testFindFeatures" finished-at="2023-07-02T10:13:35Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFindFeatures -->
        <test-method signature="testDeleteAll()[pri:0, instance:jalview.datamodel.features.SequenceFeaturesTest@70f43b45]" started-at="2023-07-02T10:13:35Z" name="testDeleteAll" finished-at="2023-07-02T10:13:35Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testDeleteAll -->
        <test-method signature="testDelete()[pri:0, instance:jalview.datamodel.features.SequenceFeaturesTest@70f43b45]" started-at="2023-07-02T10:13:35Z" name="testDelete" finished-at="2023-07-02T10:13:35Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testDelete -->
        <test-method signature="testGetContactFeatures()[pri:0, instance:jalview.datamodel.features.SequenceFeaturesTest@70f43b45]" started-at="2023-07-02T10:13:35Z" name="testGetContactFeatures" finished-at="2023-07-02T10:13:35Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetContactFeatures -->
        <test-method signature="testGetAllFeatures()[pri:0, instance:jalview.datamodel.features.SequenceFeaturesTest@70f43b45]" started-at="2023-07-02T10:13:35Z" name="testGetAllFeatures" finished-at="2023-07-02T10:13:35Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetAllFeatures -->
        <test-method signature="testGetFeatureCount()[pri:0, instance:jalview.datamodel.features.SequenceFeaturesTest@70f43b45]" started-at="2023-07-02T10:13:35Z" name="testGetFeatureCount" finished-at="2023-07-02T10:13:35Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetFeatureCount -->
        <test-method signature="testGetFeatureTypesForGroups()[pri:0, instance:jalview.datamodel.features.SequenceFeaturesTest@70f43b45]" started-at="2023-07-02T10:13:35Z" name="testGetFeatureTypesForGroups" finished-at="2023-07-02T10:13:35Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetFeatureTypesForGroups -->
        <test-method signature="testGetFeatureTypes()[pri:0, instance:jalview.datamodel.features.SequenceFeaturesTest@70f43b45]" started-at="2023-07-02T10:13:35Z" name="testGetFeatureTypes" finished-at="2023-07-02T10:13:35Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetFeatureTypes -->
        <test-method signature="testGetFeatureTypes_byOntology()[pri:0, instance:jalview.datamodel.features.SequenceFeaturesTest@70f43b45]" started-at="2023-07-02T10:13:35Z" name="testGetFeatureTypes_byOntology" finished-at="2023-07-02T10:13:35Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetFeatureTypes_byOntology -->
        <test-method signature="testGetFeatureGroups()[pri:0, instance:jalview.datamodel.features.SequenceFeaturesTest@70f43b45]" started-at="2023-07-02T10:13:35Z" name="testGetFeatureGroups" finished-at="2023-07-02T10:13:35Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetFeatureGroups -->
        <test-method signature="testGetFeaturesByOntology()[pri:0, instance:jalview.datamodel.features.SequenceFeaturesTest@70f43b45]" started-at="2023-07-02T10:13:35Z" name="testGetFeaturesByOntology" finished-at="2023-07-02T10:13:35Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetFeaturesByOntology -->
        <test-method signature="testGetFeaturesForGroup()[pri:0, instance:jalview.datamodel.features.SequenceFeaturesTest@70f43b45]" started-at="2023-07-02T10:13:35Z" name="testGetFeaturesForGroup" finished-at="2023-07-02T10:13:35Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetFeaturesForGroup -->
        <test-method signature="testGetMinimumScore_getMaximumScore()[pri:0, instance:jalview.datamodel.features.SequenceFeaturesTest@70f43b45]" started-at="2023-07-02T10:13:35Z" name="testGetMinimumScore_getMaximumScore" finished-at="2023-07-02T10:13:35Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetMinimumScore_getMaximumScore -->
        <test-method signature="testGetNonPositionalFeatures()[pri:0, instance:jalview.datamodel.features.SequenceFeaturesTest@70f43b45]" started-at="2023-07-02T10:13:35Z" name="testGetNonPositionalFeatures" finished-at="2023-07-02T10:13:35Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetNonPositionalFeatures -->
        <test-method signature="testGetPositionalFeatures()[pri:0, instance:jalview.datamodel.features.SequenceFeaturesTest@70f43b45]" started-at="2023-07-02T10:13:35Z" name="testGetPositionalFeatures" finished-at="2023-07-02T10:13:35Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetPositionalFeatures -->
        <test-method signature="testHasFeatures()[pri:0, instance:jalview.datamodel.features.SequenceFeaturesTest@70f43b45]" started-at="2023-07-02T10:13:35Z" name="testHasFeatures" finished-at="2023-07-02T10:13:35Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testHasFeatures -->
        <test-method signature="testIsOntologyTerm()[pri:0, instance:jalview.datamodel.features.SequenceFeaturesTest@70f43b45]" started-at="2023-07-02T10:13:35Z" name="testIsOntologyTerm" finished-at="2023-07-02T10:13:35Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testIsOntologyTerm -->
        <test-method signature="testGetTotalFeatureLength()[pri:0, instance:jalview.datamodel.features.SequenceFeaturesTest@70f43b45]" started-at="2023-07-02T10:13:35Z" name="testGetTotalFeatureLength" finished-at="2023-07-02T10:13:35Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetTotalFeatureLength -->
        <test-method signature="testShiftFeatures()[pri:0, instance:jalview.datamodel.features.SequenceFeaturesTest@70f43b45]" started-at="2023-07-02T10:13:35Z" name="testShiftFeatures" finished-at="2023-07-02T10:13:35Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testShiftFeatures -->
        <test-method signature="testVarargsToTypes()[pri:0, instance:jalview.datamodel.features.SequenceFeaturesTest@70f43b45]" started-at="2023-07-02T10:13:35Z" name="testVarargsToTypes" finished-at="2023-07-02T10:13:35Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testVarargsToTypes -->
        <test-method signature="testSortFeatures()[pri:0, instance:jalview.datamodel.features.SequenceFeaturesTest@70f43b45]" started-at="2023-07-02T10:13:35Z" name="testSortFeatures" finished-at="2023-07-02T10:13:35Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSortFeatures -->
      </class> <!-- jalview.datamodel.features.SequenceFeaturesTest -->
      <class name="jalview.datamodel.SequenceDummyTest">
        <test-method signature="testBecome()[pri:0, instance:jalview.datamodel.SequenceDummyTest@57a4d5ee]" started-at="2023-07-02T10:12:07Z" name="testBecome" finished-at="2023-07-02T10:12:07Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testBecome -->
        <test-method is-config="true" signature="setUpJvOptionPane()[pri:0, instance:jalview.datamodel.SequenceDummyTest@57a4d5ee]" started-at="2023-07-02T10:12:07Z" name="setUpJvOptionPane" finished-at="2023-07-02T10:12:07Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpJvOptionPane -->
      </class> <!-- jalview.datamodel.SequenceDummyTest -->
      <class name="jalview.io.FormatAdapterTest">
        <test-method is-config="true" signature="setUpJvOptionPane()[pri:0, instance:jalview.io.FormatAdapterTest@79c4715d]" started-at="2023-07-02T10:11:38Z" name="setUpJvOptionPane" finished-at="2023-07-02T10:11:38Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpJvOptionPane -->
        <test-method signature="testRoundTrip(jalview.io.FileFormatI)[pri:0, instance:jalview.io.FormatAdapterTest@79c4715d]" started-at="2023-07-02T10:11:38Z" name="testRoundTrip" data-provider="formats" finished-at="2023-07-02T10:11:38Z" duration-ms="2" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Fasta]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRoundTrip -->
        <test-method signature="testRoundTrip(jalview.io.FileFormatI)[pri:0, instance:jalview.io.FormatAdapterTest@79c4715d]" started-at="2023-07-02T10:11:38Z" name="testRoundTrip" data-provider="formats" finished-at="2023-07-02T10:11:38Z" duration-ms="3" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Pfam]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRoundTrip -->
        <test-method signature="testRoundTrip(jalview.io.FileFormatI)[pri:0, instance:jalview.io.FormatAdapterTest@79c4715d]" started-at="2023-07-02T10:11:38Z" name="testRoundTrip" data-provider="formats" finished-at="2023-07-02T10:11:38Z" duration-ms="26" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Stockholm]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRoundTrip -->
        <test-method signature="testRoundTrip(jalview.io.FileFormatI)[pri:0, instance:jalview.io.FormatAdapterTest@79c4715d]" started-at="2023-07-02T10:11:38Z" name="testRoundTrip" data-provider="formats" finished-at="2023-07-02T10:11:38Z" duration-ms="3" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[PIR]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRoundTrip -->
        <test-method signature="testRoundTrip(jalview.io.FileFormatI)[pri:0, instance:jalview.io.FormatAdapterTest@79c4715d]" started-at="2023-07-02T10:11:38Z" name="testRoundTrip" data-provider="formats" finished-at="2023-07-02T10:11:38Z" duration-ms="5" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[BLC]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRoundTrip -->
        <test-method signature="testRoundTrip(jalview.io.FileFormatI)[pri:0, instance:jalview.io.FormatAdapterTest@79c4715d]" started-at="2023-07-02T10:11:38Z" name="testRoundTrip" data-provider="formats" finished-at="2023-07-02T10:11:38Z" duration-ms="2" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[AMSA]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRoundTrip -->
        <test-method signature="testRoundTrip(jalview.io.FileFormatI)[pri:0, instance:jalview.io.FormatAdapterTest@79c4715d]" started-at="2023-07-02T10:11:38Z" name="testRoundTrip" data-provider="formats" finished-at="2023-07-02T10:11:38Z" duration-ms="6" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Json]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRoundTrip -->
        <test-method signature="testRoundTrip(jalview.io.FileFormatI)[pri:0, instance:jalview.io.FormatAdapterTest@79c4715d]" started-at="2023-07-02T10:11:38Z" name="testRoundTrip" data-provider="formats" finished-at="2023-07-02T10:11:38Z" duration-ms="12" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Pileup]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRoundTrip -->
        <test-method signature="testRoundTrip(jalview.io.FileFormatI)[pri:0, instance:jalview.io.FormatAdapterTest@79c4715d]" started-at="2023-07-02T10:11:38Z" name="testRoundTrip" data-provider="formats" finished-at="2023-07-02T10:11:38Z" duration-ms="12" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[MSF]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRoundTrip -->
        <test-method signature="testRoundTrip(jalview.io.FileFormatI)[pri:0, instance:jalview.io.FormatAdapterTest@79c4715d]" started-at="2023-07-02T10:11:38Z" name="testRoundTrip" data-provider="formats" finished-at="2023-07-02T10:11:38Z" duration-ms="5" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Clustal]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRoundTrip -->
        <test-method signature="testRoundTrip(jalview.io.FileFormatI)[pri:0, instance:jalview.io.FormatAdapterTest@79c4715d]" started-at="2023-07-02T10:11:38Z" name="testRoundTrip" data-provider="formats" finished-at="2023-07-02T10:11:38Z" duration-ms="6" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Phylip]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRoundTrip -->
      </class> <!-- jalview.io.FormatAdapterTest -->
      <class name="jalview.gui.StructureViewerTest">
        <test-method is-config="true" signature="setUpJvOptionPane()[pri:0, instance:jalview.gui.StructureViewerTest@58cd06cb]" started-at="2023-07-02T10:12:02Z" name="setUpJvOptionPane" finished-at="2023-07-02T10:12:02Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpJvOptionPane -->
        <test-method signature="testGetSequencesForPdbs()[pri:0, instance:jalview.gui.StructureViewerTest@58cd06cb]" started-at="2023-07-02T10:12:02Z" name="testGetSequencesForPdbs" finished-at="2023-07-02T10:12:02Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetSequencesForPdbs -->
      </class> <!-- jalview.gui.StructureViewerTest -->
      <class name="jalview.ws.SequenceFetcherTest">
        <test-method is-config="true" signature="setUpJvOptionPane()[pri:0, instance:jalview.ws.SequenceFetcherTest@6105f8a3]" started-at="2023-07-02T10:11:41Z" name="setUpJvOptionPane" finished-at="2023-07-02T10:11:41Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpJvOptionPane -->
        <test-method signature="testNoDuplicatesInFetchDbRefs()[pri:0, instance:jalview.ws.SequenceFetcherTest@6105f8a3]" started-at="2023-07-02T10:11:41Z" name="testNoDuplicatesInFetchDbRefs" finished-at="2023-07-02T10:11:41Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testNoDuplicatesInFetchDbRefs -->
      </class> <!-- jalview.ws.SequenceFetcherTest -->
      <class name="jalview.io.BackupFilesTest">
        <test-method is-config="true" signature="setUpJvOptionPane()[pri:0, instance:jalview.io.BackupFilesTest@bae47a0]" started-at="2023-07-02T10:12:07Z" name="setUpJvOptionPane" finished-at="2023-07-02T10:12:07Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpJvOptionPane -->
        <test-method signature="backupsEnabledNoRollMaxTest()[pri:0, instance:jalview.io.BackupFilesTest@bae47a0]" started-at="2023-07-02T10:12:07Z" name="backupsEnabledNoRollMaxTest" finished-at="2023-07-02T10:12:07Z" duration-ms="48" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- backupsEnabledNoRollMaxTest -->
        <test-method signature="backupsEnabledReverseRollMaxTest()[pri:0, instance:jalview.io.BackupFilesTest@bae47a0]" started-at="2023-07-02T10:12:07Z" name="backupsEnabledReverseRollMaxTest" finished-at="2023-07-02T10:12:07Z" duration-ms="37" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- backupsEnabledReverseRollMaxTest -->
        <test-method signature="backupsEnabledRollMaxTest()[pri:0, instance:jalview.io.BackupFilesTest@bae47a0]" started-at="2023-07-02T10:12:07Z" name="backupsEnabledRollMaxTest" finished-at="2023-07-02T10:12:07Z" duration-ms="32" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- backupsEnabledRollMaxTest -->
        <test-method signature="backupsEnabledSingleFileBackupTest()[pri:0, instance:jalview.io.BackupFilesTest@bae47a0]" started-at="2023-07-02T10:12:07Z" name="backupsEnabledSingleFileBackupTest" finished-at="2023-07-02T10:12:07Z" duration-ms="15" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- backupsEnabledSingleFileBackupTest -->
        <test-method signature="noBackupsEnabledTest()[pri:0, instance:jalview.io.BackupFilesTest@bae47a0]" started-at="2023-07-02T10:12:07Z" name="noBackupsEnabledTest" finished-at="2023-07-02T10:12:07Z" duration-ms="11" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- noBackupsEnabledTest -->
        <test-method is-config="true" signature="cleanupTmpFiles()[pri:0, instance:jalview.io.BackupFilesTest@bae47a0]" started-at="2023-07-02T10:12:07Z" name="cleanupTmpFiles" finished-at="2023-07-02T10:12:07Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cleanupTmpFiles -->
      </class> <!-- jalview.io.BackupFilesTest -->
      <class name="jalview.schemes.ResidueColourSchemeTest">
        <test-method is-config="true" signature="setUpJvOptionPane()[pri:0, instance:jalview.schemes.ResidueColourSchemeTest@530a8454]" started-at="2023-07-02T10:12:10Z" name="setUpJvOptionPane" finished-at="2023-07-02T10:12:10Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpJvOptionPane -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:jalview.schemes.ResidueColourSchemeTest@530a8454]" started-at="2023-07-02T10:12:10Z" name="setUp" finished-at="2023-07-02T10:12:10Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="testGetName()[pri:0, instance:jalview.schemes.ResidueColourSchemeTest@530a8454]" started-at="2023-07-02T10:12:10Z" name="testGetName" finished-at="2023-07-02T10:12:10Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetName -->
        <test-method signature="testIsApplicableTo()[pri:0, instance:jalview.schemes.ResidueColourSchemeTest@530a8454]" started-at="2023-07-02T10:12:10Z" name="testIsApplicableTo" finished-at="2023-07-02T10:12:10Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testIsApplicableTo -->
        <test-method signature="testIsApplicableTo_dynamicColourScheme()[pri:0, instance:jalview.schemes.ResidueColourSchemeTest@530a8454]" started-at="2023-07-02T10:12:10Z" name="testIsApplicableTo_dynamicColourScheme" finished-at="2023-07-02T10:12:10Z" duration-ms="3" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testIsApplicableTo_dynamicColourScheme -->
      </class> <!-- jalview.schemes.ResidueColourSchemeTest -->
      <class name="jalview.urls.UrlProviderTest">
        <test-method is-config="true" signature="setup()[pri:0, instance:jalview.urls.UrlProviderTest@438bad7c]" started-at="2023-07-02T10:12:02Z" name="setup" finished-at="2023-07-02T10:12:02Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="testInitUrlProvider()[pri:0, instance:jalview.urls.UrlProviderTest@438bad7c]" started-at="2023-07-02T10:12:02Z" name="testInitUrlProvider" finished-at="2023-07-02T10:12:02Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testInitUrlProvider -->
        <test-method is-config="true" signature="setup()[pri:0, instance:jalview.urls.UrlProviderTest@438bad7c]" started-at="2023-07-02T10:12:02Z" name="setup" finished-at="2023-07-02T10:12:02Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method is-config="true" signature="setup()[pri:0, instance:jalview.urls.UrlProviderTest@438bad7c]" started-at="2023-07-02T10:12:02Z" name="setup" finished-at="2023-07-02T10:12:02Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="testSetDefaultUrlWrongly()[pri:0, instance:jalview.urls.UrlProviderTest@438bad7c]" started-at="2023-07-02T10:12:02Z" name="testSetDefaultUrlWrongly" finished-at="2023-07-02T10:12:02Z" duration-ms="1" status="PASS">
          <exception class="java.lang.IllegalArgumentException">
            <full-stacktrace>
              <![CDATA[java.lang.IllegalArgumentException
	at jalview.urls.UrlProvider.setPrimaryUrl(UrlProvider.java:105)
	at jalview.urls.UrlProviderTest.testSetDefaultUrlWrongly(UrlProviderTest.java:140)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:648)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:834)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1142)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:124)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:771)
	at org.testng.TestRunner.run(TestRunner.java:621)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:357)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:352)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:310)
	at org.testng.SuiteRunner.run(SuiteRunner.java:259)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1176)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1101)
	at org.testng.TestNG.run(TestNG.java:1009)
	at org.gradle.api.internal.tasks.testing.testng.TestNGTestClassProcessor.runTests(TestNGTestClassProcessor.java:145)
	at org.gradle.api.internal.tasks.testing.testng.TestNGTestClassProcessor.stop(TestNGTestClassProcessor.java:92)
	at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.stop(SuiteTestClassProcessor.java:62)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:36)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24)
	at org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:33)
	at org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:94)
	at com.sun.proxy.$Proxy2.stop(Unknown Source)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker$3.run(TestWorker.java:193)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.executeAndMaintainThreadName(TestWorker.java:129)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.execute(TestWorker.java:100)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.execute(TestWorker.java:60)
	at org.gradle.process.internal.worker.child.ActionExecutionWorker.execute(ActionExecutionWorker.java:56)
	at org.gradle.process.internal.worker.child.SystemApplicationClassLoaderWorker.call(SystemApplicationClassLoaderWorker.java:113)
	at org.gradle.process.internal.worker.child.SystemApplicationClassLoaderWorker.call(SystemApplicationClassLoaderWorker.java:65)
	at worker.org.gradle.process.internal.worker.GradleWorkerMain.run(GradleWorkerMain.java:69)
	at worker.org.gradle.process.internal.worker.GradleWorkerMain.main(GradleWorkerMain.java:74)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalArgumentException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSetDefaultUrlWrongly -->
        <test-method signature="testSetDefaultUrl()[pri:0, instance:jalview.urls.UrlProviderTest@438bad7c]" started-at="2023-07-02T10:12:02Z" name="testSetDefaultUrl" finished-at="2023-07-02T10:12:02Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSetDefaultUrl -->
      </class> <!-- jalview.urls.UrlProviderTest -->
      <class name="jalview.gui.AlignViewportTest">
        <test-method is-config="true" signature="setUpBeforeClass()[pri:0, instance:jalview.gui.AlignViewportTest@437e951d]" started-at="2023-07-02T10:11:56Z" name="setUpBeforeClass" finished-at="2023-07-02T10:11:56Z" duration-ms="65" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpBeforeClass -->
        <test-method is-config="true" signature="setUpJvOptionPane()[pri:0, instance:jalview.gui.AlignViewportTest@437e951d]" started-at="2023-07-02T10:11:56Z" name="setUpJvOptionPane" finished-at="2023-07-02T10:11:56Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpJvOptionPane -->
        <test-method signature="testDeregisterMapping_onCloseView()[pri:0, instance:jalview.gui.AlignViewportTest@437e951d]" started-at="2023-07-02T10:11:56Z" name="testDeregisterMapping_onCloseView" finished-at="2023-07-02T10:11:56Z" duration-ms="101" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testDeregisterMapping_onCloseView -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:jalview.gui.AlignViewportTest@437e951d]" started-at="2023-07-02T10:11:56Z" name="setUp" finished-at="2023-07-02T10:11:56Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:jalview.gui.AlignViewportTest@437e951d]" started-at="2023-07-02T10:11:56Z" name="setUp" finished-at="2023-07-02T10:11:56Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="testDeregisterMapping_withNoReference()[pri:0, instance:jalview.gui.AlignViewportTest@437e951d]" started-at="2023-07-02T10:11:56Z" name="testDeregisterMapping_withNoReference" finished-at="2023-07-02T10:11:56Z" duration-ms="49" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testDeregisterMapping_withNoReference -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:jalview.gui.AlignViewportTest@437e951d]" started-at="2023-07-02T10:11:56Z" name="setUp" finished-at="2023-07-02T10:11:56Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="testDeregisterMapping_withReference()[pri:0, instance:jalview.gui.AlignViewportTest@437e951d]" started-at="2023-07-02T10:11:56Z" name="testDeregisterMapping_withReference" finished-at="2023-07-02T10:11:56Z" duration-ms="94" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testDeregisterMapping_withReference -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:jalview.gui.AlignViewportTest@437e951d]" started-at="2023-07-02T10:11:56Z" name="setUp" finished-at="2023-07-02T10:11:56Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="testGetConsensusSeq()[pri:0, instance:jalview.gui.AlignViewportTest@437e951d]" started-at="2023-07-02T10:11:56Z" name="testGetConsensusSeq" finished-at="2023-07-02T10:11:56Z" duration-ms="94" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetConsensusSeq -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:jalview.gui.AlignViewportTest@437e951d]" started-at="2023-07-02T10:11:56Z" name="setUp" finished-at="2023-07-02T10:11:56Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="testHideRevealSequences()[pri:0, instance:jalview.gui.AlignViewportTest@437e951d]" started-at="2023-07-02T10:11:56Z" name="testHideRevealSequences" finished-at="2023-07-02T10:11:56Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testHideRevealSequences -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:jalview.gui.AlignViewportTest@437e951d]" started-at="2023-07-02T10:11:56Z" name="setUp" finished-at="2023-07-02T10:11:56Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="testSetGetHasSearchResults()[pri:0, instance:jalview.gui.AlignViewportTest@437e951d]" started-at="2023-07-02T10:11:56Z" name="testSetGetHasSearchResults" finished-at="2023-07-02T10:11:56Z" duration-ms="51" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSetGetHasSearchResults -->
        <test-method signature="testSetGlobalColourScheme()[pri:0, instance:jalview.gui.AlignViewportTest@437e951d]" started-at="2023-07-02T10:11:56Z" name="testSetGlobalColourScheme" finished-at="2023-07-02T10:11:57Z" duration-ms="59" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSetGlobalColourScheme -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:jalview.gui.AlignViewportTest@437e951d]" started-at="2023-07-02T10:11:56Z" name="setUp" finished-at="2023-07-02T10:11:56Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="testSetSelectionGroup()[pri:0, instance:jalview.gui.AlignViewportTest@437e951d]" started-at="2023-07-02T10:11:57Z" name="testSetSelectionGroup" finished-at="2023-07-02T10:11:57Z" duration-ms="75" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSetSelectionGroup -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:jalview.gui.AlignViewportTest@437e951d]" started-at="2023-07-02T10:11:57Z" name="setUp" finished-at="2023-07-02T10:11:57Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:jalview.gui.AlignViewportTest@437e951d]" started-at="2023-07-02T10:11:57Z" name="setUp" finished-at="2023-07-02T10:11:57Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="testShowOrDontShowOccupancy()[pri:0, instance:jalview.gui.AlignViewportTest@437e951d]" started-at="2023-07-02T10:11:57Z" name="testShowOrDontShowOccupancy" finished-at="2023-07-02T10:11:57Z" duration-ms="168" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testShowOrDontShowOccupancy -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:jalview.gui.AlignViewportTest@437e951d]" started-at="2023-07-02T10:11:57Z" name="setUp" finished-at="2023-07-02T10:11:57Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="testUpdateConservation_qualityOnly()[pri:0, instance:jalview.gui.AlignViewportTest@437e951d]" started-at="2023-07-02T10:11:57Z" name="testUpdateConservation_qualityOnly" finished-at="2023-07-02T10:11:57Z" duration-ms="115" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testUpdateConservation_qualityOnly -->
      </class> <!-- jalview.gui.AlignViewportTest -->
      <class name="jalview.analysis.TestAlignSeq">
        <test-method is-config="true" signature="setUp()[pri:0, instance:jalview.analysis.TestAlignSeq@3704122f]" started-at="2023-07-02T10:12:10Z" name="setUp" finished-at="2023-07-02T10:12:10Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="testExtractGaps()[pri:0, instance:jalview.analysis.TestAlignSeq@3704122f]" started-at="2023-07-02T10:12:10Z" name="testExtractGaps" finished-at="2023-07-02T10:12:10Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testExtractGaps -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:jalview.analysis.TestAlignSeq@3704122f]" started-at="2023-07-02T10:12:10Z" name="setUp" finished-at="2023-07-02T10:12:10Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="setUpJvOptionPane()[pri:0, instance:jalview.analysis.TestAlignSeq@3704122f]" started-at="2023-07-02T10:12:10Z" name="setUpJvOptionPane" finished-at="2023-07-02T10:12:10Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpJvOptionPane -->
        <test-method signature="testGetMappingForS1()[pri:0, instance:jalview.analysis.TestAlignSeq@3704122f]" started-at="2023-07-02T10:12:10Z" name="testGetMappingForS1" finished-at="2023-07-02T10:12:10Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetMappingForS1 -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:jalview.analysis.TestAlignSeq@3704122f]" started-at="2023-07-02T10:12:10Z" name="setUp" finished-at="2023-07-02T10:12:10Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="testPrintAlignment()[pri:0, instance:jalview.analysis.TestAlignSeq@3704122f]" started-at="2023-07-02T10:12:10Z" name="testPrintAlignment" finished-at="2023-07-02T10:12:10Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testPrintAlignment -->
      </class> <!-- jalview.analysis.TestAlignSeq -->
      <class name="jalview.io.PhylipFileTests">
        <test-method is-config="true" signature="setUpJvOptionPane()[pri:0, instance:jalview.io.PhylipFileTests@79ab3a71]" started-at="2023-07-02T10:11:53Z" name="setUpJvOptionPane" finished-at="2023-07-02T10:11:53Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpJvOptionPane -->
        <test-method signature="testInterleavedDataExtraction()[pri:0, instance:jalview.io.PhylipFileTests@79ab3a71]" started-at="2023-07-02T10:11:53Z" name="testInterleavedDataExtraction" finished-at="2023-07-02T10:11:53Z" duration-ms="3" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testInterleavedDataExtraction -->
        <test-method signature="testInterleavedIO()[pri:0, instance:jalview.io.PhylipFileTests@79ab3a71]" started-at="2023-07-02T10:11:53Z" name="testInterleavedIO" finished-at="2023-07-02T10:11:53Z" duration-ms="17" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testInterleavedIO -->
        <test-method signature="testSequentialDataExtraction()[pri:0, instance:jalview.io.PhylipFileTests@79ab3a71]" started-at="2023-07-02T10:11:53Z" name="testSequentialDataExtraction" finished-at="2023-07-02T10:11:53Z" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSequentialDataExtraction -->
        <test-method signature="testSequentialIO()[pri:0, instance:jalview.io.PhylipFileTests@79ab3a71]" started-at="2023-07-02T10:11:53Z" name="testSequentialIO" finished-at="2023-07-02T10:11:53Z" duration-ms="6" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSequentialIO -->
      </class> <!-- jalview.io.PhylipFileTests -->
      <class name="jalview.analysis.FinderTest">
        <test-method is-config="true" signature="setUp()[pri:0, instance:jalview.analysis.FinderTest@3a7b503d]" started-at="2023-07-02T10:12:01Z" name="setUp" finished-at="2023-07-02T10:12:01Z" duration-ms="31" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="testFindAll()[pri:0, instance:jalview.analysis.FinderTest@3a7b503d]" started-at="2023-07-02T10:12:01Z" name="testFindAll" finished-at="2023-07-02T10:12:01Z" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFindAll -->
        <test-method is-config="true" signature="setUpJvOptionPane()[pri:0, instance:jalview.analysis.FinderTest@3a7b503d]" started-at="2023-07-02T10:12:01Z" name="setUpJvOptionPane" finished-at="2023-07-02T10:12:01Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpJvOptionPane -->
        <test-method is-config="true" signature="tearDownAfterTest()[pri:0, instance:jalview.analysis.FinderTest@3a7b503d]" started-at="2023-07-02T10:12:01Z" name="tearDownAfterTest" finished-at="2023-07-02T10:12:01Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownAfterTest -->
        <test-method signature="testFindAll_inSelection()[pri:0, instance:jalview.analysis.FinderTest@3a7b503d]" started-at="2023-07-02T10:12:01Z" name="testFindAll_inSelection" finished-at="2023-07-02T10:12:01Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFindAll_inSelection -->
        <test-method signature="testFindAll_caseSensitive()[pri:0, instance:jalview.analysis.FinderTest@3a7b503d]" started-at="2023-07-02T10:12:01Z" name="testFindAll_caseSensitive" finished-at="2023-07-02T10:12:01Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFindAll_caseSensitive -->
        <test-method is-config="true" signature="tearDownAfterTest()[pri:0, instance:jalview.analysis.FinderTest@3a7b503d]" started-at="2023-07-02T10:12:01Z" name="tearDownAfterTest" finished-at="2023-07-02T10:12:01Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownAfterTest -->
        <test-method is-config="true" signature="tearDownAfterTest()[pri:0, instance:jalview.analysis.FinderTest@3a7b503d]" started-at="2023-07-02T10:12:01Z" name="tearDownAfterTest" finished-at="2023-07-02T10:12:01Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownAfterTest -->
        <test-method is-config="true" signature="tearDownAfterTest()[pri:0, instance:jalview.analysis.FinderTest@3a7b503d]" started-at="2023-07-02T10:12:01Z" name="tearDownAfterTest" finished-at="2023-07-02T10:12:01Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownAfterTest -->
        <test-method signature="testFindAll_maximalResultOnly()[pri:0, instance:jalview.analysis.FinderTest@3a7b503d]" started-at="2023-07-02T10:12:01Z" name="testFindAll_maximalResultOnly" finished-at="2023-07-02T10:12:01Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFindAll_maximalResultOnly -->
        <test-method is-config="true" signature="tearDownAfterTest()[pri:0, instance:jalview.analysis.FinderTest@3a7b503d]" started-at="2023-07-02T10:12:01Z" name="tearDownAfterTest" finished-at="2023-07-02T10:12:01Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownAfterTest -->
        <test-method signature="testFindAll_sequenceIds()[pri:0, instance:jalview.analysis.FinderTest@3a7b503d]" started-at="2023-07-02T10:12:01Z" name="testFindAll_sequenceIds" finished-at="2023-07-02T10:12:01Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFindAll_sequenceIds -->
        <test-method signature="testFindNext()[pri:0, instance:jalview.analysis.FinderTest@3a7b503d]" started-at="2023-07-02T10:12:01Z" name="testFindNext" finished-at="2023-07-02T10:12:01Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFindNext -->
        <test-method is-config="true" signature="tearDownAfterTest()[pri:0, instance:jalview.analysis.FinderTest@3a7b503d]" started-at="2023-07-02T10:12:01Z" name="tearDownAfterTest" finished-at="2023-07-02T10:12:01Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownAfterTest -->
        <test-method signature="testFindNext_inSelection()[pri:0, instance:jalview.analysis.FinderTest@3a7b503d]" started-at="2023-07-02T10:12:01Z" name="testFindNext_inSelection" finished-at="2023-07-02T10:12:01Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFindNext_inSelection -->
        <test-method signature="testFind_findNext()[pri:0, instance:jalview.analysis.FinderTest@3a7b503d]" started-at="2023-07-02T10:12:01Z" name="testFind_findNext" finished-at="2023-07-02T10:12:01Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFind_findNext -->
        <test-method is-config="true" signature="tearDownAfterTest()[pri:0, instance:jalview.analysis.FinderTest@3a7b503d]" started-at="2023-07-02T10:12:01Z" name="tearDownAfterTest" finished-at="2023-07-02T10:12:01Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownAfterTest -->
        <test-method is-config="true" signature="tearDownAfterTest()[pri:0, instance:jalview.analysis.FinderTest@3a7b503d]" started-at="2023-07-02T10:12:01Z" name="tearDownAfterTest" finished-at="2023-07-02T10:12:01Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownAfterTest -->
        <test-method signature="testFind_findAllInSelectionWithShortSequence()[pri:0, instance:jalview.analysis.FinderTest@3a7b503d]" started-at="2023-07-02T10:12:01Z" name="testFind_findAllInSelectionWithShortSequence" finished-at="2023-07-02T10:12:01Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFind_findAllInSelectionWithShortSequence -->
        <test-method is-config="true" signature="tearDownAfterTest()[pri:0, instance:jalview.analysis.FinderTest@3a7b503d]" started-at="2023-07-02T10:12:01Z" name="tearDownAfterTest" finished-at="2023-07-02T10:12:01Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownAfterTest -->
        <test-method signature="testFind_findAll()[pri:0, instance:jalview.analysis.FinderTest@3a7b503d]" started-at="2023-07-02T10:12:01Z" name="testFind_findAll" finished-at="2023-07-02T10:12:01Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFind_findAll -->
        <test-method is-config="true" signature="tearDownAfterTest()[pri:0, instance:jalview.analysis.FinderTest@3a7b503d]" started-at="2023-07-02T10:12:01Z" name="tearDownAfterTest" finished-at="2023-07-02T10:12:01Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownAfterTest -->
        <test-method signature="testFind_ignoreHiddenColumns()[pri:0, instance:jalview.analysis.FinderTest@3a7b503d]" started-at="2023-07-02T10:12:01Z" name="testFind_ignoreHiddenColumns" finished-at="2023-07-02T10:12:01Z" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFind_ignoreHiddenColumns -->
        <test-method signature="testFind_inDescription()[pri:0, instance:jalview.analysis.FinderTest@3a7b503d]" started-at="2023-07-02T10:12:01Z" name="testFind_inDescription" finished-at="2023-07-02T10:12:01Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFind_inDescription -->
        <test-method is-config="true" signature="tearDownAfterTest()[pri:0, instance:jalview.analysis.FinderTest@3a7b503d]" started-at="2023-07-02T10:12:01Z" name="tearDownAfterTest" finished-at="2023-07-02T10:12:01Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownAfterTest -->
        <test-method is-config="true" signature="tearDownAfterTest()[pri:0, instance:jalview.analysis.FinderTest@3a7b503d]" started-at="2023-07-02T10:12:01Z" name="tearDownAfterTest" finished-at="2023-07-02T10:12:01Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownAfterTest -->
        <test-method signature="testFind_regex()[pri:0, instance:jalview.analysis.FinderTest@3a7b503d]" started-at="2023-07-02T10:12:01Z" name="testFind_regex" finished-at="2023-07-02T10:12:01Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFind_regex -->
        <test-method signature="testFind_residueNumber()[pri:0, instance:jalview.analysis.FinderTest@3a7b503d]" started-at="2023-07-02T10:12:01Z" name="testFind_residueNumber" finished-at="2023-07-02T10:12:01Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFind_residueNumber -->
        <test-method is-config="true" signature="tearDownAfterTest()[pri:0, instance:jalview.analysis.FinderTest@3a7b503d]" started-at="2023-07-02T10:12:01Z" name="tearDownAfterTest" finished-at="2023-07-02T10:12:01Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownAfterTest -->
        <test-method signature="testFind_withHiddenColumns()[pri:0, instance:jalview.analysis.FinderTest@3a7b503d]" started-at="2023-07-02T10:12:01Z" name="testFind_withHiddenColumns" finished-at="2023-07-02T10:12:01Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFind_withHiddenColumns -->
        <test-method is-config="true" signature="tearDownAfterTest()[pri:0, instance:jalview.analysis.FinderTest@3a7b503d]" started-at="2023-07-02T10:12:01Z" name="tearDownAfterTest" finished-at="2023-07-02T10:12:01Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownAfterTest -->
        <test-method is-config="true" signature="tearDownAfterTest()[pri:0, instance:jalview.analysis.FinderTest@3a7b503d]" started-at="2023-07-02T10:12:01Z" name="tearDownAfterTest" finished-at="2023-07-02T10:12:01Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownAfterTest -->
        <test-method signature="testFind_withHiddenColumnsAndSelection()[pri:0, instance:jalview.analysis.FinderTest@3a7b503d]" started-at="2023-07-02T10:12:01Z" name="testFind_withHiddenColumnsAndSelection" finished-at="2023-07-02T10:12:01Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFind_withHiddenColumnsAndSelection -->
        <test-method is-config="true" signature="tearDownAfterTest()[pri:0, instance:jalview.analysis.FinderTest@3a7b503d]" started-at="2023-07-02T10:12:01Z" name="tearDownAfterTest" finished-at="2023-07-02T10:12:01Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownAfterTest -->
      </class> <!-- jalview.analysis.FinderTest -->
      <class name="jalview.util.FormatTest">
        <test-method signature="testAppendPercentage()[pri:0, instance:jalview.util.FormatTest@4a67318f]" started-at="2023-07-02T10:12:18Z" name="testAppendPercentage" finished-at="2023-07-02T10:12:18Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAppendPercentage -->
        <test-method is-config="true" signature="setUpJvOptionPane()[pri:0, instance:jalview.util.FormatTest@4a67318f]" started-at="2023-07-02T10:12:18Z" name="setUpJvOptionPane" finished-at="2023-07-02T10:12:18Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpJvOptionPane -->
        <test-method signature="testForm_float()[pri:0, instance:jalview.util.FormatTest@4a67318f]" started-at="2023-07-02T10:12:18Z" name="testForm_float" finished-at="2023-07-02T10:12:18Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testForm_float -->
        <test-method signature="testFormat_scientific()[pri:0, instance:jalview.util.FormatTest@4a67318f]" started-at="2023-07-02T10:12:18Z" name="testFormat_scientific" finished-at="2023-07-02T10:12:18Z" duration-ms="3" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFormat_scientific -->
        <test-method signature="testFormat_scientific_overflow()[pri:0, instance:jalview.util.FormatTest@4a67318f]" started-at="2023-07-02T10:12:18Z" name="testFormat_scientific_overflow" finished-at="2023-07-02T10:12:18Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFormat_scientific_overflow -->
        <test-method signature="testRepeat()[pri:0, instance:jalview.util.FormatTest@4a67318f]" started-at="2023-07-02T10:12:18Z" name="testRepeat" finished-at="2023-07-02T10:12:18Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRepeat -->
      </class> <!-- jalview.util.FormatTest -->
      <class name="jalview.schemes.Blosum62ColourSchemeTest">
        <test-method signature="testFindColour()[pri:0, instance:jalview.schemes.Blosum62ColourSchemeTest@6d2260db]" started-at="2023-07-02T10:11:57Z" name="testFindColour" finished-at="2023-07-02T10:11:57Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFindColour -->
      </class> <!-- jalview.schemes.Blosum62ColourSchemeTest -->
      <class name="mc_view.AtomTest">
        <test-method is-config="true" signature="setUpJvOptionPane()[pri:0, instance:mc_view.AtomTest@62e8f862]" started-at="2023-07-02T10:11:38Z" name="setUpJvOptionPane" finished-at="2023-07-02T10:11:38Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpJvOptionPane -->
        <test-method signature="testStringConstructor()[pri:0, instance:mc_view.AtomTest@62e8f862]" started-at="2023-07-02T10:11:38Z" name="testStringConstructor" finished-at="2023-07-02T10:11:38Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testStringConstructor -->
        <test-method signature="testStringConstructor_blankOccupancyTempFactor()[pri:0, instance:mc_view.AtomTest@62e8f862]" started-at="2023-07-02T10:11:38Z" name="testStringConstructor_blankOccupancyTempFactor" finished-at="2023-07-02T10:11:38Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testStringConstructor_blankOccupancyTempFactor -->
        <test-method signature="testStringConstructor_malformed()[pri:0, instance:mc_view.AtomTest@62e8f862]" started-at="2023-07-02T10:11:38Z" name="testStringConstructor_malformed" finished-at="2023-07-02T10:11:38Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testStringConstructor_malformed -->
      </class> <!-- mc_view.AtomTest -->
      <class name="jalview.datamodel.StartRegionIteratorTest">
        <test-method signature="testBoundsIteratorUsingNullCursor()[pri:0, instance:jalview.datamodel.StartRegionIteratorTest@47a64f7d]" started-at="2023-07-02T10:12:10Z" name="testBoundsIteratorUsingNullCursor" finished-at="2023-07-02T10:12:10Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testBoundsIteratorUsingNullCursor -->
        <test-method signature="testBoundsIteratorUsingCursor()[pri:0, instance:jalview.datamodel.StartRegionIteratorTest@47a64f7d]" started-at="2023-07-02T10:12:10Z" name="testBoundsIteratorUsingCursor" finished-at="2023-07-02T10:12:10Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testBoundsIteratorUsingCursor -->
        <test-method signature="testBasicBoundsIterator()[pri:0, instance:jalview.datamodel.StartRegionIteratorTest@47a64f7d]" started-at="2023-07-02T10:12:10Z" name="testBasicBoundsIterator" finished-at="2023-07-02T10:12:10Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testBasicBoundsIterator -->
      </class> <!-- jalview.datamodel.StartRegionIteratorTest -->
      <class name="jalview.renderer.ResidueShaderTest">
        <test-method signature="testAboveThreshold()[pri:0, instance:jalview.renderer.ResidueShaderTest@2e27d72f]" started-at="2023-07-02T10:11:42Z" name="testAboveThreshold" finished-at="2023-07-02T10:11:42Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAboveThreshold -->
        <test-method signature="testApplyConservation()[pri:0, instance:jalview.renderer.ResidueShaderTest@2e27d72f]" started-at="2023-07-02T10:11:42Z" name="testApplyConservation" finished-at="2023-07-02T10:11:42Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testApplyConservation -->
        <test-method signature="testFindColour_gapColour()[pri:0, instance:jalview.renderer.ResidueShaderTest@2e27d72f]" started-at="2023-07-02T10:11:42Z" name="testFindColour_gapColour" finished-at="2023-07-02T10:11:42Z" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFindColour_gapColour -->
      </class> <!-- jalview.renderer.ResidueShaderTest -->
      <class name="jalview.fts.service.pdb.PDBFTSPanelTest">
        <test-method is-config="true" signature="setUp()[pri:0, instance:jalview.fts.service.pdb.PDBFTSPanelTest@4102b1b1]" started-at="2023-07-02T10:11:42Z" name="setUp" finished-at="2023-07-02T10:11:42Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="setUpJvOptionPane()[pri:0, instance:jalview.fts.service.pdb.PDBFTSPanelTest@4102b1b1]" started-at="2023-07-02T10:11:42Z" name="setUpJvOptionPane" finished-at="2023-07-02T10:11:42Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpJvOptionPane -->
        <test-method signature="populateCmbSearchTargetOptionsTest()[pri:0, instance:jalview.fts.service.pdb.PDBFTSPanelTest@4102b1b1]" started-at="2023-07-02T10:11:42Z" name="populateCmbSearchTargetOptionsTest" finished-at="2023-07-02T10:11:42Z" duration-ms="87" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- populateCmbSearchTargetOptionsTest -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:jalview.fts.service.pdb.PDBFTSPanelTest@4102b1b1]" started-at="2023-07-02T10:11:42Z" name="tearDown" finished-at="2023-07-02T10:11:42Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:jalview.fts.service.pdb.PDBFTSPanelTest@4102b1b1]" started-at="2023-07-02T10:11:42Z" name="setUp" finished-at="2023-07-02T10:11:42Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="testDecodeSearchTerm()[pri:0, instance:jalview.fts.service.pdb.PDBFTSPanelTest@4102b1b1]" started-at="2023-07-02T10:11:42Z" name="testDecodeSearchTerm" finished-at="2023-07-02T10:11:42Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testDecodeSearchTerm -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:jalview.fts.service.pdb.PDBFTSPanelTest@4102b1b1]" started-at="2023-07-02T10:11:42Z" name="setUp" finished-at="2023-07-02T10:11:42Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:jalview.fts.service.pdb.PDBFTSPanelTest@4102b1b1]" started-at="2023-07-02T10:11:42Z" name="tearDown" finished-at="2023-07-02T10:11:42Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method signature="testgetPDBIdwithSpecifiedChain()[pri:0, instance:jalview.fts.service.pdb.PDBFTSPanelTest@4102b1b1]" started-at="2023-07-02T10:11:42Z" name="testgetPDBIdwithSpecifiedChain" finished-at="2023-07-02T10:11:42Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testgetPDBIdwithSpecifiedChain -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:jalview.fts.service.pdb.PDBFTSPanelTest@4102b1b1]" started-at="2023-07-02T10:11:42Z" name="tearDown" finished-at="2023-07-02T10:11:42Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- jalview.fts.service.pdb.PDBFTSPanelTest -->
      <class name="jalview.schemes.ColourSchemesTest">
        <test-method is-config="true" signature="setUpBeforeClass()[pri:0, instance:jalview.schemes.ColourSchemesTest@3fcdcf]" started-at="2023-07-02T10:12:02Z" name="setUpBeforeClass" finished-at="2023-07-02T10:12:02Z" duration-ms="72" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpBeforeClass -->
        <test-method signature="testGetColourScheme()[pri:0, instance:jalview.schemes.ColourSchemesTest@3fcdcf]" started-at="2023-07-02T10:12:02Z" name="testGetColourScheme" finished-at="2023-07-02T10:12:02Z" duration-ms="48" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetColourScheme -->
        <test-method signature="testGetColourSchemes()[pri:0, instance:jalview.schemes.ColourSchemesTest@3fcdcf]" started-at="2023-07-02T10:12:02Z" name="testGetColourSchemes" finished-at="2023-07-02T10:12:02Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetColourSchemes -->
        <test-method signature="testRegisterColourScheme()[pri:0, instance:jalview.schemes.ColourSchemesTest@3fcdcf]" started-at="2023-07-02T10:12:02Z" name="testRegisterColourScheme" finished-at="2023-07-02T10:12:02Z" duration-ms="41" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRegisterColourScheme -->
        <test-method signature="testNameExists()[pri:0, instance:jalview.schemes.ColourSchemesTest@3fcdcf]" started-at="2023-07-02T10:12:02Z" name="testNameExists" finished-at="2023-07-02T10:12:02Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testNameExists -->
        <test-method is-config="true" signature="tearDownAfterClass()[pri:0, instance:jalview.schemes.ColourSchemesTest@3fcdcf]" started-at="2023-07-02T10:12:02Z" name="tearDownAfterClass" finished-at="2023-07-02T10:12:02Z" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownAfterClass -->
      </class> <!-- jalview.schemes.ColourSchemesTest -->
      <class name="jalview.io.gff.GffHelperFactoryTest">
        <test-method is-config="true" signature="setUpJvOptionPane()[pri:0, instance:jalview.io.gff.GffHelperFactoryTest@1c65121]" started-at="2023-07-02T10:12:10Z" name="setUpJvOptionPane" finished-at="2023-07-02T10:12:10Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpJvOptionPane -->
        <test-method signature="testGetHelper()[pri:0, instance:jalview.io.gff.GffHelperFactoryTest@1c65121]" started-at="2023-07-02T10:12:10Z" name="testGetHelper" finished-at="2023-07-02T10:12:10Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHelper -->
      </class> <!-- jalview.io.gff.GffHelperFactoryTest -->
      <class name="jalview.ws.dbsources.PfamSeedTest">
        <test-method is-config="true" signature="setUp()[pri:0, instance:jalview.ws.dbsources.PfamSeedTest@5710768a]" started-at="2023-07-02T10:11:45Z" name="setUp" finished-at="2023-07-02T10:11:45Z" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="testGetURL()[pri:0, instance:jalview.ws.dbsources.PfamSeedTest@5710768a]" started-at="2023-07-02T10:11:45Z" name="testGetURL" finished-at="2023-07-02T10:11:45Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetURL -->
      </class> <!-- jalview.ws.dbsources.PfamSeedTest -->
      <class name="jalview.commands.TrimRegionCommandTest">
        <test-method signature="testTrimLeft_noColumns()[pri:0, instance:jalview.commands.TrimRegionCommandTest@4ced35ed]" started-at="2023-07-02T10:13:43Z" name="testTrimLeft_noColumns" finished-at="2023-07-02T10:13:43Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testTrimLeft_noColumns -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:jalview.commands.TrimRegionCommandTest@4ced35ed]" started-at="2023-07-02T10:13:43Z" name="setUp" finished-at="2023-07-02T10:13:43Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="setUpJvOptionPane()[pri:0, instance:jalview.commands.TrimRegionCommandTest@4ced35ed]" started-at="2023-07-02T10:13:43Z" name="setUpJvOptionPane" finished-at="2023-07-02T10:13:43Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpJvOptionPane -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:jalview.commands.TrimRegionCommandTest@4ced35ed]" started-at="2023-07-02T10:13:43Z" name="setUp" finished-at="2023-07-02T10:13:43Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="testTrimLeft_withUndoAndRedo()[pri:0, instance:jalview.commands.TrimRegionCommandTest@4ced35ed]" started-at="2023-07-02T10:13:43Z" name="testTrimLeft_withUndoAndRedo" finished-at="2023-07-02T10:13:43Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testTrimLeft_withUndoAndRedo -->
        <test-method signature="testTrimLeft_oneColumn()[pri:0, instance:jalview.commands.TrimRegionCommandTest@4ced35ed]" started-at="2023-07-02T10:13:43Z" name="testTrimLeft_oneColumn" finished-at="2023-07-02T10:13:43Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testTrimLeft_oneColumn -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:jalview.commands.TrimRegionCommandTest@4ced35ed]" started-at="2023-07-02T10:13:43Z" name="setUp" finished-at="2023-07-02T10:13:43Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:jalview.commands.TrimRegionCommandTest@4ced35ed]" started-at="2023-07-02T10:13:43Z" name="setUp" finished-at="2023-07-02T10:13:43Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="testTrimRight_oneColumn()[pri:0, instance:jalview.commands.TrimRegionCommandTest@4ced35ed]" started-at="2023-07-02T10:13:43Z" name="testTrimRight_oneColumn" finished-at="2023-07-02T10:13:43Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testTrimRight_oneColumn -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:jalview.commands.TrimRegionCommandTest@4ced35ed]" started-at="2023-07-02T10:13:43Z" name="setUp" finished-at="2023-07-02T10:13:43Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="testTrimRight_noColumns()[pri:0, instance:jalview.commands.TrimRegionCommandTest@4ced35ed]" started-at="2023-07-02T10:13:43Z" name="testTrimRight_noColumns" finished-at="2023-07-02T10:13:43Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testTrimRight_noColumns -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:jalview.commands.TrimRegionCommandTest@4ced35ed]" started-at="2023-07-02T10:13:43Z" name="setUp" finished-at="2023-07-02T10:13:43Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="testTrimRight_withUndoAndRedo()[pri:0, instance:jalview.commands.TrimRegionCommandTest@4ced35ed]" started-at="2023-07-02T10:13:43Z" name="testTrimRight_withUndoAndRedo" finished-at="2023-07-02T10:13:43Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testTrimRight_withUndoAndRedo -->
      </class> <!-- jalview.commands.TrimRegionCommandTest -->
      <class name="jalview.util.SparseCountTest">
        <test-method signature="testKeyAt_ValueAt()[pri:0, instance:jalview.util.SparseCountTest@1af1347d]" started-at="2023-07-02T10:13:43Z" name="testKeyAt_ValueAt" finished-at="2023-07-02T10:13:43Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testKeyAt_ValueAt -->
        <test-method signature="testAdd()[pri:0, instance:jalview.util.SparseCountTest@1af1347d]" started-at="2023-07-02T10:13:43Z" name="testAdd" finished-at="2023-07-02T10:13:43Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAdd -->
        <test-method signature="testUnderflow()[pri:0, instance:jalview.util.SparseCountTest@1af1347d]" started-at="2023-07-02T10:13:43Z" name="testUnderflow" finished-at="2023-07-02T10:13:43Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testUnderflow -->
        <test-method signature="testPut()[pri:0, instance:jalview.util.SparseCountTest@1af1347d]" started-at="2023-07-02T10:13:43Z" name="testPut" finished-at="2023-07-02T10:13:43Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testPut -->
        <test-method signature="testOverflow()[pri:0, instance:jalview.util.SparseCountTest@1af1347d]" started-at="2023-07-02T10:13:43Z" name="testOverflow" finished-at="2023-07-02T10:13:43Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testOverflow -->
        <test-method is-config="true" signature="setUpJvOptionPane()[pri:0, instance:jalview.util.SparseCountTest@1af1347d]" started-at="2023-07-02T10:13:43Z" name="setUpJvOptionPane" finished-at="2023-07-02T10:13:43Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpJvOptionPane -->
      </class> <!-- jalview.util.SparseCountTest -->
      <class name="jalview.ext.htsjdk.TestHtsContigDb">
        <test-method signature="testCreateFastaSequenceIndex()[pri:0, instance:jalview.ext.htsjdk.TestHtsContigDb@54a3ab8f]" started-at="2023-07-02T10:11:41Z" name="testCreateFastaSequenceIndex" finished-at="2023-07-02T10:11:41Z" duration-ms="38" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCreateFastaSequenceIndex -->
        <test-method signature="testGetSequenceProxy()[pri:0, instance:jalview.ext.htsjdk.TestHtsContigDb@54a3ab8f]" started-at="2023-07-02T10:11:41Z" name="testGetSequenceProxy" finished-at="2023-07-02T10:11:41Z" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetSequenceProxy -->
        <test-method signature="testGetSequenceProxy_indexed()[pri:0, instance:jalview.ext.htsjdk.TestHtsContigDb@54a3ab8f]" started-at="2023-07-02T10:11:41Z" name="testGetSequenceProxy_indexed" finished-at="2023-07-02T10:11:41Z" duration-ms="1" status="PASS">
          <exception class="java.lang.IllegalArgumentException">
            <message>
              <![CDATA[File is not a supported reference file type: /home/thomas/Studium/Master_2/java-hiwi/jalview/test/jalview/ext/htsjdk/pgmB.fasta.fai]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IllegalArgumentException: File is not a supported reference file type: /home/thomas/Studium/Master_2/java-hiwi/jalview/test/jalview/ext/htsjdk/pgmB.fasta.fai
	at htsjdk.samtools.reference.ReferenceSequenceFileFactory.lambda$getFastaExtension$0(ReferenceSequenceFileFactory.java:253)
	at java.base/java.util.Optional.orElseGet(Optional.java:369)
	at htsjdk.samtools.reference.ReferenceSequenceFileFactory.getFastaExtension(ReferenceSequenceFileFactory.java:253)
	at htsjdk.samtools.reference.ReferenceSequenceFileFactory.getReferenceSequenceFile(ReferenceSequenceFileFactory.java:135)
	at htsjdk.samtools.reference.ReferenceSequenceFileFactory.getReferenceSequenceFile(ReferenceSequenceFileFactory.java:100)
	at htsjdk.samtools.reference.ReferenceSequenceFileFactory.getReferenceSequenceFile(ReferenceSequenceFileFactory.java:88)
	at jalview.ext.htsjdk.HtsContigDb.initSource(HtsContigDb.java:104)
	at jalview.ext.htsjdk.HtsContigDb.<init>(HtsContigDb.java:79)
	at jalview.ext.htsjdk.TestHtsContigDb.testGetSequenceProxy_indexed(TestHtsContigDb.java:77)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:648)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:834)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1142)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:124)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:771)
	at org.testng.TestRunner.run(TestRunner.java:621)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:357)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:352)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:310)
	at org.testng.SuiteRunner.run(SuiteRunner.java:259)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1176)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1101)
	at org.testng.TestNG.run(TestNG.java:1009)
	at org.gradle.api.internal.tasks.testing.testng.TestNGTestClassProcessor.runTests(TestNGTestClassProcessor.java:145)
	at org.gradle.api.internal.tasks.testing.testng.TestNGTestClassProcessor.stop(TestNGTestClassProcessor.java:92)
	at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.stop(SuiteTestClassProcessor.java:62)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:36)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24)
	at org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:33)
	at org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:94)
	at com.sun.proxy.$Proxy2.stop(Unknown Source)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker$3.run(TestWorker.java:193)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.executeAndMaintainThreadName(TestWorker.java:129)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.execute(TestWorker.java:100)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.execute(TestWorker.java:60)
	at org.gradle.process.internal.worker.child.ActionExecutionWorker.execute(ActionExecutionWorker.java:56)
	at org.gradle.process.internal.worker.child.SystemApplicationClassLoaderWorker.call(SystemApplicationClassLoaderWorker.java:113)
	at org.gradle.process.internal.worker.child.SystemApplicationClassLoaderWorker.call(SystemApplicationClassLoaderWorker.java:65)
	at worker.org.gradle.process.internal.worker.GradleWorkerMain.run(GradleWorkerMain.java:69)
	at worker.org.gradle.process.internal.worker.GradleWorkerMain.main(GradleWorkerMain.java:74)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalArgumentException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetSequenceProxy_indexed -->
      </class> <!-- jalview.ext.htsjdk.TestHtsContigDb -->
      <class name="jalview.ext.jmol.JmolCommandsTest">
        <test-method is-config="true" signature="setUp()[pri:0, instance:jalview.ext.jmol.JmolCommandsTest@3ef41c66]" started-at="2023-07-02T10:11:41Z" name="setUp" finished-at="2023-07-02T10:11:41Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="testColourByChain()[pri:0, instance:jalview.ext.jmol.JmolCommandsTest@3ef41c66]" started-at="2023-07-02T10:11:41Z" name="testColourByChain" finished-at="2023-07-02T10:11:41Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testColourByChain -->
        <test-method signature="testColourByCharge()[pri:0, instance:jalview.ext.jmol.JmolCommandsTest@3ef41c66]" started-at="2023-07-02T10:11:41Z" name="testColourByCharge" finished-at="2023-07-02T10:11:41Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testColourByCharge -->
        <test-method signature="testColourBySequence()[pri:0, instance:jalview.ext.jmol.JmolCommandsTest@3ef41c66]" started-at="2023-07-02T10:11:41Z" name="testColourBySequence" finished-at="2023-07-02T10:11:41Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testColourBySequence -->
        <test-method signature="testGetAtomSpec()[pri:0, instance:jalview.ext.jmol.JmolCommandsTest@3ef41c66]" started-at="2023-07-02T10:11:41Z" name="testGetAtomSpec" finished-at="2023-07-02T10:11:41Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetAtomSpec -->
        <test-method signature="testFocusView()[pri:0, instance:jalview.ext.jmol.JmolCommandsTest@3ef41c66]" started-at="2023-07-02T10:11:41Z" name="testFocusView" finished-at="2023-07-02T10:11:41Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFocusView -->
        <test-method signature="testGetColourBySequenceCommands_hiddenColumns()[pri:0, instance:jalview.ext.jmol.JmolCommandsTest@3ef41c66]" started-at="2023-07-02T10:11:41Z" name="testGetColourBySequenceCommands_hiddenColumns" finished-at="2023-07-02T10:11:41Z" duration-ms="30" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetColourBySequenceCommands_hiddenColumns -->
        <test-method signature="testGetModelStartNo()[pri:0, instance:jalview.ext.jmol.JmolCommandsTest@3ef41c66]" started-at="2023-07-02T10:11:41Z" name="testGetModelStartNo" finished-at="2023-07-02T10:11:41Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetModelStartNo -->
        <test-method signature="testLoadFile()[pri:0, instance:jalview.ext.jmol.JmolCommandsTest@3ef41c66]" started-at="2023-07-02T10:11:41Z" name="testLoadFile" finished-at="2023-07-02T10:11:41Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testLoadFile -->
        <test-method signature="testOpenSession()[pri:0, instance:jalview.ext.jmol.JmolCommandsTest@3ef41c66]" started-at="2023-07-02T10:11:41Z" name="testOpenSession" finished-at="2023-07-02T10:11:41Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testOpenSession -->
        <test-method signature="testSetBackgroundColour()[pri:0, instance:jalview.ext.jmol.JmolCommandsTest@3ef41c66]" started-at="2023-07-02T10:11:41Z" name="testSetBackgroundColour" finished-at="2023-07-02T10:11:41Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSetBackgroundColour -->
        <test-method signature="testSaveSession()[pri:0, instance:jalview.ext.jmol.JmolCommandsTest@3ef41c66]" started-at="2023-07-02T10:11:41Z" name="testSaveSession" finished-at="2023-07-02T10:11:41Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSaveSession -->
        <test-method signature="testShowBackbone()[pri:0, instance:jalview.ext.jmol.JmolCommandsTest@3ef41c66]" started-at="2023-07-02T10:11:41Z" name="testShowBackbone" finished-at="2023-07-02T10:11:41Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testShowBackbone -->
        <test-method signature="testSuperposeStructures()[pri:0, instance:jalview.ext.jmol.JmolCommandsTest@3ef41c66]" started-at="2023-07-02T10:11:41Z" name="testSuperposeStructures" finished-at="2023-07-02T10:11:41Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSuperposeStructures -->
      </class> <!-- jalview.ext.jmol.JmolCommandsTest -->
      <class name="jalview.analysis.CodingUtilsTest">
        <test-method signature="testDecodeNucleotide()[pri:0, instance:jalview.analysis.CodingUtilsTest@255990cc]" started-at="2023-07-02T10:11:56Z" name="testDecodeNucleotide" finished-at="2023-07-02T10:11:56Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testDecodeNucleotide -->
        <test-method signature="testEncodeCodon()[pri:0, instance:jalview.analysis.CodingUtilsTest@255990cc]" started-at="2023-07-02T10:11:56Z" name="testEncodeCodon" finished-at="2023-07-02T10:11:56Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testEncodeCodon -->
        <test-method is-config="true" signature="setUpJvOptionPane()[pri:0, instance:jalview.analysis.CodingUtilsTest@255990cc]" started-at="2023-07-02T10:11:56Z" name="setUpJvOptionPane" finished-at="2023-07-02T10:11:56Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpJvOptionPane -->
        <test-method signature="testDecodeCodon()[pri:0, instance:jalview.analysis.CodingUtilsTest@255990cc]" started-at="2023-07-02T10:11:56Z" name="testDecodeCodon" finished-at="2023-07-02T10:11:56Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testDecodeCodon -->
      </class> <!-- jalview.analysis.CodingUtilsTest -->
      <class name="jalview.fts.threedbeacons.TDBeaconsPanelTest">
        <test-method is-config="true" signature="setUp()[pri:0, instance:jalview.fts.threedbeacons.TDBeaconsPanelTest@5b69fd74]" started-at="2023-07-02T10:11:55Z" name="setUp" finished-at="2023-07-02T10:11:55Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="setUpJvOptionPane()[pri:0, instance:jalview.fts.threedbeacons.TDBeaconsPanelTest@5b69fd74]" started-at="2023-07-02T10:11:55Z" name="setUpJvOptionPane" finished-at="2023-07-02T10:11:55Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpJvOptionPane -->
        <test-method signature="populateCmbSearchTargetOptionsTest()[pri:0, instance:jalview.fts.threedbeacons.TDBeaconsPanelTest@5b69fd74]" started-at="2023-07-02T10:11:55Z" name="populateCmbSearchTargetOptionsTest" finished-at="2023-07-02T10:11:55Z" duration-ms="68" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- populateCmbSearchTargetOptionsTest -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:jalview.fts.threedbeacons.TDBeaconsPanelTest@5b69fd74]" started-at="2023-07-02T10:11:55Z" name="tearDown" finished-at="2023-07-02T10:11:55Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- jalview.fts.threedbeacons.TDBeaconsPanelTest -->
      <class name="jalview.io.AnnotatedPDBFileInputTest">
        <test-method is-config="true" signature="setUpBeforeClass()[pri:0, instance:jalview.io.AnnotatedPDBFileInputTest@64b31700]" started-at="2023-07-02T10:12:05Z" name="setUpBeforeClass" finished-at="2023-07-02T10:12:05Z" duration-ms="51" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpBeforeClass -->
        <test-method is-config="true" signature="setUpJvOptionPane()[pri:0, instance:jalview.io.AnnotatedPDBFileInputTest@64b31700]" started-at="2023-07-02T10:12:05Z" name="setUpJvOptionPane" finished-at="2023-07-02T10:12:05Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpJvOptionPane -->
        <test-method is-config="true" signature="setup()[pri:0, instance:jalview.io.AnnotatedPDBFileInputTest@64b31700]" started-at="2023-07-02T10:12:05Z" name="setup" finished-at="2023-07-02T10:12:05Z" duration-ms="409" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="checkAnnotationWiring()[pri:0, instance:jalview.io.AnnotatedPDBFileInputTest@64b31700]" started-at="2023-07-02T10:12:05Z" name="checkAnnotationWiring" finished-at="2023-07-02T10:12:05Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkAnnotationWiring -->
        <test-method is-config="true" signature="setup()[pri:0, instance:jalview.io.AnnotatedPDBFileInputTest@64b31700]" started-at="2023-07-02T10:12:05Z" name="setup" finished-at="2023-07-02T10:12:05Z" duration-ms="381" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="checkNoDuplicates()[pri:0, instance:jalview.io.AnnotatedPDBFileInputTest@64b31700]" started-at="2023-07-02T10:12:05Z" name="checkNoDuplicates" finished-at="2023-07-02T10:12:05Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkNoDuplicates -->
        <test-method is-config="true" signature="setup()[pri:0, instance:jalview.io.AnnotatedPDBFileInputTest@64b31700]" started-at="2023-07-02T10:12:05Z" name="setup" finished-at="2023-07-02T10:12:06Z" duration-ms="320" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="checkPDBSequenceFeatures()[pri:0, instance:jalview.io.AnnotatedPDBFileInputTest@64b31700]" started-at="2023-07-02T10:12:06Z" name="checkPDBSequenceFeatures" finished-at="2023-07-02T10:12:06Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkPDBSequenceFeatures -->
        <test-method is-config="true" signature="setup()[pri:0, instance:jalview.io.AnnotatedPDBFileInputTest@64b31700]" started-at="2023-07-02T10:12:06Z" name="setup" finished-at="2023-07-02T10:12:06Z" duration-ms="322" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="testJalviewProjectRelocationAnnotation()[pri:0, instance:jalview.io.AnnotatedPDBFileInputTest@64b31700]" started-at="2023-07-02T10:12:06Z" name="testJalviewProjectRelocationAnnotation" finished-at="2023-07-02T10:12:07Z" duration-ms="700" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testJalviewProjectRelocationAnnotation -->
        <test-method is-config="true" signature="tearDownAfterClass()[pri:0, instance:jalview.io.AnnotatedPDBFileInputTest@64b31700]" started-at="2023-07-02T10:12:07Z" name="tearDownAfterClass" finished-at="2023-07-02T10:12:07Z" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownAfterClass -->
      </class> <!-- jalview.io.AnnotatedPDBFileInputTest -->
      <class name="jalview.structures.models.AAStructureBindingModelTest">
        <test-method is-config="true" signature="setUpJvOptionPane()[pri:0, instance:jalview.structures.models.AAStructureBindingModelTest@3d9fc57a]" started-at="2023-07-02T10:11:46Z" name="setUpJvOptionPane" finished-at="2023-07-02T10:11:46Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpJvOptionPane -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:jalview.structures.models.AAStructureBindingModelTest@3d9fc57a]" started-at="2023-07-02T10:11:46Z" name="setUp" finished-at="2023-07-02T10:11:46Z" duration-ms="824" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="testBuildColoursMap()[pri:0, instance:jalview.structures.models.AAStructureBindingModelTest@3d9fc57a]" started-at="2023-07-02T10:11:46Z" name="testBuildColoursMap" finished-at="2023-07-02T10:11:46Z" duration-ms="46" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testBuildColoursMap -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:jalview.structures.models.AAStructureBindingModelTest@3d9fc57a]" started-at="2023-07-02T10:11:46Z" name="setUp" finished-at="2023-07-02T10:11:47Z" duration-ms="694" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="testFindSuperposableResidues()[pri:0, instance:jalview.structures.models.AAStructureBindingModelTest@3d9fc57a]" started-at="2023-07-02T10:11:47Z" name="testFindSuperposableResidues" finished-at="2023-07-02T10:11:47Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFindSuperposableResidues -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:jalview.structures.models.AAStructureBindingModelTest@3d9fc57a]" started-at="2023-07-02T10:11:47Z" name="setUp" finished-at="2023-07-02T10:11:48Z" duration-ms="758" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="testFindSuperposableResidues_hiddenColumn()[pri:0, instance:jalview.structures.models.AAStructureBindingModelTest@3d9fc57a]" started-at="2023-07-02T10:11:48Z" name="testFindSuperposableResidues_hiddenColumn" finished-at="2023-07-02T10:11:48Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFindSuperposableResidues_hiddenColumn -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:jalview.structures.models.AAStructureBindingModelTest@3d9fc57a]" started-at="2023-07-02T10:11:48Z" name="setUp" finished-at="2023-07-02T10:11:49Z" duration-ms="773" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="testImportPDBPreservesChainMappings()[pri:0, instance:jalview.structures.models.AAStructureBindingModelTest@3d9fc57a]" started-at="2023-07-02T10:11:49Z" name="testImportPDBPreservesChainMappings" finished-at="2023-07-02T10:11:49Z" duration-ms="253" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testImportPDBPreservesChainMappings -->
      </class> <!-- jalview.structures.models.AAStructureBindingModelTest -->
      <class name="jalview.datamodel.features.FeatureAttributesTest">
        <test-method signature="testAttributeNameComparator()[pri:0, instance:jalview.datamodel.features.FeatureAttributesTest@7692cd34]" started-at="2023-07-02T10:12:18Z" name="testAttributeNameComparator" finished-at="2023-07-02T10:12:18Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAttributeNameComparator -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:jalview.datamodel.features.FeatureAttributesTest@7692cd34]" started-at="2023-07-02T10:12:18Z" name="setUp" finished-at="2023-07-02T10:12:18Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:jalview.datamodel.features.FeatureAttributesTest@7692cd34]" started-at="2023-07-02T10:12:18Z" name="tearDown" finished-at="2023-07-02T10:12:18Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:jalview.datamodel.features.FeatureAttributesTest@7692cd34]" started-at="2023-07-02T10:12:18Z" name="tearDown" finished-at="2023-07-02T10:12:18Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method signature="testGetMinMax()[pri:0, instance:jalview.datamodel.features.FeatureAttributesTest@7692cd34]" started-at="2023-07-02T10:12:18Z" name="testGetMinMax" finished-at="2023-07-02T10:12:18Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetMinMax -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:jalview.datamodel.features.FeatureAttributesTest@7692cd34]" started-at="2023-07-02T10:12:18Z" name="tearDown" finished-at="2023-07-02T10:12:18Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method signature="testDatatype()[pri:0, instance:jalview.datamodel.features.FeatureAttributesTest@7692cd34]" started-at="2023-07-02T10:12:18Z" name="testDatatype" finished-at="2023-07-02T10:12:18Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testDatatype -->
        <test-method signature="testGetDescription()[pri:0, instance:jalview.datamodel.features.FeatureAttributesTest@7692cd34]" started-at="2023-07-02T10:12:18Z" name="testGetDescription" finished-at="2023-07-02T10:12:18Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetDescription -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:jalview.datamodel.features.FeatureAttributesTest@7692cd34]" started-at="2023-07-02T10:12:18Z" name="tearDown" finished-at="2023-07-02T10:12:18Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- jalview.datamodel.features.FeatureAttributesTest -->
      <class name="jalview.gui.HelpTest">
        <test-method is-config="true" signature="setUpJvOptionPane()[pri:0, instance:jalview.gui.HelpTest@5cad8b7d]" started-at="2023-07-02T10:11:38Z" name="setUpJvOptionPane" finished-at="2023-07-02T10:11:38Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpJvOptionPane -->
        <test-method signature="checkHelpTargets()[pri:0, instance:jalview.gui.HelpTest@5cad8b7d]" started-at="2023-07-02T10:11:38Z" name="checkHelpTargets" finished-at="2023-07-02T10:11:38Z" duration-ms="29" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkHelpTargets -->
      </class> <!-- jalview.gui.HelpTest -->
      <class name="jalview.gui.AnnotationChooserTest">
        <test-method is-config="true" signature="setUpJvOptionPane()[pri:0, instance:jalview.gui.AnnotationChooserTest@63a5e46c]" started-at="2023-07-02T10:12:00Z" name="setUpJvOptionPane" finished-at="2023-07-02T10:12:00Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpJvOptionPane -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:jalview.gui.AnnotationChooserTest@63a5e46c]" started-at="2023-07-02T10:12:00Z" name="setUp" finished-at="2023-07-02T10:12:00Z" duration-ms="22" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="testBuildActionButtonsPanel()[pri:0, instance:jalview.gui.AnnotationChooserTest@63a5e46c]" started-at="2023-07-02T10:12:00Z" name="testBuildActionButtonsPanel" finished-at="2023-07-02T10:12:00Z" duration-ms="44" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testBuildActionButtonsPanel -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:jalview.gui.AnnotationChooserTest@63a5e46c]" started-at="2023-07-02T10:12:00Z" name="setUp" finished-at="2023-07-02T10:12:00Z" duration-ms="20" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="testBuildApplyToOptionsPanel_noSelectionGroup()[pri:0, instance:jalview.gui.AnnotationChooserTest@63a5e46c]" started-at="2023-07-02T10:12:00Z" name="testBuildApplyToOptionsPanel_noSelectionGroup" finished-at="2023-07-02T10:12:00Z" duration-ms="15" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testBuildApplyToOptionsPanel_noSelectionGroup -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:jalview.gui.AnnotationChooserTest@63a5e46c]" started-at="2023-07-02T10:12:00Z" name="setUp" finished-at="2023-07-02T10:12:00Z" duration-ms="36" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="testBuildApplyToOptionsPanel_withSelectionGroup()[pri:0, instance:jalview.gui.AnnotationChooserTest@63a5e46c]" started-at="2023-07-02T10:12:00Z" name="testBuildApplyToOptionsPanel_withSelectionGroup" finished-at="2023-07-02T10:12:00Z" duration-ms="12" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testBuildApplyToOptionsPanel_withSelectionGroup -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:jalview.gui.AnnotationChooserTest@63a5e46c]" started-at="2023-07-02T10:12:00Z" name="setUp" finished-at="2023-07-02T10:12:00Z" duration-ms="21" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="testBuildShowHideOptionsPanel()[pri:0, instance:jalview.gui.AnnotationChooserTest@63a5e46c]" started-at="2023-07-02T10:12:00Z" name="testBuildShowHideOptionsPanel" finished-at="2023-07-02T10:12:00Z" duration-ms="19" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testBuildShowHideOptionsPanel -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:jalview.gui.AnnotationChooserTest@63a5e46c]" started-at="2023-07-02T10:12:00Z" name="setUp" finished-at="2023-07-02T10:12:00Z" duration-ms="15" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="testBuildShowHidePanel()[pri:0, instance:jalview.gui.AnnotationChooserTest@63a5e46c]" started-at="2023-07-02T10:12:00Z" name="testBuildShowHidePanel" finished-at="2023-07-02T10:12:00Z" duration-ms="10" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testBuildShowHidePanel -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:jalview.gui.AnnotationChooserTest@63a5e46c]" started-at="2023-07-02T10:12:00Z" name="setUp" finished-at="2023-07-02T10:12:00Z" duration-ms="18" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="testDeselectType_hideForAll()[pri:0, instance:jalview.gui.AnnotationChooserTest@63a5e46c]" started-at="2023-07-02T10:12:00Z" name="testDeselectType_hideForAll" finished-at="2023-07-02T10:12:00Z" duration-ms="32" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testDeselectType_hideForAll -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:jalview.gui.AnnotationChooserTest@63a5e46c]" started-at="2023-07-02T10:12:00Z" name="setUp" finished-at="2023-07-02T10:12:00Z" duration-ms="19" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="testDeselectType_hideForSelected()[pri:0, instance:jalview.gui.AnnotationChooserTest@63a5e46c]" started-at="2023-07-02T10:12:00Z" name="testDeselectType_hideForSelected" finished-at="2023-07-02T10:12:00Z" duration-ms="13" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testDeselectType_hideForSelected -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:jalview.gui.AnnotationChooserTest@63a5e46c]" started-at="2023-07-02T10:12:00Z" name="setUp" finished-at="2023-07-02T10:12:00Z" duration-ms="18" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="testDeselectType_showForAll()[pri:0, instance:jalview.gui.AnnotationChooserTest@63a5e46c]" started-at="2023-07-02T10:12:00Z" name="testDeselectType_showForAll" finished-at="2023-07-02T10:12:00Z" duration-ms="12" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testDeselectType_showForAll -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:jalview.gui.AnnotationChooserTest@63a5e46c]" started-at="2023-07-02T10:12:00Z" name="setUp" finished-at="2023-07-02T10:12:00Z" duration-ms="15" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="testDeselectType_showForSelected()[pri:0, instance:jalview.gui.AnnotationChooserTest@63a5e46c]" started-at="2023-07-02T10:12:00Z" name="testDeselectType_showForSelected" finished-at="2023-07-02T10:12:00Z" duration-ms="10" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testDeselectType_showForSelected -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:jalview.gui.AnnotationChooserTest@63a5e46c]" started-at="2023-07-02T10:12:00Z" name="setUp" finished-at="2023-07-02T10:12:00Z" duration-ms="12" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="testGetAnnotationTypes()[pri:0, instance:jalview.gui.AnnotationChooserTest@63a5e46c]" started-at="2023-07-02T10:12:00Z" name="testGetAnnotationTypes" finished-at="2023-07-02T10:12:00Z" duration-ms="8" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetAnnotationTypes -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:jalview.gui.AnnotationChooserTest@63a5e46c]" started-at="2023-07-02T10:12:00Z" name="setUp" finished-at="2023-07-02T10:12:00Z" duration-ms="13" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="testIsInActionScope_selectedScope()[pri:0, instance:jalview.gui.AnnotationChooserTest@63a5e46c]" started-at="2023-07-02T10:12:00Z" name="testIsInActionScope_selectedScope" finished-at="2023-07-02T10:12:00Z" duration-ms="6" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testIsInActionScope_selectedScope -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:jalview.gui.AnnotationChooserTest@63a5e46c]" started-at="2023-07-02T10:12:00Z" name="setUp" finished-at="2023-07-02T10:12:00Z" duration-ms="11" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="testIsInActionScope_unselectedScope()[pri:0, instance:jalview.gui.AnnotationChooserTest@63a5e46c]" started-at="2023-07-02T10:12:00Z" name="testIsInActionScope_unselectedScope" finished-at="2023-07-02T10:12:00Z" duration-ms="9" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testIsInActionScope_unselectedScope -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:jalview.gui.AnnotationChooserTest@63a5e46c]" started-at="2023-07-02T10:12:00Z" name="setUp" finished-at="2023-07-02T10:12:00Z" duration-ms="12" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="testResetOriginalState()[pri:0, instance:jalview.gui.AnnotationChooserTest@63a5e46c]" started-at="2023-07-02T10:12:00Z" name="testResetOriginalState" finished-at="2023-07-02T10:12:00Z" duration-ms="11" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testResetOriginalState -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:jalview.gui.AnnotationChooserTest@63a5e46c]" started-at="2023-07-02T10:12:00Z" name="setUp" finished-at="2023-07-02T10:12:00Z" duration-ms="15" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="testSelectType_hideForAll()[pri:0, instance:jalview.gui.AnnotationChooserTest@63a5e46c]" started-at="2023-07-02T10:12:00Z" name="testSelectType_hideForAll" finished-at="2023-07-02T10:12:00Z" duration-ms="9" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSelectType_hideForAll -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:jalview.gui.AnnotationChooserTest@63a5e46c]" started-at="2023-07-02T10:12:00Z" name="setUp" finished-at="2023-07-02T10:12:00Z" duration-ms="13" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="testSelectType_hideForSelected()[pri:0, instance:jalview.gui.AnnotationChooserTest@63a5e46c]" started-at="2023-07-02T10:12:00Z" name="testSelectType_hideForSelected" finished-at="2023-07-02T10:12:00Z" duration-ms="19" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSelectType_hideForSelected -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:jalview.gui.AnnotationChooserTest@63a5e46c]" started-at="2023-07-02T10:12:00Z" name="setUp" finished-at="2023-07-02T10:12:00Z" duration-ms="17" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="testSelectType_showForAll()[pri:0, instance:jalview.gui.AnnotationChooserTest@63a5e46c]" started-at="2023-07-02T10:12:00Z" name="testSelectType_showForAll" finished-at="2023-07-02T10:12:00Z" duration-ms="12" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSelectType_showForAll -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:jalview.gui.AnnotationChooserTest@63a5e46c]" started-at="2023-07-02T10:12:00Z" name="setUp" finished-at="2023-07-02T10:12:00Z" duration-ms="15" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="testSelectType_showForSelected()[pri:0, instance:jalview.gui.AnnotationChooserTest@63a5e46c]" started-at="2023-07-02T10:12:00Z" name="testSelectType_showForSelected" finished-at="2023-07-02T10:12:00Z" duration-ms="12" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSelectType_showForSelected -->
      </class> <!-- jalview.gui.AnnotationChooserTest -->
      <class name="jalview.analysis.DnaTest">
        <test-method signature="testCompareCodonPos()[pri:0, instance:jalview.analysis.DnaTest@29d2d081]" started-at="2023-07-02T10:12:00Z" name="testCompareCodonPos" finished-at="2023-07-02T10:12:00Z" duration-ms="3" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCompareCodonPos -->
        <test-method is-config="true" signature="setUpJvOptionPane()[pri:0, instance:jalview.analysis.DnaTest@29d2d081]" started-at="2023-07-02T10:12:00Z" name="setUpJvOptionPane" finished-at="2023-07-02T10:12:00Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpJvOptionPane -->
        <test-method signature="testCompareCodonPos_isSymmetric()[pri:0, instance:jalview.analysis.DnaTest@29d2d081]" started-at="2023-07-02T10:12:00Z" name="testCompareCodonPos_isSymmetric" finished-at="2023-07-02T10:12:00Z" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCompareCodonPos_isSymmetric -->
        <test-method signature="testCompareCodonPos_oneOnly()[pri:0, instance:jalview.analysis.DnaTest@29d2d081]" started-at="2023-07-02T10:12:00Z" name="testCompareCodonPos_oneOnly" finished-at="2023-07-02T10:12:00Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCompareCodonPos_oneOnly -->
        <test-method signature="testConvertCodon()[pri:0, instance:jalview.analysis.DnaTest@29d2d081]" started-at="2023-07-02T10:12:00Z" name="testConvertCodon" finished-at="2023-07-02T10:12:00Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testConvertCodon -->
        <test-method signature="testGetComplement()[pri:0, instance:jalview.analysis.DnaTest@29d2d081]" started-at="2023-07-02T10:12:00Z" name="testGetComplement" finished-at="2023-07-02T10:12:00Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetComplement -->
        <test-method signature="testReverseCdna()[pri:0, instance:jalview.analysis.DnaTest@29d2d081]" started-at="2023-07-02T10:12:00Z" name="testReverseCdna" finished-at="2023-07-02T10:12:00Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testReverseCdna -->
        <test-method signature="testTranslateCdna_hiddenColumns()[pri:0, instance:jalview.analysis.DnaTest@29d2d081]" started-at="2023-07-02T10:12:00Z" name="testTranslateCdna_hiddenColumns" finished-at="2023-07-02T10:12:00Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testTranslateCdna_hiddenColumns -->
        <test-method signature="testReverseSequence()[pri:0, instance:jalview.analysis.DnaTest@29d2d081]" started-at="2023-07-02T10:12:00Z" name="testReverseSequence" finished-at="2023-07-02T10:12:00Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testReverseSequence -->
        <test-method signature="testTranslateCdna_sequenceOrderIndependent()[pri:0, instance:jalview.analysis.DnaTest@29d2d081]" started-at="2023-07-02T10:12:00Z" name="testTranslateCdna_sequenceOrderIndependent" finished-at="2023-07-02T10:12:00Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testTranslateCdna_sequenceOrderIndependent -->
        <test-method signature="testTranslateCdna_simple()[pri:0, instance:jalview.analysis.DnaTest@29d2d081]" started-at="2023-07-02T10:12:00Z" name="testTranslateCdna_simple" finished-at="2023-07-02T10:12:00Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testTranslateCdna_simple -->
        <test-method signature="testTranslateCdna_withUntranslatableCodons()[pri:0, instance:jalview.analysis.DnaTest@29d2d081]" started-at="2023-07-02T10:12:00Z" name="testTranslateCdna_withUntranslatableCodons" finished-at="2023-07-02T10:12:00Z" duration-ms="6" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testTranslateCdna_withUntranslatableCodons -->
        <test-method signature="testTranslateCdna_withUntranslatableCodonsAndHiddenColumns()[pri:0, instance:jalview.analysis.DnaTest@29d2d081]" started-at="2023-07-02T10:12:00Z" name="testTranslateCdna_withUntranslatableCodonsAndHiddenColumns" finished-at="2023-07-02T10:12:00Z" duration-ms="31" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testTranslateCdna_withUntranslatableCodonsAndHiddenColumns -->
      </class> <!-- jalview.analysis.DnaTest -->
      <class name="jalview.renderer.seqfeatures.FeatureColourFinderTest">
        <test-method signature="testFindFeatureAtEnd()[pri:0, instance:jalview.renderer.seqfeatures.FeatureColourFinderTest@4837595f]" started-at="2023-07-02T10:11:49Z" name="testFindFeatureAtEnd" finished-at="2023-07-02T10:11:49Z" duration-ms="9" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFindFeatureAtEnd -->
        <test-method is-config="true" signature="setUpBeforeTest()[pri:0, instance:jalview.renderer.seqfeatures.FeatureColourFinderTest@4837595f]" started-at="2023-07-02T10:11:49Z" name="setUpBeforeTest" finished-at="2023-07-02T10:11:49Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpBeforeTest -->
        <test-method is-config="true" signature="setUpBeforeTest()[pri:0, instance:jalview.renderer.seqfeatures.FeatureColourFinderTest@4837595f]" started-at="2023-07-02T10:11:49Z" name="setUpBeforeTest" finished-at="2023-07-02T10:11:49Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpBeforeTest -->
        <test-method signature="testFindFeatureColour_featureGroupNotDisplayed()[pri:0, instance:jalview.renderer.seqfeatures.FeatureColourFinderTest@4837595f]" started-at="2023-07-02T10:11:49Z" name="testFindFeatureColour_featureGroupNotDisplayed" finished-at="2023-07-02T10:11:49Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFindFeatureColour_featureGroupNotDisplayed -->
        <test-method is-config="true" signature="setUpBeforeTest()[pri:0, instance:jalview.renderer.seqfeatures.FeatureColourFinderTest@4837595f]" started-at="2023-07-02T10:11:49Z" name="setUpBeforeTest" finished-at="2023-07-02T10:11:49Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpBeforeTest -->
        <test-method signature="testFindFeatureColour_contactFeature()[pri:0, instance:jalview.renderer.seqfeatures.FeatureColourFinderTest@4837595f]" started-at="2023-07-02T10:11:49Z" name="testFindFeatureColour_contactFeature" finished-at="2023-07-02T10:11:49Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFindFeatureColour_contactFeature -->
        <test-method signature="testFindFeatureColour_featureTypeNotDisplayed()[pri:0, instance:jalview.renderer.seqfeatures.FeatureColourFinderTest@4837595f]" started-at="2023-07-02T10:11:49Z" name="testFindFeatureColour_featureTypeNotDisplayed" finished-at="2023-07-02T10:11:49Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFindFeatureColour_featureTypeNotDisplayed -->
        <test-method is-config="true" signature="setUpBeforeTest()[pri:0, instance:jalview.renderer.seqfeatures.FeatureColourFinderTest@4837595f]" started-at="2023-07-02T10:11:49Z" name="setUpBeforeTest" finished-at="2023-07-02T10:11:49Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpBeforeTest -->
        <test-method is-config="true" signature="setUpBeforeTest()[pri:0, instance:jalview.renderer.seqfeatures.FeatureColourFinderTest@4837595f]" started-at="2023-07-02T10:11:49Z" name="setUpBeforeTest" finished-at="2023-07-02T10:11:49Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpBeforeTest -->
        <test-method signature="testFindFeatureColour_gapPosition()[pri:0, instance:jalview.renderer.seqfeatures.FeatureColourFinderTest@4837595f]" started-at="2023-07-02T10:11:49Z" name="testFindFeatureColour_gapPosition" finished-at="2023-07-02T10:11:49Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFindFeatureColour_gapPosition -->
        <test-method is-config="true" signature="setUpBeforeTest()[pri:0, instance:jalview.renderer.seqfeatures.FeatureColourFinderTest@4837595f]" started-at="2023-07-02T10:11:49Z" name="setUpBeforeTest" finished-at="2023-07-02T10:11:49Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpBeforeTest -->
        <test-method signature="testFindFeatureColour_graduatedFeatureColour()[pri:0, instance:jalview.renderer.seqfeatures.FeatureColourFinderTest@4837595f]" started-at="2023-07-02T10:11:49Z" name="testFindFeatureColour_graduatedFeatureColour" finished-at="2023-07-02T10:11:49Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFindFeatureColour_graduatedFeatureColour -->
        <test-method is-config="true" signature="setUpBeforeTest()[pri:0, instance:jalview.renderer.seqfeatures.FeatureColourFinderTest@4837595f]" started-at="2023-07-02T10:11:49Z" name="setUpBeforeTest" finished-at="2023-07-02T10:11:49Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpBeforeTest -->
        <test-method signature="testFindFeatureColour_graduatedWithThreshold()[pri:0, instance:jalview.renderer.seqfeatures.FeatureColourFinderTest@4837595f]" started-at="2023-07-02T10:11:49Z" name="testFindFeatureColour_graduatedWithThreshold" finished-at="2023-07-02T10:11:49Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFindFeatureColour_graduatedWithThreshold -->
        <test-method is-config="true" signature="setUpBeforeTest()[pri:0, instance:jalview.renderer.seqfeatures.FeatureColourFinderTest@4837595f]" started-at="2023-07-02T10:11:49Z" name="setUpBeforeTest" finished-at="2023-07-02T10:11:49Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpBeforeTest -->
        <test-method signature="testFindFeatureColour_multipleFeaturesAtPositionNoTransparency()[pri:0, instance:jalview.renderer.seqfeatures.FeatureColourFinderTest@4837595f]" started-at="2023-07-02T10:11:49Z" name="testFindFeatureColour_multipleFeaturesAtPositionNoTransparency" finished-at="2023-07-02T10:11:49Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFindFeatureColour_multipleFeaturesAtPositionNoTransparency -->
        <test-method is-config="true" signature="setUpBeforeTest()[pri:0, instance:jalview.renderer.seqfeatures.FeatureColourFinderTest@4837595f]" started-at="2023-07-02T10:11:49Z" name="setUpBeforeTest" finished-at="2023-07-02T10:11:49Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpBeforeTest -->
        <test-method signature="testFindFeatureColour_nestedFeatures()[pri:0, instance:jalview.renderer.seqfeatures.FeatureColourFinderTest@4837595f]" started-at="2023-07-02T10:11:49Z" name="testFindFeatureColour_nestedFeatures" finished-at="2023-07-02T10:11:49Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFindFeatureColour_nestedFeatures -->
        <test-method is-config="true" signature="setUpBeforeTest()[pri:0, instance:jalview.renderer.seqfeatures.FeatureColourFinderTest@4837595f]" started-at="2023-07-02T10:11:49Z" name="setUpBeforeTest" finished-at="2023-07-02T10:11:49Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpBeforeTest -->
        <test-method signature="testFindFeatureColour_noFeatures()[pri:0, instance:jalview.renderer.seqfeatures.FeatureColourFinderTest@4837595f]" started-at="2023-07-02T10:11:49Z" name="testFindFeatureColour_noFeatures" finished-at="2023-07-02T10:11:49Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFindFeatureColour_noFeatures -->
        <test-method signature="testFindFeatureColour_noFeaturesShown()[pri:0, instance:jalview.renderer.seqfeatures.FeatureColourFinderTest@4837595f]" started-at="2023-07-02T10:11:49Z" name="testFindFeatureColour_noFeaturesShown" finished-at="2023-07-02T10:11:49Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFindFeatureColour_noFeaturesShown -->
        <test-method is-config="true" signature="setUpBeforeTest()[pri:0, instance:jalview.renderer.seqfeatures.FeatureColourFinderTest@4837595f]" started-at="2023-07-02T10:11:49Z" name="setUpBeforeTest" finished-at="2023-07-02T10:11:49Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpBeforeTest -->
        <test-method signature="testFindFeatureColour_singleFeatureAtPosition()[pri:0, instance:jalview.renderer.seqfeatures.FeatureColourFinderTest@4837595f]" started-at="2023-07-02T10:11:49Z" name="testFindFeatureColour_singleFeatureAtPosition" finished-at="2023-07-02T10:11:49Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFindFeatureColour_singleFeatureAtPosition -->
        <test-method is-config="true" signature="setUpBeforeTest()[pri:0, instance:jalview.renderer.seqfeatures.FeatureColourFinderTest@4837595f]" started-at="2023-07-02T10:11:49Z" name="setUpBeforeTest" finished-at="2023-07-02T10:11:49Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpBeforeTest -->
        <test-method is-config="true" signature="setUpBeforeTest()[pri:0, instance:jalview.renderer.seqfeatures.FeatureColourFinderTest@4837595f]" started-at="2023-07-02T10:11:49Z" name="setUpBeforeTest" finished-at="2023-07-02T10:11:49Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpBeforeTest -->
        <test-method signature="testFindFeatureColour_singleFeatureNotAtPosition()[pri:0, instance:jalview.renderer.seqfeatures.FeatureColourFinderTest@4837595f]" started-at="2023-07-02T10:11:49Z" name="testFindFeatureColour_singleFeatureNotAtPosition" finished-at="2023-07-02T10:11:49Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFindFeatureColour_singleFeatureNotAtPosition -->
        <test-method is-config="true" signature="setUpBeforeTest()[pri:0, instance:jalview.renderer.seqfeatures.FeatureColourFinderTest@4837595f]" started-at="2023-07-02T10:11:49Z" name="setUpBeforeTest" finished-at="2023-07-02T10:11:49Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpBeforeTest -->
        <test-method signature="testFindFeatureColour_transparencySingleFeature()[pri:0, instance:jalview.renderer.seqfeatures.FeatureColourFinderTest@4837595f]" started-at="2023-07-02T10:11:49Z" name="testFindFeatureColour_transparencySingleFeature" finished-at="2023-07-02T10:11:49Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFindFeatureColour_transparencySingleFeature -->
        <test-method is-config="true" signature="setUpBeforeTest()[pri:0, instance:jalview.renderer.seqfeatures.FeatureColourFinderTest@4837595f]" started-at="2023-07-02T10:11:49Z" name="setUpBeforeTest" finished-at="2023-07-02T10:11:49Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpBeforeTest -->
        <test-method signature="testFindFeatureColour_transparencyTwoFeatures()[pri:0, instance:jalview.renderer.seqfeatures.FeatureColourFinderTest@4837595f]" started-at="2023-07-02T10:11:49Z" name="testFindFeatureColour_transparencyTwoFeatures" finished-at="2023-07-02T10:11:49Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFindFeatureColour_transparencyTwoFeatures -->
        <test-method is-config="true" signature="setUpBeforeTest()[pri:0, instance:jalview.renderer.seqfeatures.FeatureColourFinderTest@4837595f]" started-at="2023-07-02T10:11:49Z" name="setUpBeforeTest" finished-at="2023-07-02T10:11:49Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpBeforeTest -->
        <test-method signature="testNoFeaturesDisplayed()[pri:0, instance:jalview.renderer.seqfeatures.FeatureColourFinderTest@4837595f]" started-at="2023-07-02T10:11:49Z" name="testNoFeaturesDisplayed" finished-at="2023-07-02T10:11:49Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testNoFeaturesDisplayed -->
      </class> <!-- jalview.renderer.seqfeatures.FeatureColourFinderTest -->
      <class name="jalview.schemes.UserColourSchemeTest">
        <test-method signature="testConstructor_coloursArray()[pri:0, instance:jalview.schemes.UserColourSchemeTest@31198ceb]" started-at="2023-07-02T10:12:21Z" name="testConstructor_coloursArray" finished-at="2023-07-02T10:12:21Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testConstructor_coloursArray -->
        <test-method signature="testParseAppletParameter()[pri:0, instance:jalview.schemes.UserColourSchemeTest@31198ceb]" started-at="2023-07-02T10:12:21Z" name="testParseAppletParameter" finished-at="2023-07-02T10:12:21Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testParseAppletParameter -->
        <test-method is-config="true" signature="setUpJvOptionPane()[pri:0, instance:jalview.schemes.UserColourSchemeTest@31198ceb]" started-at="2023-07-02T10:12:21Z" name="setUpJvOptionPane" finished-at="2023-07-02T10:12:21Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpJvOptionPane -->
        <test-method signature="testToAppletParameter()[pri:0, instance:jalview.schemes.UserColourSchemeTest@31198ceb]" started-at="2023-07-02T10:12:21Z" name="testToAppletParameter" finished-at="2023-07-02T10:12:21Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testToAppletParameter -->
      </class> <!-- jalview.schemes.UserColourSchemeTest -->
      <class name="jalview.ext.ensembl.EnsemblSeqProxyTest">
        <test-method is-config="true" signature="setUp()[pri:0, instance:jalview.ext.ensembl.EnsemblSeqProxyTest@3c1e3314]" started-at="2023-07-02T10:11:38Z" name="setUp" finished-at="2023-07-02T10:11:38Z" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="setUpJvOptionPane()[pri:0, instance:jalview.ext.ensembl.EnsemblSeqProxyTest@3c1e3314]" started-at="2023-07-02T10:11:38Z" name="setUpJvOptionPane" finished-at="2023-07-02T10:11:38Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpJvOptionPane -->
        <test-method signature="getGenomicRangesFromFeatures()[pri:0, instance:jalview.ext.ensembl.EnsemblSeqProxyTest@3c1e3314]" started-at="2023-07-02T10:11:38Z" name="getGenomicRangesFromFeatures" finished-at="2023-07-02T10:11:38Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getGenomicRangesFromFeatures -->
        <test-method signature="testReverseComplementAllele()[pri:0, instance:jalview.ext.ensembl.EnsemblSeqProxyTest@3c1e3314]" started-at="2023-07-02T10:11:38Z" name="testReverseComplementAllele" finished-at="2023-07-02T10:11:38Z" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testReverseComplementAllele -->
        <test-method signature="testReverseComplementAlleles()[pri:0, instance:jalview.ext.ensembl.EnsemblSeqProxyTest@3c1e3314]" started-at="2023-07-02T10:11:38Z" name="testReverseComplementAlleles" finished-at="2023-07-02T10:11:38Z" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testReverseComplementAlleles -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:jalview.ext.ensembl.EnsemblSeqProxyTest@3c1e3314]" started-at="2023-07-02T10:11:38Z" name="tearDown" finished-at="2023-07-02T10:11:38Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- jalview.ext.ensembl.EnsemblSeqProxyTest -->
      <class name="jalview.ext.ensembl.EnsemblGenomeTest">
        <test-method is-config="true" signature="setUpJvOptionPane()[pri:0, instance:jalview.ext.ensembl.EnsemblGenomeTest@3e792ce3]" started-at="2023-07-02T10:11:54Z" name="setUpJvOptionPane" finished-at="2023-07-02T10:11:54Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpJvOptionPane -->
        <test-method signature="testGetGenomicRangesFromFeatures()[pri:0, instance:jalview.ext.ensembl.EnsemblGenomeTest@3e792ce3]" started-at="2023-07-02T10:11:54Z" name="testGetGenomicRangesFromFeatures" finished-at="2023-07-02T10:11:54Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetGenomicRangesFromFeatures -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:jalview.ext.ensembl.EnsemblGenomeTest@3e792ce3]" started-at="2023-07-02T10:11:54Z" name="setUp" finished-at="2023-07-02T10:11:54Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="testGetIdentifyingFeatures()[pri:0, instance:jalview.ext.ensembl.EnsemblGenomeTest@3e792ce3]" started-at="2023-07-02T10:11:54Z" name="testGetIdentifyingFeatures" finished-at="2023-07-02T10:11:54Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetIdentifyingFeatures -->
        <test-method signature="testRetainFeature()[pri:0, instance:jalview.ext.ensembl.EnsemblGenomeTest@3e792ce3]" started-at="2023-07-02T10:11:54Z" name="testRetainFeature" finished-at="2023-07-02T10:11:54Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRetainFeature -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:jalview.ext.ensembl.EnsemblGenomeTest@3e792ce3]" started-at="2023-07-02T10:11:54Z" name="tearDown" finished-at="2023-07-02T10:11:54Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- jalview.ext.ensembl.EnsemblGenomeTest -->
      <class name="jalview.gui.AppVarnaTest">
        <test-method signature="testReplaceOddGaps()[pri:0, instance:jalview.gui.AppVarnaTest@61e3a1fd]" started-at="2023-07-02T10:12:07Z" name="testReplaceOddGaps" finished-at="2023-07-02T10:12:07Z" duration-ms="5" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testReplaceOddGaps -->
        <test-method is-config="true" signature="setUpJvOptionPane()[pri:0, instance:jalview.gui.AppVarnaTest@61e3a1fd]" started-at="2023-07-02T10:12:07Z" name="setUpJvOptionPane" finished-at="2023-07-02T10:12:07Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpJvOptionPane -->
      </class> <!-- jalview.gui.AppVarnaTest -->
      <class name="jalview.ws.dbsources.RfamSeedTest">
        <test-method is-config="true" signature="setUp()[pri:0, instance:jalview.ws.dbsources.RfamSeedTest@64d7b720]" started-at="2023-07-02T10:11:41Z" name="setUp" finished-at="2023-07-02T10:11:41Z" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="testGetURL()[pri:0, instance:jalview.ws.dbsources.RfamSeedTest@64d7b720]" started-at="2023-07-02T10:11:41Z" name="testGetURL" finished-at="2023-07-02T10:11:41Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetURL -->
      </class> <!-- jalview.ws.dbsources.RfamSeedTest -->
      <class name="jalview.renderer.ScaleRendererTest">
        <test-method signature="testCalculateMarks()[pri:0, instance:jalview.renderer.ScaleRendererTest@c0b41d6]" started-at="2023-07-02T10:11:45Z" name="testCalculateMarks" finished-at="2023-07-02T10:11:45Z" duration-ms="28" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCalculateMarks -->
      </class> <!-- jalview.renderer.ScaleRendererTest -->
      <class name="jalview.ext.ensembl.EnsemblCdnaTest">
        <test-method signature="testGetGenomicRangesFromFeatures()[pri:0, instance:jalview.ext.ensembl.EnsemblCdnaTest@2c282004]" started-at="2023-07-02T10:11:41Z" name="testGetGenomicRangesFromFeatures" finished-at="2023-07-02T10:11:41Z" duration-ms="3" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetGenomicRangesFromFeatures -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:jalview.ext.ensembl.EnsemblCdnaTest@2c282004]" started-at="2023-07-02T10:11:41Z" name="setUp" finished-at="2023-07-02T10:11:41Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="setUpJvOptionPane()[pri:0, instance:jalview.ext.ensembl.EnsemblCdnaTest@2c282004]" started-at="2023-07-02T10:11:41Z" name="setUpJvOptionPane" finished-at="2023-07-02T10:11:41Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpJvOptionPane -->
        <test-method signature="testGetGenomicRangesFromFeatures_mixedStrand()[pri:0, instance:jalview.ext.ensembl.EnsemblCdnaTest@2c282004]" started-at="2023-07-02T10:11:41Z" name="testGetGenomicRangesFromFeatures_mixedStrand" finished-at="2023-07-02T10:11:41Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetGenomicRangesFromFeatures_mixedStrand -->
        <test-method signature="testGetGenomicRangesFromFeatures_reverseStrand()[pri:0, instance:jalview.ext.ensembl.EnsemblCdnaTest@2c282004]" started-at="2023-07-02T10:11:41Z" name="testGetGenomicRangesFromFeatures_reverseStrand" finished-at="2023-07-02T10:11:41Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetGenomicRangesFromFeatures_reverseStrand -->
        <test-method signature="testGetIdentifyingFeatures()[pri:0, instance:jalview.ext.ensembl.EnsemblCdnaTest@2c282004]" started-at="2023-07-02T10:11:41Z" name="testGetIdentifyingFeatures" finished-at="2023-07-02T10:11:41Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetIdentifyingFeatures -->
        <test-method signature="testRetainFeature()[pri:0, instance:jalview.ext.ensembl.EnsemblCdnaTest@2c282004]" started-at="2023-07-02T10:11:41Z" name="testRetainFeature" finished-at="2023-07-02T10:11:41Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRetainFeature -->
        <test-method signature="testIsValidReference()[pri:0, instance:jalview.ext.ensembl.EnsemblCdnaTest@2c282004]" started-at="2023-07-02T10:11:41Z" name="testIsValidReference" finished-at="2023-07-02T10:11:41Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testIsValidReference -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:jalview.ext.ensembl.EnsemblCdnaTest@2c282004]" started-at="2023-07-02T10:11:41Z" name="tearDown" finished-at="2023-07-02T10:11:41Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- jalview.ext.ensembl.EnsemblCdnaTest -->
      <class name="jalview.io.AnnotationFileIOTest">
        <test-method is-config="true" signature="setUpJvOptionPane()[pri:0, instance:jalview.io.AnnotationFileIOTest@3b65e559]" started-at="2023-07-02T10:12:07Z" name="setUpJvOptionPane" finished-at="2023-07-02T10:12:07Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpJvOptionPane -->
        <test-method signature="exampleAnnotationFileIO()[pri:0, instance:jalview.io.AnnotationFileIOTest@3b65e559]" started-at="2023-07-02T10:12:07Z" name="exampleAnnotationFileIO" finished-at="2023-07-02T10:12:07Z" duration-ms="154" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- exampleAnnotationFileIO -->
        <test-method signature="testAnnotateAlignmentView()[pri:0, instance:jalview.io.AnnotationFileIOTest@3b65e559]" started-at="2023-07-02T10:12:07Z" name="testAnnotateAlignmentView" finished-at="2023-07-02T10:12:07Z" duration-ms="14" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAnnotateAlignmentView -->
      </class> <!-- jalview.io.AnnotationFileIOTest -->
      <class name="jalview.urls.DesktopUrlProviderFactoryTest">
        <test-method signature="testCreateUrlProvider()[pri:0, instance:jalview.urls.DesktopUrlProviderFactoryTest@1af05b03]" started-at="2023-07-02T10:11:57Z" name="testCreateUrlProvider" finished-at="2023-07-02T10:11:57Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCreateUrlProvider -->
        <test-method is-config="true" signature="setup()[pri:0, instance:jalview.urls.DesktopUrlProviderFactoryTest@1af05b03]" started-at="2023-07-02T10:11:57Z" name="setup" finished-at="2023-07-02T10:11:57Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
      </class> <!-- jalview.urls.DesktopUrlProviderFactoryTest -->
      <class name="jalview.fts.service.pdb.PDBFTSRestClientTest">
        <test-method is-config="true" signature="setUpJvOptionPane()[pri:0, instance:jalview.fts.service.pdb.PDBFTSRestClientTest@61a5b4ae]" started-at="2023-07-02T10:11:44Z" name="setUpJvOptionPane" finished-at="2023-07-02T10:11:44Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpJvOptionPane -->
        <test-method signature="getPDBDocFieldsAsCommaDelimitedStringTest()[pri:0, instance:jalview.fts.service.pdb.PDBFTSRestClientTest@61a5b4ae]" started-at="2023-07-02T10:11:44Z" name="getPDBDocFieldsAsCommaDelimitedStringTest" finished-at="2023-07-02T10:11:44Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getPDBDocFieldsAsCommaDelimitedStringTest -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:jalview.fts.service.pdb.PDBFTSRestClientTest@61a5b4ae]" started-at="2023-07-02T10:11:44Z" name="setUp" finished-at="2023-07-02T10:11:44Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:jalview.fts.service.pdb.PDBFTSRestClientTest@61a5b4ae]" started-at="2023-07-02T10:11:44Z" name="setUp" finished-at="2023-07-02T10:11:44Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:jalview.fts.service.pdb.PDBFTSRestClientTest@61a5b4ae]" started-at="2023-07-02T10:11:44Z" name="tearDown" finished-at="2023-07-02T10:11:44Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:jalview.fts.service.pdb.PDBFTSRestClientTest@61a5b4ae]" started-at="2023-07-02T10:11:44Z" name="tearDown" finished-at="2023-07-02T10:11:44Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method signature="getPDBIdColumIndexTest()[pri:0, instance:jalview.fts.service.pdb.PDBFTSRestClientTest@61a5b4ae]" started-at="2023-07-02T10:11:44Z" name="getPDBIdColumIndexTest" finished-at="2023-07-02T10:11:44Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getPDBIdColumIndexTest -->
      </class> <!-- jalview.fts.service.pdb.PDBFTSRestClientTest -->
      <class name="jalview.util.MappingUtilsTest">
        <test-method is-config="true" signature="setUpJvOptionPane()[pri:0, instance:jalview.util.MappingUtilsTest@54e81b21]" started-at="2023-07-02T10:12:21Z" name="setUpJvOptionPane" finished-at="2023-07-02T10:12:21Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpJvOptionPane -->
        <test-method signature="testBuildSearchResults()[pri:0, instance:jalview.util.MappingUtilsTest@54e81b21]" started-at="2023-07-02T10:12:21Z" name="testBuildSearchResults" finished-at="2023-07-02T10:12:21Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testBuildSearchResults -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:jalview.util.MappingUtilsTest@54e81b21]" started-at="2023-07-02T10:12:21Z" name="setUp" finished-at="2023-07-02T10:12:21Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="testBuildSearchResults_withIntron()[pri:0, instance:jalview.util.MappingUtilsTest@54e81b21]" started-at="2023-07-02T10:12:21Z" name="testBuildSearchResults_withIntron" finished-at="2023-07-02T10:12:21Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testBuildSearchResults_withIntron -->
        <test-method signature="testContains()[pri:0, instance:jalview.util.MappingUtilsTest@54e81b21]" started-at="2023-07-02T10:12:21Z" name="testContains" finished-at="2023-07-02T10:12:21Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testContains -->
        <test-method signature="testFindMappingsForSequenceAndOthers()[pri:0, instance:jalview.util.MappingUtilsTest@54e81b21]" started-at="2023-07-02T10:12:21Z" name="testFindMappingsForSequenceAndOthers" finished-at="2023-07-02T10:12:21Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFindMappingsForSequenceAndOthers -->
        <test-method signature="testFlattenRanges()[pri:0, instance:jalview.util.MappingUtilsTest@54e81b21]" started-at="2023-07-02T10:12:21Z" name="testFlattenRanges" finished-at="2023-07-02T10:12:21Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFlattenRanges -->
        <test-method signature="testFlattenRanges_reverseStrand()[pri:0, instance:jalview.util.MappingUtilsTest@54e81b21]" started-at="2023-07-02T10:12:21Z" name="testFlattenRanges_reverseStrand" finished-at="2023-07-02T10:12:21Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFlattenRanges_reverseStrand -->
        <test-method signature="testFindMappingsForSequence()[pri:0, instance:jalview.util.MappingUtilsTest@54e81b21]" started-at="2023-07-02T10:12:21Z" name="testFindMappingsForSequence" finished-at="2023-07-02T10:12:21Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFindMappingsForSequence -->
        <test-method signature="testFindOverlap()[pri:0, instance:jalview.util.MappingUtilsTest@54e81b21]" started-at="2023-07-02T10:12:21Z" name="testFindOverlap" finished-at="2023-07-02T10:12:21Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFindOverlap -->
        <test-method signature="testGetLength()[pri:0, instance:jalview.util.MappingUtilsTest@54e81b21]" started-at="2023-07-02T10:12:21Z" name="testGetLength" finished-at="2023-07-02T10:12:21Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetLength -->
        <test-method signature="testMapColumnSelection_dnaToProtein()[pri:0, instance:jalview.util.MappingUtilsTest@54e81b21]" started-at="2023-07-02T10:12:21Z" name="testMapColumnSelection_dnaToProtein" finished-at="2023-07-02T10:12:21Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMapColumnSelection_dnaToProtein -->
        <test-method signature="testMapColumnSelection_hiddenColumns()[pri:0, instance:jalview.util.MappingUtilsTest@54e81b21]" started-at="2023-07-02T10:12:21Z" name="testMapColumnSelection_hiddenColumns" finished-at="2023-07-02T10:12:21Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMapColumnSelection_hiddenColumns -->
        <test-method signature="testMapColumnSelection_null()[pri:0, instance:jalview.util.MappingUtilsTest@54e81b21]" started-at="2023-07-02T10:12:21Z" name="testMapColumnSelection_null" finished-at="2023-07-02T10:12:21Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMapColumnSelection_null -->
        <test-method signature="testMapColumnSelection_proteinToDna()[pri:0, instance:jalview.util.MappingUtilsTest@54e81b21]" started-at="2023-07-02T10:12:21Z" name="testMapColumnSelection_proteinToDna" finished-at="2023-07-02T10:12:21Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMapColumnSelection_proteinToDna -->
        <test-method signature="testMapEditCommand()[pri:0, instance:jalview.util.MappingUtilsTest@54e81b21]" started-at="2023-07-02T10:12:21Z" name="testMapEditCommand" finished-at="2023-07-02T10:12:21Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMapEditCommand -->
        <test-method signature="testMapSequenceGroup_columns()[pri:0, instance:jalview.util.MappingUtilsTest@54e81b21]" started-at="2023-07-02T10:12:21Z" name="testMapSequenceGroup_columns" finished-at="2023-07-02T10:12:21Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMapSequenceGroup_columns -->
        <test-method signature="testMapSequenceGroup_region()[pri:0, instance:jalview.util.MappingUtilsTest@54e81b21]" started-at="2023-07-02T10:12:21Z" name="testMapSequenceGroup_region" finished-at="2023-07-02T10:12:21Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMapSequenceGroup_region -->
        <test-method signature="testMapSequenceGroup_sequences()[pri:0, instance:jalview.util.MappingUtilsTest@54e81b21]" started-at="2023-07-02T10:12:21Z" name="testMapSequenceGroup_sequences" finished-at="2023-07-02T10:12:21Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMapSequenceGroup_sequences -->
        <test-method signature="testMapSequenceGroup_sharedDataset()[pri:0, instance:jalview.util.MappingUtilsTest@54e81b21]" started-at="2023-07-02T10:12:21Z" name="testMapSequenceGroup_sharedDataset" finished-at="2023-07-02T10:12:21Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMapSequenceGroup_sharedDataset -->
        <test-method signature="testRangeContains()[pri:0, instance:jalview.util.MappingUtilsTest@54e81b21]" started-at="2023-07-02T10:12:21Z" name="testRangeContains" finished-at="2023-07-02T10:12:21Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRangeContains -->
        <test-method signature="testRemoveStartPositions_reverseStrand()[pri:0, instance:jalview.util.MappingUtilsTest@54e81b21]" started-at="2023-07-02T10:12:21Z" name="testRemoveStartPositions_reverseStrand" finished-at="2023-07-02T10:12:21Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemoveStartPositions_reverseStrand -->
        <test-method signature="testRemoveStartPositions()[pri:0, instance:jalview.util.MappingUtilsTest@54e81b21]" started-at="2023-07-02T10:12:21Z" name="testRemoveStartPositions" finished-at="2023-07-02T10:12:21Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemoveStartPositions -->
        <test-method signature="testRemoveEndPositions()[pri:0, instance:jalview.util.MappingUtilsTest@54e81b21]" started-at="2023-07-02T10:12:21Z" name="testRemoveEndPositions" finished-at="2023-07-02T10:12:21Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemoveEndPositions -->
      </class> <!-- jalview.util.MappingUtilsTest -->
      <class name="jalview.analysis.AAFrequencyTest">
        <test-method is-config="true" signature="setUpJvOptionPane()[pri:0, instance:jalview.analysis.AAFrequencyTest@6e0ff644]" started-at="2023-07-02T10:11:38Z" name="setUpJvOptionPane" finished-at="2023-07-02T10:11:38Z" duration-ms="3" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpJvOptionPane -->
        <test-method signature="testCalculate_noProfile()[pri:0, instance:jalview.analysis.AAFrequencyTest@6e0ff644]" started-at="2023-07-02T10:11:38Z" name="testCalculate_noProfile" finished-at="2023-07-02T10:11:38Z" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCalculate_noProfile -->
        <test-method signature="testCalculate_withProfile()[pri:0, instance:jalview.analysis.AAFrequencyTest@6e0ff644]" started-at="2023-07-02T10:11:38Z" name="testCalculate_withProfile" finished-at="2023-07-02T10:11:38Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCalculate_withProfile -->
        <test-method signature="testCompleteConsensus_ignoreGaps_noLogo()[pri:0, instance:jalview.analysis.AAFrequencyTest@6e0ff644]" started-at="2023-07-02T10:11:38Z" name="testCompleteConsensus_ignoreGaps_noLogo" finished-at="2023-07-02T10:11:38Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCompleteConsensus_ignoreGaps_noLogo -->
        <test-method signature="testCompleteConsensus_includeGaps_showLogo()[pri:0, instance:jalview.analysis.AAFrequencyTest@6e0ff644]" started-at="2023-07-02T10:11:38Z" name="testCompleteConsensus_includeGaps_showLogo" finished-at="2023-07-02T10:11:38Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCompleteConsensus_includeGaps_showLogo -->
        <test-method signature="testExtractCdnaProfile()[pri:0, instance:jalview.analysis.AAFrequencyTest@6e0ff644]" started-at="2023-07-02T10:11:38Z" name="testExtractCdnaProfile" finished-at="2023-07-02T10:11:38Z" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testExtractCdnaProfile -->
        <test-method signature="testExtractCdnaProfile_countGaps()[pri:0, instance:jalview.analysis.AAFrequencyTest@6e0ff644]" started-at="2023-07-02T10:11:38Z" name="testExtractCdnaProfile_countGaps" finished-at="2023-07-02T10:11:38Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testExtractCdnaProfile_countGaps -->
        <test-method signature="testExtractProfile()[pri:0, instance:jalview.analysis.AAFrequencyTest@6e0ff644]" started-at="2023-07-02T10:11:38Z" name="testExtractProfile" finished-at="2023-07-02T10:11:38Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testExtractProfile -->
        <test-method signature="testExtractProfile_countGaps()[pri:0, instance:jalview.analysis.AAFrequencyTest@6e0ff644]" started-at="2023-07-02T10:11:38Z" name="testExtractProfile_countGaps" finished-at="2023-07-02T10:11:38Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testExtractProfile_countGaps -->
      </class> <!-- jalview.analysis.AAFrequencyTest -->
      <class name="jalview.gui.ProgressBarTest">
        <test-method is-config="true" signature="setUpJvOptionPane()[pri:0, instance:jalview.gui.ProgressBarTest@1bb9aa43]" started-at="2023-07-02T10:11:54Z" name="setUpJvOptionPane" finished-at="2023-07-02T10:11:54Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpJvOptionPane -->
        <test-method signature="testConstructor_prematureInstantiation()[pri:0, instance:jalview.gui.ProgressBarTest@1bb9aa43]" started-at="2023-07-02T10:11:54Z" name="testConstructor_prematureInstantiation" finished-at="2023-07-02T10:11:54Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testConstructor_prematureInstantiation -->
        <test-method signature="testConstructor_wrongLayout()[pri:0, instance:jalview.gui.ProgressBarTest@1bb9aa43]" started-at="2023-07-02T10:11:54Z" name="testConstructor_wrongLayout" finished-at="2023-07-02T10:11:54Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testConstructor_wrongLayout -->
        <test-method signature="testSetProgressBar()[pri:0, instance:jalview.gui.ProgressBarTest@1bb9aa43]" started-at="2023-07-02T10:11:54Z" name="testSetProgressBar" finished-at="2023-07-02T10:11:54Z" duration-ms="70" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSetProgressBar -->
      </class> <!-- jalview.gui.ProgressBarTest -->
      <class name="jalview.structure.Mapping">
        <test-method is-config="true" signature="setUpJvOptionPane()[pri:0, instance:jalview.structure.Mapping@7726e185]" started-at="2023-07-02T10:11:39Z" name="setUpJvOptionPane" finished-at="2023-07-02T10:11:39Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpJvOptionPane -->
        <test-method signature="compareTransferredToRefPDBAnnot()[pri:0, instance:jalview.structure.Mapping@7726e185]" started-at="2023-07-02T10:11:39Z" name="compareTransferredToRefPDBAnnot" finished-at="2023-07-02T10:11:41Z" duration-ms="1378" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- compareTransferredToRefPDBAnnot -->
        <test-method signature="mapFer1From3W5V()[pri:0, instance:jalview.structure.Mapping@7726e185]" started-at="2023-07-02T10:11:41Z" name="mapFer1From3W5V" finished-at="2023-07-02T10:11:41Z" duration-ms="341" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- mapFer1From3W5V -->
      </class> <!-- jalview.structure.Mapping -->
      <class name="jalview.urls.UrlLinkDisplayTest">
        <test-method signature="testGetSetValue()[pri:0, instance:jalview.urls.UrlLinkDisplayTest@1ad777f]" started-at="2023-07-02T10:12:00Z" name="testGetSetValue" finished-at="2023-07-02T10:12:00Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetSetValue -->
        <test-method signature="getValue()[pri:0, instance:jalview.urls.UrlLinkDisplayTest@1ad777f]" started-at="2023-07-02T10:12:00Z" name="getValue" finished-at="2023-07-02T10:12:00Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getValue -->
        <test-method signature="testDisplayColumnNames()[pri:0, instance:jalview.urls.UrlLinkDisplayTest@1ad777f]" started-at="2023-07-02T10:12:00Z" name="testDisplayColumnNames" finished-at="2023-07-02T10:12:00Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testDisplayColumnNames -->
        <test-method signature="testDescription()[pri:0, instance:jalview.urls.UrlLinkDisplayTest@1ad777f]" started-at="2023-07-02T10:12:00Z" name="testDescription" finished-at="2023-07-02T10:12:00Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testDescription -->
        <test-method signature="testIsEditable()[pri:0, instance:jalview.urls.UrlLinkDisplayTest@1ad777f]" started-at="2023-07-02T10:12:00Z" name="testIsEditable" finished-at="2023-07-02T10:12:00Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testIsEditable -->
        <test-method signature="testUrl()[pri:0, instance:jalview.urls.UrlLinkDisplayTest@1ad777f]" started-at="2023-07-02T10:12:00Z" name="testUrl" finished-at="2023-07-02T10:12:00Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testUrl -->
        <test-method signature="testName()[pri:0, instance:jalview.urls.UrlLinkDisplayTest@1ad777f]" started-at="2023-07-02T10:12:00Z" name="testName" finished-at="2023-07-02T10:12:00Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testName -->
      </class> <!-- jalview.urls.UrlLinkDisplayTest -->
      <class name="jalview.datamodel.SearchResultsTest">
        <test-method signature="testAddResult()[pri:0, instance:jalview.datamodel.SearchResultsTest@15deb1dc]" started-at="2023-07-02T10:12:02Z" name="testAddResult" finished-at="2023-07-02T10:12:02Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAddResult -->
        <test-method is-config="true" signature="setUpJvOptionPane()[pri:0, instance:jalview.datamodel.SearchResultsTest@15deb1dc]" started-at="2023-07-02T10:12:02Z" name="setUpJvOptionPane" finished-at="2023-07-02T10:12:02Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpJvOptionPane -->
        <test-method signature="testEquals_orderDiffers()[pri:0, instance:jalview.datamodel.SearchResultsTest@15deb1dc]" started-at="2023-07-02T10:12:02Z" name="testEquals_orderDiffers" finished-at="2023-07-02T10:12:02Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testEquals_orderDiffers -->
        <test-method signature="testHashcode()[pri:0, instance:jalview.datamodel.SearchResultsTest@15deb1dc]" started-at="2023-07-02T10:12:02Z" name="testHashcode" finished-at="2023-07-02T10:12:02Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testHashcode -->
        <test-method signature="testEquals()[pri:0, instance:jalview.datamodel.SearchResultsTest@15deb1dc]" started-at="2023-07-02T10:12:02Z" name="testEquals" finished-at="2023-07-02T10:12:02Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testEquals -->
        <test-method signature="testEquals_distinctSequences()[pri:0, instance:jalview.datamodel.SearchResultsTest@15deb1dc]" started-at="2023-07-02T10:12:02Z" name="testEquals_distinctSequences" finished-at="2023-07-02T10:12:02Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testEquals_distinctSequences -->
        <test-method signature="testMarkColumns()[pri:0, instance:jalview.datamodel.SearchResultsTest@15deb1dc]" started-at="2023-07-02T10:12:02Z" name="testMarkColumns" finished-at="2023-07-02T10:12:02Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMarkColumns -->
        <test-method signature="testInvolvesSequence()[pri:0, instance:jalview.datamodel.SearchResultsTest@15deb1dc]" started-at="2023-07-02T10:12:02Z" name="testInvolvesSequence" finished-at="2023-07-02T10:12:02Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testInvolvesSequence -->
        <test-method signature="testMatchContains()[pri:0, instance:jalview.datamodel.SearchResultsTest@15deb1dc]" started-at="2023-07-02T10:12:02Z" name="testMatchContains" finished-at="2023-07-02T10:12:02Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMatchContains -->
        <test-method signature="testMatchConstructor()[pri:0, instance:jalview.datamodel.SearchResultsTest@15deb1dc]" started-at="2023-07-02T10:12:02Z" name="testMatchConstructor" finished-at="2023-07-02T10:12:02Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMatchConstructor -->
        <test-method signature="testToString()[pri:0, instance:jalview.datamodel.SearchResultsTest@15deb1dc]" started-at="2023-07-02T10:12:02Z" name="testToString" finished-at="2023-07-02T10:12:02Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testToString -->
      </class> <!-- jalview.datamodel.SearchResultsTest -->
      <class name="jalview.datamodel.AlignmentViewTest">
        <test-method is-config="true" signature="setUpJvOptionPane()[pri:0, instance:jalview.datamodel.AlignmentViewTest@6b85300e]" started-at="2023-07-02T10:13:44Z" name="setUpJvOptionPane" finished-at="2023-07-02T10:13:44Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpJvOptionPane -->
        <test-method signature="testGetVisibleAlignmentGapChar()[pri:0, instance:jalview.datamodel.AlignmentViewTest@6b85300e]" started-at="2023-07-02T10:13:44Z" name="testGetVisibleAlignmentGapChar" finished-at="2023-07-02T10:13:44Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetVisibleAlignmentGapChar -->
        <test-method signature="testGetVisibleContigs()[pri:0, instance:jalview.datamodel.AlignmentViewTest@6b85300e]" started-at="2023-07-02T10:13:44Z" name="testGetVisibleContigs" finished-at="2023-07-02T10:13:44Z" duration-ms="13" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetVisibleContigs -->
      </class> <!-- jalview.datamodel.AlignmentViewTest -->
      <class name="jalview.analysis.RnaTest">
        <test-method signature="testGetHelixMap_oneHelix()[pri:0, instance:jalview.analysis.RnaTest@4d0402b]" started-at="2023-07-02T10:12:07Z" name="testGetHelixMap_oneHelix" finished-at="2023-07-02T10:12:07Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHelixMap_oneHelix -->
        <test-method is-config="true" signature="setUpJvOptionPane()[pri:0, instance:jalview.analysis.RnaTest@4d0402b]" started-at="2023-07-02T10:12:07Z" name="setUpJvOptionPane" finished-at="2023-07-02T10:12:07Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpJvOptionPane -->
        <test-method signature="testGetHelixMap_twoHelices()[pri:0, instance:jalview.analysis.RnaTest@4d0402b]" started-at="2023-07-02T10:12:07Z" name="testGetHelixMap_twoHelices" finished-at="2023-07-02T10:12:07Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHelixMap_twoHelices -->
        <test-method signature="testGetRNASecStrucState()[pri:0, instance:jalview.analysis.RnaTest@4d0402b]" started-at="2023-07-02T10:12:07Z" name="testGetRNASecStrucState" finished-at="2023-07-02T10:12:07Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetRNASecStrucState -->
        <test-method signature="testGetMatchingOpeningParenthesis()[pri:0, instance:jalview.analysis.RnaTest@4d0402b]" started-at="2023-07-02T10:12:07Z" name="testGetMatchingOpeningParenthesis" finished-at="2023-07-02T10:12:07Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetMatchingOpeningParenthesis -->
        <test-method signature="testGetSimpleBPs()[pri:0, instance:jalview.analysis.RnaTest@4d0402b]" started-at="2023-07-02T10:12:07Z" name="testGetSimpleBPs" finished-at="2023-07-02T10:12:07Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetSimpleBPs -->
        <test-method signature="testGetSimpleBPs_unmatchedCloser()[pri:0, instance:jalview.analysis.RnaTest@4d0402b]" started-at="2023-07-02T10:12:07Z" name="testGetSimpleBPs_unmatchedCloser" finished-at="2023-07-02T10:12:07Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetSimpleBPs_unmatchedCloser -->
        <test-method signature="testGetSimpleBPs_unmatchedOpener()[pri:0, instance:jalview.analysis.RnaTest@4d0402b]" started-at="2023-07-02T10:12:07Z" name="testGetSimpleBPs_unmatchedOpener" finished-at="2023-07-02T10:12:07Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetSimpleBPs_unmatchedOpener -->
        <test-method signature="testIsCanonicalOrWobblePair()[pri:0, instance:jalview.analysis.RnaTest@4d0402b]" started-at="2023-07-02T10:12:07Z" name="testIsCanonicalOrWobblePair" finished-at="2023-07-02T10:12:07Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testIsCanonicalOrWobblePair -->
        <test-method signature="testIsClosingParenthesis()[pri:0, instance:jalview.analysis.RnaTest@4d0402b]" started-at="2023-07-02T10:12:07Z" name="testIsClosingParenthesis" finished-at="2023-07-02T10:12:07Z" duration-ms="3" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testIsClosingParenthesis -->
        <test-method signature="testIsCanonicalPair()[pri:0, instance:jalview.analysis.RnaTest@4d0402b]" started-at="2023-07-02T10:12:07Z" name="testIsCanonicalPair" finished-at="2023-07-02T10:12:07Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testIsCanonicalPair -->
        <test-method signature="testIsOpeningParenthesis()[pri:0, instance:jalview.analysis.RnaTest@4d0402b]" started-at="2023-07-02T10:12:07Z" name="testIsOpeningParenthesis" finished-at="2023-07-02T10:12:07Z" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testIsOpeningParenthesis -->
        <test-method signature="testIsRnaSecondaryStructureSymbol()[pri:0, instance:jalview.analysis.RnaTest@4d0402b]" started-at="2023-07-02T10:12:07Z" name="testIsRnaSecondaryStructureSymbol" finished-at="2023-07-02T10:12:07Z" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testIsRnaSecondaryStructureSymbol -->
      </class> <!-- jalview.analysis.RnaTest -->
      <class name="jalview.viewmodel.ViewportRangesTest">
        <test-method is-config="true" signature="setUp()[pri:0, instance:jalview.viewmodel.ViewportRangesTest@76b0ae1b]" started-at="2023-07-02T10:13:44Z" name="setUp" finished-at="2023-07-02T10:13:44Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="testEventFiring()[pri:0, instance:jalview.viewmodel.ViewportRangesTest@76b0ae1b]" started-at="2023-07-02T10:13:44Z" name="testEventFiring" finished-at="2023-07-02T10:13:44Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testEventFiring -->
        <test-method is-config="true" signature="cleanUp()[pri:0, instance:jalview.viewmodel.ViewportRangesTest@76b0ae1b]" started-at="2023-07-02T10:13:44Z" name="cleanUp" finished-at="2023-07-02T10:13:44Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cleanUp -->
        <test-method signature="testGetWrappedMaxScroll()[pri:0, instance:jalview.viewmodel.ViewportRangesTest@76b0ae1b]" started-at="2023-07-02T10:13:44Z" name="testGetWrappedMaxScroll" finished-at="2023-07-02T10:13:44Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetWrappedMaxScroll -->
        <test-method is-config="true" signature="cleanUp()[pri:0, instance:jalview.viewmodel.ViewportRangesTest@76b0ae1b]" started-at="2023-07-02T10:13:44Z" name="cleanUp" finished-at="2023-07-02T10:13:44Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cleanUp -->
        <test-method signature="testGetAbsoluteAlignmentWidth()[pri:0, instance:jalview.viewmodel.ViewportRangesTest@76b0ae1b]" started-at="2023-07-02T10:13:44Z" name="testGetAbsoluteAlignmentWidth" finished-at="2023-07-02T10:13:44Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetAbsoluteAlignmentWidth -->
        <test-method signature="testGetAbsoluteAlignmentHeight()[pri:0, instance:jalview.viewmodel.ViewportRangesTest@76b0ae1b]" started-at="2023-07-02T10:13:44Z" name="testGetAbsoluteAlignmentHeight" finished-at="2023-07-02T10:13:44Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetAbsoluteAlignmentHeight -->
        <test-method is-config="true" signature="cleanUp()[pri:0, instance:jalview.viewmodel.ViewportRangesTest@76b0ae1b]" started-at="2023-07-02T10:13:44Z" name="cleanUp" finished-at="2023-07-02T10:13:44Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cleanUp -->
        <test-method is-config="true" signature="cleanUp()[pri:0, instance:jalview.viewmodel.ViewportRangesTest@76b0ae1b]" started-at="2023-07-02T10:13:44Z" name="cleanUp" finished-at="2023-07-02T10:13:44Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cleanUp -->
        <test-method is-config="true" signature="cleanUp()[pri:0, instance:jalview.viewmodel.ViewportRangesTest@76b0ae1b]" started-at="2023-07-02T10:13:44Z" name="cleanUp" finished-at="2023-07-02T10:13:44Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cleanUp -->
        <test-method signature="testGetWrappedScrollPosition()[pri:0, instance:jalview.viewmodel.ViewportRangesTest@76b0ae1b]" started-at="2023-07-02T10:13:44Z" name="testGetWrappedScrollPosition" finished-at="2023-07-02T10:13:44Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetWrappedScrollPosition -->
        <test-method is-config="true" signature="cleanUp()[pri:0, instance:jalview.viewmodel.ViewportRangesTest@76b0ae1b]" started-at="2023-07-02T10:13:44Z" name="cleanUp" finished-at="2023-07-02T10:13:44Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cleanUp -->
        <test-method is-config="true" signature="cleanUp()[pri:0, instance:jalview.viewmodel.ViewportRangesTest@76b0ae1b]" started-at="2023-07-02T10:13:44Z" name="cleanUp" finished-at="2023-07-02T10:13:44Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cleanUp -->
        <test-method signature="testPageUpDownWrapped()[pri:0, instance:jalview.viewmodel.ViewportRangesTest@76b0ae1b]" started-at="2023-07-02T10:13:44Z" name="testPageUpDownWrapped" finished-at="2023-07-02T10:13:44Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testPageUpDownWrapped -->
        <test-method signature="testPageUpDown()[pri:0, instance:jalview.viewmodel.ViewportRangesTest@76b0ae1b]" started-at="2023-07-02T10:13:44Z" name="testPageUpDown" finished-at="2023-07-02T10:13:44Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testPageUpDown -->
        <test-method signature="testScrollToVisible()[pri:0, instance:jalview.viewmodel.ViewportRangesTest@76b0ae1b]" started-at="2023-07-02T10:13:44Z" name="testScrollToVisible" finished-at="2023-07-02T10:13:44Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testScrollToVisible -->
        <test-method signature="testScrollRight()[pri:0, instance:jalview.viewmodel.ViewportRangesTest@76b0ae1b]" started-at="2023-07-02T10:13:44Z" name="testScrollRight" finished-at="2023-07-02T10:13:44Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testScrollRight -->
        <test-method is-config="true" signature="cleanUp()[pri:0, instance:jalview.viewmodel.ViewportRangesTest@76b0ae1b]" started-at="2023-07-02T10:13:44Z" name="cleanUp" finished-at="2023-07-02T10:13:44Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cleanUp -->
        <test-method signature="testScrollRightWithHidden()[pri:0, instance:jalview.viewmodel.ViewportRangesTest@76b0ae1b]" started-at="2023-07-02T10:13:44Z" name="testScrollRightWithHidden" finished-at="2023-07-02T10:13:44Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testScrollRightWithHidden -->
        <test-method is-config="true" signature="cleanUp()[pri:0, instance:jalview.viewmodel.ViewportRangesTest@76b0ae1b]" started-at="2023-07-02T10:13:44Z" name="cleanUp" finished-at="2023-07-02T10:13:44Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cleanUp -->
        <test-method is-config="true" signature="cleanUp()[pri:0, instance:jalview.viewmodel.ViewportRangesTest@76b0ae1b]" started-at="2023-07-02T10:13:44Z" name="cleanUp" finished-at="2023-07-02T10:13:44Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cleanUp -->
        <test-method signature="testScrollUp_wrapped()[pri:0, instance:jalview.viewmodel.ViewportRangesTest@76b0ae1b]" started-at="2023-07-02T10:13:44Z" name="testScrollUp_wrapped" finished-at="2023-07-02T10:13:44Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testScrollUp_wrapped -->
        <test-method is-config="true" signature="cleanUp()[pri:0, instance:jalview.viewmodel.ViewportRangesTest@76b0ae1b]" started-at="2023-07-02T10:13:44Z" name="cleanUp" finished-at="2023-07-02T10:13:44Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cleanUp -->
        <test-method signature="testScrollUpWithHidden()[pri:0, instance:jalview.viewmodel.ViewportRangesTest@76b0ae1b]" started-at="2023-07-02T10:13:44Z" name="testScrollUpWithHidden" finished-at="2023-07-02T10:13:44Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testScrollUpWithHidden -->
        <test-method is-config="true" signature="cleanUp()[pri:0, instance:jalview.viewmodel.ViewportRangesTest@76b0ae1b]" started-at="2023-07-02T10:13:44Z" name="cleanUp" finished-at="2023-07-02T10:13:44Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cleanUp -->
        <test-method signature="testScrollToWrappedVisible()[pri:0, instance:jalview.viewmodel.ViewportRangesTest@76b0ae1b]" started-at="2023-07-02T10:13:44Z" name="testScrollToWrappedVisible" finished-at="2023-07-02T10:13:44Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testScrollToWrappedVisible -->
        <test-method is-config="true" signature="cleanUp()[pri:0, instance:jalview.viewmodel.ViewportRangesTest@76b0ae1b]" started-at="2023-07-02T10:13:44Z" name="cleanUp" finished-at="2023-07-02T10:13:44Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cleanUp -->
        <test-method is-config="true" signature="cleanUp()[pri:0, instance:jalview.viewmodel.ViewportRangesTest@76b0ae1b]" started-at="2023-07-02T10:13:44Z" name="cleanUp" finished-at="2023-07-02T10:13:44Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cleanUp -->
        <test-method signature="testScrollUp()[pri:0, instance:jalview.viewmodel.ViewportRangesTest@76b0ae1b]" started-at="2023-07-02T10:13:44Z" name="testScrollUp" finished-at="2023-07-02T10:13:44Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testScrollUp -->
        <test-method is-config="true" signature="cleanUp()[pri:0, instance:jalview.viewmodel.ViewportRangesTest@76b0ae1b]" started-at="2023-07-02T10:13:44Z" name="cleanUp" finished-at="2023-07-02T10:13:44Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cleanUp -->
        <test-method is-config="true" signature="cleanUp()[pri:0, instance:jalview.viewmodel.ViewportRangesTest@76b0ae1b]" started-at="2023-07-02T10:13:44Z" name="cleanUp" finished-at="2023-07-02T10:13:44Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cleanUp -->
        <test-method signature="testSetEndSeq()[pri:0, instance:jalview.viewmodel.ViewportRangesTest@76b0ae1b]" started-at="2023-07-02T10:13:44Z" name="testSetEndSeq" finished-at="2023-07-02T10:13:44Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSetEndSeq -->
        <test-method is-config="true" signature="cleanUp()[pri:0, instance:jalview.viewmodel.ViewportRangesTest@76b0ae1b]" started-at="2023-07-02T10:13:44Z" name="cleanUp" finished-at="2023-07-02T10:13:44Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cleanUp -->
        <test-method signature="testSetStartEndRes()[pri:0, instance:jalview.viewmodel.ViewportRangesTest@76b0ae1b]" started-at="2023-07-02T10:13:44Z" name="testSetStartEndRes" finished-at="2023-07-02T10:13:44Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSetStartEndRes -->
        <test-method signature="testSetStartRes()[pri:0, instance:jalview.viewmodel.ViewportRangesTest@76b0ae1b]" started-at="2023-07-02T10:13:44Z" name="testSetStartRes" finished-at="2023-07-02T10:13:44Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSetStartRes -->
        <test-method signature="testSetStartEndResWrapped()[pri:0, instance:jalview.viewmodel.ViewportRangesTest@76b0ae1b]" started-at="2023-07-02T10:13:44Z" name="testSetStartEndResWrapped" finished-at="2023-07-02T10:13:44Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSetStartEndResWrapped -->
        <test-method is-config="true" signature="cleanUp()[pri:0, instance:jalview.viewmodel.ViewportRangesTest@76b0ae1b]" started-at="2023-07-02T10:13:44Z" name="cleanUp" finished-at="2023-07-02T10:13:44Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cleanUp -->
        <test-method is-config="true" signature="cleanUp()[pri:0, instance:jalview.viewmodel.ViewportRangesTest@76b0ae1b]" started-at="2023-07-02T10:13:44Z" name="cleanUp" finished-at="2023-07-02T10:13:44Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cleanUp -->
        <test-method signature="testSetStartResAndSeq()[pri:0, instance:jalview.viewmodel.ViewportRangesTest@76b0ae1b]" started-at="2023-07-02T10:13:44Z" name="testSetStartResAndSeq" finished-at="2023-07-02T10:13:44Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSetStartResAndSeq -->
        <test-method is-config="true" signature="cleanUp()[pri:0, instance:jalview.viewmodel.ViewportRangesTest@76b0ae1b]" started-at="2023-07-02T10:13:44Z" name="cleanUp" finished-at="2023-07-02T10:13:44Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cleanUp -->
        <test-method is-config="true" signature="cleanUp()[pri:0, instance:jalview.viewmodel.ViewportRangesTest@76b0ae1b]" started-at="2023-07-02T10:13:44Z" name="cleanUp" finished-at="2023-07-02T10:13:44Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cleanUp -->
        <test-method signature="testSetStartEndSeq()[pri:0, instance:jalview.viewmodel.ViewportRangesTest@76b0ae1b]" started-at="2023-07-02T10:13:44Z" name="testSetStartEndSeq" finished-at="2023-07-02T10:13:44Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSetStartEndSeq -->
        <test-method signature="testSetViewportLocation()[pri:0, instance:jalview.viewmodel.ViewportRangesTest@76b0ae1b]" started-at="2023-07-02T10:13:44Z" name="testSetViewportLocation" finished-at="2023-07-02T10:13:44Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSetViewportLocation -->
        <test-method signature="testSetViewportHeight()[pri:0, instance:jalview.viewmodel.ViewportRangesTest@76b0ae1b]" started-at="2023-07-02T10:13:44Z" name="testSetViewportHeight" finished-at="2023-07-02T10:13:44Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSetViewportHeight -->
        <test-method signature="testSetStartSeq()[pri:0, instance:jalview.viewmodel.ViewportRangesTest@76b0ae1b]" started-at="2023-07-02T10:13:44Z" name="testSetStartSeq" finished-at="2023-07-02T10:13:44Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSetStartSeq -->
        <test-method is-config="true" signature="cleanUp()[pri:0, instance:jalview.viewmodel.ViewportRangesTest@76b0ae1b]" started-at="2023-07-02T10:13:44Z" name="cleanUp" finished-at="2023-07-02T10:13:44Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cleanUp -->
        <test-method is-config="true" signature="cleanUp()[pri:0, instance:jalview.viewmodel.ViewportRangesTest@76b0ae1b]" started-at="2023-07-02T10:13:44Z" name="cleanUp" finished-at="2023-07-02T10:13:44Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cleanUp -->
        <test-method is-config="true" signature="cleanUp()[pri:0, instance:jalview.viewmodel.ViewportRangesTest@76b0ae1b]" started-at="2023-07-02T10:13:44Z" name="cleanUp" finished-at="2023-07-02T10:13:44Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cleanUp -->
        <test-method signature="testSetViewportStartAndWidth()[pri:0, instance:jalview.viewmodel.ViewportRangesTest@76b0ae1b]" started-at="2023-07-02T10:13:44Z" name="testSetViewportStartAndWidth" finished-at="2023-07-02T10:13:44Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSetViewportStartAndWidth -->
        <test-method signature="testSetViewportStartAndWidthWrapped()[pri:0, instance:jalview.viewmodel.ViewportRangesTest@76b0ae1b]" started-at="2023-07-02T10:13:44Z" name="testSetViewportStartAndWidthWrapped" finished-at="2023-07-02T10:13:44Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSetViewportStartAndWidthWrapped -->
        <test-method is-config="true" signature="cleanUp()[pri:0, instance:jalview.viewmodel.ViewportRangesTest@76b0ae1b]" started-at="2023-07-02T10:13:44Z" name="cleanUp" finished-at="2023-07-02T10:13:44Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cleanUp -->
        <test-method is-config="true" signature="cleanUp()[pri:0, instance:jalview.viewmodel.ViewportRangesTest@76b0ae1b]" started-at="2023-07-02T10:13:44Z" name="cleanUp" finished-at="2023-07-02T10:13:44Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cleanUp -->
        <test-method signature="testSetViewportStartAndHeight()[pri:0, instance:jalview.viewmodel.ViewportRangesTest@76b0ae1b]" started-at="2023-07-02T10:13:44Z" name="testSetViewportStartAndHeight" finished-at="2023-07-02T10:13:44Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSetViewportStartAndHeight -->
        <test-method is-config="true" signature="cleanUp()[pri:0, instance:jalview.viewmodel.ViewportRangesTest@76b0ae1b]" started-at="2023-07-02T10:13:44Z" name="cleanUp" finished-at="2023-07-02T10:13:44Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cleanUp -->
        <test-method is-config="true" signature="cleanUp()[pri:0, instance:jalview.viewmodel.ViewportRangesTest@76b0ae1b]" started-at="2023-07-02T10:13:44Z" name="cleanUp" finished-at="2023-07-02T10:13:44Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cleanUp -->
        <test-method signature="testViewportRanges()[pri:0, instance:jalview.viewmodel.ViewportRangesTest@76b0ae1b]" started-at="2023-07-02T10:13:44Z" name="testViewportRanges" finished-at="2023-07-02T10:13:44Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testViewportRanges -->
        <test-method signature="testSetViewportWidth()[pri:0, instance:jalview.viewmodel.ViewportRangesTest@76b0ae1b]" started-at="2023-07-02T10:13:44Z" name="testSetViewportWidth" finished-at="2023-07-02T10:13:44Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSetViewportWidth -->
      </class> <!-- jalview.viewmodel.ViewportRangesTest -->
      <class name="jalview.ext.jmol.JmolViewerTest">
        <test-method is-config="true" signature="setUpBeforeClass()[pri:0, instance:jalview.ext.jmol.JmolViewerTest@622ef26a]" started-at="2023-07-02T10:11:49Z" name="setUpBeforeClass" finished-at="2023-07-02T10:11:49Z" duration-ms="63" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpBeforeClass -->
        <test-method signature="testAddStrToSingleSeqViewJMol()[pri:0, instance:jalview.ext.jmol.JmolViewerTest@622ef26a]" started-at="2023-07-02T10:11:49Z" name="testAddStrToSingleSeqViewJMol" finished-at="2023-07-02T10:11:52Z" duration-ms="2607" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAddStrToSingleSeqViewJMol -->
        <test-method is-config="true" signature="setUpJvOptionPane()[pri:0, instance:jalview.ext.jmol.JmolViewerTest@622ef26a]" started-at="2023-07-02T10:11:49Z" name="setUpJvOptionPane" finished-at="2023-07-02T10:11:49Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpJvOptionPane -->
        <test-method signature="testSingleSeqViewJMol()[pri:0, instance:jalview.ext.jmol.JmolViewerTest@622ef26a]" started-at="2023-07-02T10:11:52Z" name="testSingleSeqViewJMol" finished-at="2023-07-02T10:11:53Z" duration-ms="871" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSingleSeqViewJMol -->
        <test-method is-config="true" signature="tearDownAfterClass()[pri:0, instance:jalview.ext.jmol.JmolViewerTest@622ef26a]" started-at="2023-07-02T10:11:53Z" name="tearDownAfterClass" finished-at="2023-07-02T10:11:53Z" duration-ms="45" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownAfterClass -->
      </class> <!-- jalview.ext.jmol.JmolViewerTest -->
      <class name="jalview.io.cache.AppCacheTest">
        <test-method signature="appCacheTest()[pri:0, instance:jalview.io.cache.AppCacheTest@117632cf]" started-at="2023-07-02T10:12:02Z" name="appCacheTest" finished-at="2023-07-02T10:12:02Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- appCacheTest -->
        <test-method signature="appCacheLimitTest()[pri:0, instance:jalview.io.cache.AppCacheTest@117632cf]" started-at="2023-07-02T10:12:02Z" name="appCacheLimitTest" finished-at="2023-07-02T10:12:02Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- appCacheLimitTest -->
        <test-method is-config="true" signature="setUpCache()[pri:0, instance:jalview.io.cache.AppCacheTest@117632cf]" started-at="2023-07-02T10:12:02Z" name="setUpCache" finished-at="2023-07-02T10:12:02Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpCache -->
      </class> <!-- jalview.io.cache.AppCacheTest -->
      <class name="jalview.ext.htsjdk.VCFReaderTest">
        <test-method signature="testQuery_plain()[pri:0, instance:jalview.ext.htsjdk.VCFReaderTest@13c612bd]" started-at="2023-07-02T10:11:41Z" name="testQuery_plain" finished-at="2023-07-02T10:11:41Z" duration-ms="69" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testQuery_plain -->
        <test-method signature="testReadVcf_plain()[pri:0, instance:jalview.ext.htsjdk.VCFReaderTest@13c612bd]" started-at="2023-07-02T10:11:41Z" name="testReadVcf_plain" finished-at="2023-07-02T10:11:41Z" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testReadVcf_plain -->
      </class> <!-- jalview.ext.htsjdk.VCFReaderTest -->
      <class name="jalview.analysis.GroupingTest">
        <test-method signature="testMakeGroupsWithBoth()[pri:0, instance:jalview.analysis.GroupingTest@160c3ec1]" started-at="2023-07-02T10:12:02Z" name="testMakeGroupsWithBoth" finished-at="2023-07-02T10:12:02Z" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMakeGroupsWithBoth -->
        <test-method is-config="true" signature="setUpJvOptionPane()[pri:0, instance:jalview.analysis.GroupingTest@160c3ec1]" started-at="2023-07-02T10:12:02Z" name="setUpJvOptionPane" finished-at="2023-07-02T10:12:02Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpJvOptionPane -->
      </class> <!-- jalview.analysis.GroupingTest -->
      <class name="jalview.analysis.ConservationTest">
        <test-method signature="testCalculate_noThreshold()[pri:0, instance:jalview.analysis.ConservationTest@51c929ae]" started-at="2023-07-02T10:11:57Z" name="testCalculate_noThreshold" finished-at="2023-07-02T10:11:57Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCalculate_noThreshold -->
        <test-method is-config="true" signature="setUpJvOptionPane()[pri:0, instance:jalview.analysis.ConservationTest@51c929ae]" started-at="2023-07-02T10:11:57Z" name="setUpJvOptionPane" finished-at="2023-07-02T10:11:57Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpJvOptionPane -->
        <test-method signature="testCalculate_threshold()[pri:0, instance:jalview.analysis.ConservationTest@51c929ae]" started-at="2023-07-02T10:11:57Z" name="testCalculate_threshold" finished-at="2023-07-02T10:11:57Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCalculate_threshold -->
        <test-method signature="testCountConservationAndGaps()[pri:0, instance:jalview.analysis.ConservationTest@51c929ae]" started-at="2023-07-02T10:11:57Z" name="testCountConservationAndGaps" finished-at="2023-07-02T10:11:57Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCountConservationAndGaps -->
        <test-method signature="testVerdict()[pri:0, instance:jalview.analysis.ConservationTest@51c929ae]" started-at="2023-07-02T10:11:57Z" name="testVerdict" finished-at="2023-07-02T10:11:57Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testVerdict -->
        <test-method signature="testRecordConservation()[pri:0, instance:jalview.analysis.ConservationTest@51c929ae]" started-at="2023-07-02T10:11:57Z" name="testRecordConservation" finished-at="2023-07-02T10:11:57Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRecordConservation -->
      </class> <!-- jalview.analysis.ConservationTest -->
      <class name="jalview.math.RotatableMatrixTest">
        <test-method is-config="true" signature="setUp()[pri:0, instance:jalview.math.RotatableMatrixTest@6ac4944a]" started-at="2023-07-02T10:12:21Z" name="setUp" finished-at="2023-07-02T10:12:21Z" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="testGetRotation()[pri:0, instance:jalview.math.RotatableMatrixTest@6ac4944a]" started-at="2023-07-02T10:12:21Z" name="testGetRotation" finished-at="2023-07-02T10:12:21Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetRotation -->
        <test-method signature="testPreMultiply()[pri:0, instance:jalview.math.RotatableMatrixTest@6ac4944a]" started-at="2023-07-02T10:12:21Z" name="testPreMultiply" finished-at="2023-07-02T10:12:21Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testPreMultiply -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:jalview.math.RotatableMatrixTest@6ac4944a]" started-at="2023-07-02T10:12:21Z" name="setUp" finished-at="2023-07-02T10:12:21Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:jalview.math.RotatableMatrixTest@6ac4944a]" started-at="2023-07-02T10:12:21Z" name="setUp" finished-at="2023-07-02T10:12:21Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="testPrint()[pri:0, instance:jalview.math.RotatableMatrixTest@6ac4944a]" started-at="2023-07-02T10:12:21Z" name="testPrint" finished-at="2023-07-02T10:12:21Z" duration-ms="3" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testPrint -->
        <test-method signature="testVectorMultiply()[pri:0, instance:jalview.math.RotatableMatrixTest@6ac4944a]" started-at="2023-07-02T10:12:21Z" name="testVectorMultiply" finished-at="2023-07-02T10:12:21Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testVectorMultiply -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:jalview.math.RotatableMatrixTest@6ac4944a]" started-at="2023-07-02T10:12:21Z" name="setUp" finished-at="2023-07-02T10:12:21Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
      </class> <!-- jalview.math.RotatableMatrixTest -->
      <class name="jalview.io.gff.GffTests">
        <test-method is-config="true" signature="setUpJvOptionPane()[pri:0, instance:jalview.io.gff.GffTests@159e366]" started-at="2023-07-02T10:12:10Z" name="setUpJvOptionPane" finished-at="2023-07-02T10:12:10Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpJvOptionPane -->
        <test-method signature="testResolveExonerateGff()[pri:0, instance:jalview.io.gff.GffTests@159e366]" started-at="2023-07-02T10:12:10Z" name="testResolveExonerateGff" finished-at="2023-07-02T10:12:10Z" duration-ms="11" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testResolveExonerateGff -->
      </class> <!-- jalview.io.gff.GffTests -->
      <class name="jalview.schemes.StrandColourSchemeTest">
        <test-method signature="testFindColour()[pri:0, instance:jalview.schemes.StrandColourSchemeTest@5215cd9a]" started-at="2023-07-02T10:12:18Z" name="testFindColour" finished-at="2023-07-02T10:12:18Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFindColour -->
      </class> <!-- jalview.schemes.StrandColourSchemeTest -->
      <class name="jalview.util.ColorUtilsTest">
        <test-method signature="testBleachColour()[pri:0, instance:jalview.util.ColorUtilsTest@4a8b5227]" started-at="2023-07-02T10:12:07Z" name="testBleachColour" finished-at="2023-07-02T10:12:07Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testBleachColour -->
        <test-method signature="testCreateColourFromName()[pri:0, instance:jalview.util.ColorUtilsTest@4a8b5227]" started-at="2023-07-02T10:12:07Z" name="testCreateColourFromName" finished-at="2023-07-02T10:12:07Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCreateColourFromName -->
        <test-method signature="testBrighterThan()[pri:0, instance:jalview.util.ColorUtilsTest@4a8b5227]" started-at="2023-07-02T10:12:07Z" name="testBrighterThan" finished-at="2023-07-02T10:12:07Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testBrighterThan -->
        <test-method is-config="true" signature="setUpJvOptionPane()[pri:0, instance:jalview.util.ColorUtilsTest@4a8b5227]" started-at="2023-07-02T10:12:07Z" name="setUpJvOptionPane" finished-at="2023-07-02T10:12:07Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpJvOptionPane -->
        <test-method signature="testParseColourString()[pri:0, instance:jalview.util.ColorUtilsTest@4a8b5227]" started-at="2023-07-02T10:12:07Z" name="testParseColourString" finished-at="2023-07-02T10:12:07Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testParseColourString -->
        <test-method signature="testGetAWTColorFromName()[pri:0, instance:jalview.util.ColorUtilsTest@4a8b5227]" started-at="2023-07-02T10:12:07Z" name="testGetAWTColorFromName" finished-at="2023-07-02T10:12:07Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetAWTColorFromName -->
        <test-method signature="testGetGraduatedColour()[pri:0, instance:jalview.util.ColorUtilsTest@4a8b5227]" started-at="2023-07-02T10:12:07Z" name="testGetGraduatedColour" finished-at="2023-07-02T10:12:07Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetGraduatedColour -->
        <test-method signature="testDarkerThan()[pri:0, instance:jalview.util.ColorUtilsTest@4a8b5227]" started-at="2023-07-02T10:12:07Z" name="testDarkerThan" finished-at="2023-07-02T10:12:07Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testDarkerThan -->
        <test-method signature="testToTkCode()[pri:0, instance:jalview.util.ColorUtilsTest@4a8b5227]" started-at="2023-07-02T10:12:07Z" name="testToTkCode" finished-at="2023-07-02T10:12:07Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testToTkCode -->
      </class> <!-- jalview.util.ColorUtilsTest -->
      <class name="jalview.datamodel.MappingTypeTest">
        <test-method signature="testGetFromRatio()[pri:0, instance:jalview.datamodel.MappingTypeTest@a23a01d]" started-at="2023-07-02T10:11:56Z" name="testGetFromRatio" finished-at="2023-07-02T10:11:56Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetFromRatio -->
        <test-method is-config="true" signature="setUpJvOptionPane()[pri:0, instance:jalview.datamodel.MappingTypeTest@a23a01d]" started-at="2023-07-02T10:11:56Z" name="setUpJvOptionPane" finished-at="2023-07-02T10:11:56Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpJvOptionPane -->
        <test-method signature="testGetInverse()[pri:0, instance:jalview.datamodel.MappingTypeTest@a23a01d]" started-at="2023-07-02T10:11:56Z" name="testGetInverse" finished-at="2023-07-02T10:11:56Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetInverse -->
        <test-method signature="testGetToRatio()[pri:0, instance:jalview.datamodel.MappingTypeTest@a23a01d]" started-at="2023-07-02T10:11:56Z" name="testGetToRatio" finished-at="2023-07-02T10:11:56Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetToRatio -->
      </class> <!-- jalview.datamodel.MappingTypeTest -->
      <class name="jalview.gui.SeqCanvasTest">
        <test-method is-config="true" signature="setUp()[pri:0, instance:jalview.gui.SeqCanvasTest@df5f5c0]" started-at="2023-07-02T10:11:57Z" name="setUp" finished-at="2023-07-02T10:11:57Z" duration-ms="141" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="testCalculateWrappedGeometry_noAnnotations()[pri:0, instance:jalview.gui.SeqCanvasTest@df5f5c0]" started-at="2023-07-02T10:11:57Z" name="testCalculateWrappedGeometry_noAnnotations" finished-at="2023-07-02T10:11:57Z" duration-ms="0" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [17] but found [20]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [17] but found [20]
	at org.testng.Assert.fail(Assert.java:94)
	at org.testng.Assert.failNotEquals(Assert.java:496)
	at org.testng.Assert.assertEquals(Assert.java:125)
	at org.testng.Assert.assertEquals(Assert.java:372)
	at org.testng.Assert.assertEquals(Assert.java:382)
	at jalview.gui.SeqCanvasTest.testCalculateWrappedGeometry_noAnnotations(SeqCanvasTest.java:67)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:648)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:834)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1142)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:124)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:771)
	at org.testng.TestRunner.run(TestRunner.java:621)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:357)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:352)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:310)
	at org.testng.SuiteRunner.run(SuiteRunner.java:259)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1176)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1101)
	at org.testng.TestNG.run(TestNG.java:1009)
	at org.gradle.api.internal.tasks.testing.testng.TestNGTestClassProcessor.runTests(TestNGTestClassProcessor.java:145)
	at org.gradle.api.internal.tasks.testing.testng.TestNGTestClassProcessor.stop(TestNGTestClassProcessor.java:92)
	at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.stop(SuiteTestClassProcessor.java:62)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:36)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24)
	at org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:33)
	at org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:94)
	at com.sun.proxy.$Proxy2.stop(Unknown Source)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker$3.run(TestWorker.java:193)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.executeAndMaintainThreadName(TestWorker.java:129)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.execute(TestWorker.java:100)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.execute(TestWorker.java:60)
	at org.gradle.process.internal.worker.child.ActionExecutionWorker.execute(ActionExecutionWorker.java:56)
	at org.gradle.process.internal.worker.child.SystemApplicationClassLoaderWorker.call(SystemApplicationClassLoaderWorker.java:113)
	at org.gradle.process.internal.worker.child.SystemApplicationClassLoaderWorker.call(SystemApplicationClassLoaderWorker.java:65)
	at worker.org.gradle.process.internal.worker.GradleWorkerMain.run(GradleWorkerMain.java:69)
	at worker.org.gradle.process.internal.worker.GradleWorkerMain.main(GradleWorkerMain.java:74)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCalculateWrappedGeometry_noAnnotations -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:jalview.gui.SeqCanvasTest@df5f5c0]" started-at="2023-07-02T10:11:57Z" name="setUp" finished-at="2023-07-02T10:11:57Z" duration-ms="162" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="testCalculateWrappedGeometry_withAnnotations()[pri:0, instance:jalview.gui.SeqCanvasTest@df5f5c0]" started-at="2023-07-02T10:11:57Z" name="testCalculateWrappedGeometry_withAnnotations" finished-at="2023-07-02T10:11:57Z" duration-ms="1" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [17] but found [20]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [17] but found [20]
	at org.testng.Assert.fail(Assert.java:94)
	at org.testng.Assert.failNotEquals(Assert.java:496)
	at org.testng.Assert.assertEquals(Assert.java:125)
	at org.testng.Assert.assertEquals(Assert.java:372)
	at org.testng.Assert.assertEquals(Assert.java:382)
	at jalview.gui.SeqCanvasTest.testCalculateWrappedGeometry_withAnnotations(SeqCanvasTest.java:235)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:648)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:834)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1142)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:124)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:771)
	at org.testng.TestRunner.run(TestRunner.java:621)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:357)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:352)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:310)
	at org.testng.SuiteRunner.run(SuiteRunner.java:259)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1176)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1101)
	at org.testng.TestNG.run(TestNG.java:1009)
	at org.gradle.api.internal.tasks.testing.testng.TestNGTestClassProcessor.runTests(TestNGTestClassProcessor.java:145)
	at org.gradle.api.internal.tasks.testing.testng.TestNGTestClassProcessor.stop(TestNGTestClassProcessor.java:92)
	at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.stop(SuiteTestClassProcessor.java:62)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:36)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24)
	at org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:33)
	at org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:94)
	at com.sun.proxy.$Proxy2.stop(Unknown Source)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker$3.run(TestWorker.java:193)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.executeAndMaintainThreadName(TestWorker.java:129)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.execute(TestWorker.java:100)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.execute(TestWorker.java:60)
	at org.gradle.process.internal.worker.child.ActionExecutionWorker.execute(ActionExecutionWorker.java:56)
	at org.gradle.process.internal.worker.child.SystemApplicationClassLoaderWorker.call(SystemApplicationClassLoaderWorker.java:113)
	at org.gradle.process.internal.worker.child.SystemApplicationClassLoaderWorker.call(SystemApplicationClassLoaderWorker.java:65)
	at worker.org.gradle.process.internal.worker.GradleWorkerMain.run(GradleWorkerMain.java:69)
	at worker.org.gradle.process.internal.worker.GradleWorkerMain.main(GradleWorkerMain.java:74)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCalculateWrappedGeometry_withAnnotations -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:jalview.gui.SeqCanvasTest@df5f5c0]" started-at="2023-07-02T10:11:57Z" name="setUp" finished-at="2023-07-02T10:11:57Z" duration-ms="200" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="testClear_HighlightAndSelection()[pri:0, instance:jalview.gui.SeqCanvasTest@df5f5c0]" started-at="2023-07-02T10:11:57Z" name="testClear_HighlightAndSelection" finished-at="2023-07-02T10:11:57Z" duration-ms="24" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testClear_HighlightAndSelection -->
      </class> <!-- jalview.gui.SeqCanvasTest -->
      <class name="jalview.io.gff.Gff3HelperTest">
        <test-method is-config="true" signature="setUpJvOptionPane()[pri:0, instance:jalview.io.gff.Gff3HelperTest@3add81c4]" started-at="2023-07-02T10:12:07Z" name="setUpJvOptionPane" finished-at="2023-07-02T10:12:07Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpJvOptionPane -->
        <test-method signature="testGetDescription()[pri:0, instance:jalview.io.gff.Gff3HelperTest@3add81c4]" started-at="2023-07-02T10:12:07Z" name="testGetDescription" finished-at="2023-07-02T10:12:07Z" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetDescription -->
        <test-method signature="testProcessCdnaMatch_forwardToForward()[pri:0, instance:jalview.io.gff.Gff3HelperTest@3add81c4]" started-at="2023-07-02T10:12:07Z" name="testProcessCdnaMatch_forwardToForward" finished-at="2023-07-02T10:12:07Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testProcessCdnaMatch_forwardToForward -->
        <test-method signature="testProcessCdnaMatch_forwardToReverse()[pri:0, instance:jalview.io.gff.Gff3HelperTest@3add81c4]" started-at="2023-07-02T10:12:07Z" name="testProcessCdnaMatch_forwardToReverse" finished-at="2023-07-02T10:12:07Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testProcessCdnaMatch_forwardToReverse -->
        <test-method signature="testProcessCdnaMatch_reverseToForward()[pri:0, instance:jalview.io.gff.Gff3HelperTest@3add81c4]" started-at="2023-07-02T10:12:07Z" name="testProcessCdnaMatch_reverseToForward" finished-at="2023-07-02T10:12:07Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testProcessCdnaMatch_reverseToForward -->
        <test-method signature="testProcessCdnaMatch_spliced()[pri:0, instance:jalview.io.gff.Gff3HelperTest@3add81c4]" started-at="2023-07-02T10:12:07Z" name="testProcessCdnaMatch_spliced" finished-at="2023-07-02T10:12:07Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testProcessCdnaMatch_spliced -->
      </class> <!-- jalview.io.gff.Gff3HelperTest -->
      <class name="jalview.analysis.AlignSeqTest">
        <test-method signature="testExtractGaps()[pri:0, instance:jalview.analysis.AlignSeqTest@68ed96ca]" started-at="2023-07-02T10:11:41Z" name="testExtractGaps" finished-at="2023-07-02T10:11:41Z" duration-ms="3" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testExtractGaps -->
        <test-method is-config="true" signature="setUpJvOptionPane()[pri:0, instance:jalview.analysis.AlignSeqTest@68ed96ca]" started-at="2023-07-02T10:11:41Z" name="setUpJvOptionPane" finished-at="2023-07-02T10:11:41Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpJvOptionPane -->
        <test-method signature="testIndexEncode_nucleotide()[pri:0, instance:jalview.analysis.AlignSeqTest@68ed96ca]" started-at="2023-07-02T10:11:41Z" name="testIndexEncode_nucleotide" finished-at="2023-07-02T10:11:41Z" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testIndexEncode_nucleotide -->
        <test-method signature="testIndexEncode_peptide()[pri:0, instance:jalview.analysis.AlignSeqTest@68ed96ca]" started-at="2023-07-02T10:11:41Z" name="testIndexEncode_peptide" finished-at="2023-07-02T10:11:41Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testIndexEncode_peptide -->
      </class> <!-- jalview.analysis.AlignSeqTest -->
      <class name="jalview.util.DBRefUtilsTest">
        <test-method is-config="true" signature="setUpJvOptionPane()[pri:0, instance:jalview.util.DBRefUtilsTest@6979efad]" started-at="2023-07-02T10:12:10Z" name="setUpJvOptionPane" finished-at="2023-07-02T10:12:10Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpJvOptionPane -->
        <test-method signature="testGetCanonicalName()[pri:0, instance:jalview.util.DBRefUtilsTest@6979efad]" started-at="2023-07-02T10:12:10Z" name="testGetCanonicalName" finished-at="2023-07-02T10:12:10Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetCanonicalName -->
        <test-method signature="testSearchRefs_withMapping()[pri:0, instance:jalview.util.DBRefUtilsTest@6979efad]" started-at="2023-07-02T10:12:10Z" name="testSearchRefs_withMapping" finished-at="2023-07-02T10:12:10Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSearchRefs_withMapping -->
        <test-method signature="testParseToDbRef()[pri:0, instance:jalview.util.DBRefUtilsTest@6979efad]" started-at="2023-07-02T10:12:10Z" name="testParseToDbRef" finished-at="2023-07-02T10:12:10Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testParseToDbRef -->
        <test-method signature="testSearchRefs_noMapping()[pri:0, instance:jalview.util.DBRefUtilsTest@6979efad]" started-at="2023-07-02T10:12:10Z" name="testSearchRefs_noMapping" finished-at="2023-07-02T10:12:10Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSearchRefs_noMapping -->
        <test-method signature="testSelectRefs()[pri:0, instance:jalview.util.DBRefUtilsTest@6979efad]" started-at="2023-07-02T10:12:10Z" name="testSelectRefs" finished-at="2023-07-02T10:12:10Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSelectRefs -->
        <test-method signature="testSearchRefs_wildcardAccessionid()[pri:0, instance:jalview.util.DBRefUtilsTest@6979efad]" started-at="2023-07-02T10:12:10Z" name="testSearchRefs_wildcardAccessionid" finished-at="2023-07-02T10:12:10Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSearchRefs_wildcardAccessionid -->
        <test-method signature="testParseToDbRef_PDB()[pri:0, instance:jalview.util.DBRefUtilsTest@6979efad]" started-at="2023-07-02T10:12:10Z" name="testParseToDbRef_PDB" finished-at="2023-07-02T10:12:10Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testParseToDbRef_PDB -->
        <test-method signature="testSearchRefs_accessionid()[pri:0, instance:jalview.util.DBRefUtilsTest@6979efad]" started-at="2023-07-02T10:12:10Z" name="testSearchRefs_accessionid" finished-at="2023-07-02T10:12:10Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSearchRefs_accessionid -->
      </class> <!-- jalview.util.DBRefUtilsTest -->
      <class name="jalview.datamodel.AlignedCodonFrameTest">
        <test-method signature="testAddMap()[pri:0, instance:jalview.datamodel.AlignedCodonFrameTest@7bd69e82]" started-at="2023-07-02T10:13:43Z" name="testAddMap" finished-at="2023-07-02T10:13:43Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAddMap -->
        <test-method is-config="true" signature="setUpJvOptionPane()[pri:0, instance:jalview.datamodel.AlignedCodonFrameTest@7bd69e82]" started-at="2023-07-02T10:13:43Z" name="setUpJvOptionPane" finished-at="2023-07-02T10:13:43Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpJvOptionPane -->
        <test-method signature="testCouldReplaceSequence()[pri:0, instance:jalview.datamodel.AlignedCodonFrameTest@7bd69e82]" started-at="2023-07-02T10:13:43Z" name="testCouldReplaceSequence" finished-at="2023-07-02T10:13:43Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCouldReplaceSequence -->
        <test-method signature="testFindAlignedSequence()[pri:0, instance:jalview.datamodel.AlignedCodonFrameTest@7bd69e82]" started-at="2023-07-02T10:13:43Z" name="testFindAlignedSequence" finished-at="2023-07-02T10:13:43Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFindAlignedSequence -->
        <test-method signature="testGetCoveringCodonMapping()[pri:0, instance:jalview.datamodel.AlignedCodonFrameTest@7bd69e82]" started-at="2023-07-02T10:13:43Z" name="testGetCoveringCodonMapping" finished-at="2023-07-02T10:13:43Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetCoveringCodonMapping -->
        <test-method signature="testGetCoveringMapping()[pri:0, instance:jalview.datamodel.AlignedCodonFrameTest@7bd69e82]" started-at="2023-07-02T10:13:43Z" name="testGetCoveringMapping" finished-at="2023-07-02T10:13:43Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetCoveringMapping -->
        <test-method signature="testGetMappedRegion()[pri:0, instance:jalview.datamodel.AlignedCodonFrameTest@7bd69e82]" started-at="2023-07-02T10:13:43Z" name="testGetMappedRegion" finished-at="2023-07-02T10:13:43Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetMappedRegion -->
        <test-method signature="testGetMappedCodons()[pri:0, instance:jalview.datamodel.AlignedCodonFrameTest@7bd69e82]" started-at="2023-07-02T10:13:43Z" name="testGetMappedCodons" finished-at="2023-07-02T10:13:43Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetMappedCodons -->
        <test-method signature="testGetMappedCodons_dnaVariants()[pri:0, instance:jalview.datamodel.AlignedCodonFrameTest@7bd69e82]" started-at="2023-07-02T10:13:43Z" name="testGetMappedCodons_dnaVariants" finished-at="2023-07-02T10:13:43Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetMappedCodons_dnaVariants -->
        <test-method signature="testGetMappedCodons_forSubSequences()[pri:0, instance:jalview.datamodel.AlignedCodonFrameTest@7bd69e82]" started-at="2023-07-02T10:13:43Z" name="testGetMappedCodons_forSubSequences" finished-at="2023-07-02T10:13:43Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetMappedCodons_forSubSequences -->
        <test-method signature="testGetMappedRegion_eitherWay()[pri:0, instance:jalview.datamodel.AlignedCodonFrameTest@7bd69e82]" started-at="2023-07-02T10:13:43Z" name="testGetMappedRegion_eitherWay" finished-at="2023-07-02T10:13:43Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetMappedRegion_eitherWay -->
        <test-method signature="testRealiseWith()[pri:0, instance:jalview.datamodel.AlignedCodonFrameTest@7bd69e82]" started-at="2023-07-02T10:13:43Z" name="testRealiseWith" finished-at="2023-07-02T10:13:43Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRealiseWith -->
        <test-method signature="testIsRealisableWith()[pri:0, instance:jalview.datamodel.AlignedCodonFrameTest@7bd69e82]" started-at="2023-07-02T10:13:43Z" name="testIsRealisableWith" finished-at="2023-07-02T10:13:43Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testIsRealisableWith -->
        <test-method signature="testMarkMappedRegion()[pri:0, instance:jalview.datamodel.AlignedCodonFrameTest@7bd69e82]" started-at="2023-07-02T10:13:43Z" name="testMarkMappedRegion" finished-at="2023-07-02T10:13:43Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMarkMappedRegion -->
      </class> <!-- jalview.datamodel.AlignedCodonFrameTest -->
      <class name="jalview.util.Log4jTest">
        <test-method signature="testLog4j()[pri:0, instance:jalview.util.Log4jTest@17f9344b]" started-at="2023-07-02T10:12:19Z" name="testLog4j" finished-at="2023-07-02T10:12:20Z" duration-ms="1628" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testLog4j -->
      </class> <!-- jalview.util.Log4jTest -->
      <class name="jalview.ext.ensembl.EnsemblProteinTest">
        <test-method is-config="true" signature="setUpJvOptionPane()[pri:0, instance:jalview.ext.ensembl.EnsemblProteinTest@53bc1328]" started-at="2023-07-02T10:11:56Z" name="setUpJvOptionPane" finished-at="2023-07-02T10:11:56Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpJvOptionPane -->
        <test-method signature="testIsValidReference()[pri:0, instance:jalview.ext.ensembl.EnsemblProteinTest@53bc1328]" started-at="2023-07-02T10:11:56Z" name="testIsValidReference" finished-at="2023-07-02T10:11:56Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testIsValidReference -->
        <test-method signature="testGetAccesionIdFromQuery()[pri:0, instance:jalview.ext.ensembl.EnsemblProteinTest@53bc1328]" started-at="2023-07-02T10:11:56Z" name="testGetAccesionIdFromQuery" finished-at="2023-07-02T10:11:56Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetAccesionIdFromQuery -->
      </class> <!-- jalview.ext.ensembl.EnsemblProteinTest -->
      <class name="jalview.datamodel.AlignmentTest">
        <test-method is-config="true" signature="setUpJvOptionPane()[pri:0, instance:jalview.datamodel.AlignmentTest@27dc79f7]" started-at="2023-07-02T10:13:44Z" name="setUpJvOptionPane" finished-at="2023-07-02T10:13:44Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpJvOptionPane -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:jalview.datamodel.AlignmentTest@27dc79f7]" started-at="2023-07-02T10:13:44Z" name="setUp" finished-at="2023-07-02T10:13:44Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="testAddCodonFrame()[pri:0, instance:jalview.datamodel.AlignmentTest@27dc79f7]" started-at="2023-07-02T10:13:44Z" name="testAddCodonFrame" finished-at="2023-07-02T10:13:44Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAddCodonFrame -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:jalview.datamodel.AlignmentTest@27dc79f7]" started-at="2023-07-02T10:13:44Z" name="setUp" finished-at="2023-07-02T10:13:44Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="testAddSequencePreserveDatasetIntegrity()[pri:0, instance:jalview.datamodel.AlignmentTest@27dc79f7]" started-at="2023-07-02T10:13:44Z" name="testAddSequencePreserveDatasetIntegrity" finished-at="2023-07-02T10:13:44Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAddSequencePreserveDatasetIntegrity -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:jalview.datamodel.AlignmentTest@27dc79f7]" started-at="2023-07-02T10:13:44Z" name="setUp" finished-at="2023-07-02T10:13:44Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="testAlignAs_cdnaAsProtein()[pri:0, instance:jalview.datamodel.AlignmentTest@27dc79f7]" started-at="2023-07-02T10:13:44Z" name="testAlignAs_cdnaAsProtein" finished-at="2023-07-02T10:13:44Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAlignAs_cdnaAsProtein -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:jalview.datamodel.AlignmentTest@27dc79f7]" started-at="2023-07-02T10:13:44Z" name="setUp" finished-at="2023-07-02T10:13:44Z" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="testAlignAs_cdnaAsProtein_singleSequence()[pri:0, instance:jalview.datamodel.AlignmentTest@27dc79f7]" started-at="2023-07-02T10:13:44Z" name="testAlignAs_cdnaAsProtein_singleSequence" finished-at="2023-07-02T10:13:44Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAlignAs_cdnaAsProtein_singleSequence -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:jalview.datamodel.AlignmentTest@27dc79f7]" started-at="2023-07-02T10:13:44Z" name="setUp" finished-at="2023-07-02T10:13:44Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="testAlignAs_dnaAsDna()[pri:0, instance:jalview.datamodel.AlignmentTest@27dc79f7]" started-at="2023-07-02T10:13:44Z" name="testAlignAs_dnaAsDna" finished-at="2023-07-02T10:13:44Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAlignAs_dnaAsDna -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:jalview.datamodel.AlignmentTest@27dc79f7]" started-at="2023-07-02T10:13:44Z" name="setUp" finished-at="2023-07-02T10:13:44Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="testAlignAs_proteinAsCdna()[pri:0, instance:jalview.datamodel.AlignmentTest@27dc79f7]" started-at="2023-07-02T10:13:44Z" name="testAlignAs_proteinAsCdna" finished-at="2023-07-02T10:13:44Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAlignAs_proteinAsCdna -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:jalview.datamodel.AlignmentTest@27dc79f7]" started-at="2023-07-02T10:13:44Z" name="setUp" finished-at="2023-07-02T10:13:44Z" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="testAppend()[pri:0, instance:jalview.datamodel.AlignmentTest@27dc79f7]" started-at="2023-07-02T10:13:44Z" name="testAppend" finished-at="2023-07-02T10:13:44Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAppend -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:jalview.datamodel.AlignmentTest@27dc79f7]" started-at="2023-07-02T10:13:44Z" name="setUp" finished-at="2023-07-02T10:13:44Z" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="testAssertDatasetIsNormalised()[pri:0, instance:jalview.datamodel.AlignmentTest@27dc79f7]" started-at="2023-07-02T10:13:44Z" name="testAssertDatasetIsNormalised" finished-at="2023-07-02T10:13:44Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAssertDatasetIsNormalised -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:jalview.datamodel.AlignmentTest@27dc79f7]" started-at="2023-07-02T10:13:44Z" name="setUp" finished-at="2023-07-02T10:13:44Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="testCopyConstructor()[pri:0, instance:jalview.datamodel.AlignmentTest@27dc79f7]" started-at="2023-07-02T10:13:44Z" name="testCopyConstructor" finished-at="2023-07-02T10:13:44Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCopyConstructor -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:jalview.datamodel.AlignmentTest@27dc79f7]" started-at="2023-07-02T10:13:44Z" name="setUp" finished-at="2023-07-02T10:13:44Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:jalview.datamodel.AlignmentTest@27dc79f7]" started-at="2023-07-02T10:13:44Z" name="setUp" finished-at="2023-07-02T10:13:44Z" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="testCreateDatasetAlignment()[pri:0, instance:jalview.datamodel.AlignmentTest@27dc79f7]" started-at="2023-07-02T10:13:44Z" name="testCreateDatasetAlignment" finished-at="2023-07-02T10:13:44Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCreateDatasetAlignment -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:jalview.datamodel.AlignmentTest@27dc79f7]" started-at="2023-07-02T10:13:44Z" name="setUp" finished-at="2023-07-02T10:13:44Z" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="testCreateDatasetAlignmentWithMappedToSeqs()[pri:0, instance:jalview.datamodel.AlignmentTest@27dc79f7]" started-at="2023-07-02T10:13:44Z" name="testCreateDatasetAlignmentWithMappedToSeqs" finished-at="2023-07-02T10:13:44Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCreateDatasetAlignmentWithMappedToSeqs -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:jalview.datamodel.AlignmentTest@27dc79f7]" started-at="2023-07-02T10:13:44Z" name="setUp" finished-at="2023-07-02T10:13:44Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="testCreateDataset_updateDbrefMappings()[pri:0, instance:jalview.datamodel.AlignmentTest@27dc79f7]" started-at="2023-07-02T10:13:44Z" name="testCreateDataset_updateDbrefMappings" finished-at="2023-07-02T10:13:44Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCreateDataset_updateDbrefMappings -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:jalview.datamodel.AlignmentTest@27dc79f7]" started-at="2023-07-02T10:13:44Z" name="setUp" finished-at="2023-07-02T10:13:44Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="testDeleteAllAnnotations_excludingAutocalculated()[pri:0, instance:jalview.datamodel.AlignmentTest@27dc79f7]" started-at="2023-07-02T10:13:44Z" name="testDeleteAllAnnotations_excludingAutocalculated" finished-at="2023-07-02T10:13:44Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testDeleteAllAnnotations_excludingAutocalculated -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:jalview.datamodel.AlignmentTest@27dc79f7]" started-at="2023-07-02T10:13:44Z" name="setUp" finished-at="2023-07-02T10:13:44Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="testDeleteAllAnnotations_includingAutocalculated()[pri:0, instance:jalview.datamodel.AlignmentTest@27dc79f7]" started-at="2023-07-02T10:13:44Z" name="testDeleteAllAnnotations_includingAutocalculated" finished-at="2023-07-02T10:13:44Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testDeleteAllAnnotations_includingAutocalculated -->
        <test-method signature="testDeleteHiddenSequence()[pri:0, instance:jalview.datamodel.AlignmentTest@27dc79f7]" started-at="2023-07-02T10:13:44Z" name="testDeleteHiddenSequence" finished-at="2023-07-02T10:13:44Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testDeleteHiddenSequence -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:jalview.datamodel.AlignmentTest@27dc79f7]" started-at="2023-07-02T10:13:44Z" name="setUp" finished-at="2023-07-02T10:13:44Z" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="testDeleteSequenceByIndex()[pri:0, instance:jalview.datamodel.AlignmentTest@27dc79f7]" started-at="2023-07-02T10:13:44Z" name="testDeleteSequenceByIndex" finished-at="2023-07-02T10:13:44Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testDeleteSequenceByIndex -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:jalview.datamodel.AlignmentTest@27dc79f7]" started-at="2023-07-02T10:13:44Z" name="setUp" finished-at="2023-07-02T10:13:44Z" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:jalview.datamodel.AlignmentTest@27dc79f7]" started-at="2023-07-02T10:13:44Z" name="setUp" finished-at="2023-07-02T10:13:44Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="testDeleteSequenceBySeq()[pri:0, instance:jalview.datamodel.AlignmentTest@27dc79f7]" started-at="2023-07-02T10:13:44Z" name="testDeleteSequenceBySeq" finished-at="2023-07-02T10:13:44Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testDeleteSequenceBySeq -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:jalview.datamodel.AlignmentTest@27dc79f7]" started-at="2023-07-02T10:13:44Z" name="setUp" finished-at="2023-07-02T10:13:44Z" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="testFindAnnotation_byCalcId()[pri:0, instance:jalview.datamodel.AlignmentTest@27dc79f7]" started-at="2023-07-02T10:13:44Z" name="testFindAnnotation_byCalcId" finished-at="2023-07-02T10:13:44Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFindAnnotation_byCalcId -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:jalview.datamodel.AlignmentTest@27dc79f7]" started-at="2023-07-02T10:13:44Z" name="setUp" finished-at="2023-07-02T10:13:44Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="testFindAnnotations_bySeqLabelandorCalcId()[pri:0, instance:jalview.datamodel.AlignmentTest@27dc79f7]" started-at="2023-07-02T10:13:44Z" name="testFindAnnotations_bySeqLabelandorCalcId" finished-at="2023-07-02T10:13:44Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFindAnnotations_bySeqLabelandorCalcId -->
        <test-method signature="testFindGroup()[pri:0, instance:jalview.datamodel.AlignmentTest@27dc79f7]" started-at="2023-07-02T10:13:44Z" name="testFindGroup" finished-at="2023-07-02T10:13:44Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFindGroup -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:jalview.datamodel.AlignmentTest@27dc79f7]" started-at="2023-07-02T10:13:44Z" name="setUp" finished-at="2023-07-02T10:13:44Z" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="testFindOrCreateForNullCalcId()[pri:0, instance:jalview.datamodel.AlignmentTest@27dc79f7]" started-at="2023-07-02T10:13:44Z" name="testFindOrCreateForNullCalcId" finished-at="2023-07-02T10:13:44Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFindOrCreateForNullCalcId -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:jalview.datamodel.AlignmentTest@27dc79f7]" started-at="2023-07-02T10:13:44Z" name="setUp" finished-at="2023-07-02T10:13:44Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="testGetVisibleWidth()[pri:0, instance:jalview.datamodel.AlignmentTest@27dc79f7]" started-at="2023-07-02T10:13:44Z" name="testGetVisibleWidth" finished-at="2023-07-02T10:13:44Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetVisibleWidth -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:jalview.datamodel.AlignmentTest@27dc79f7]" started-at="2023-07-02T10:13:44Z" name="setUp" finished-at="2023-07-02T10:13:44Z" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:jalview.datamodel.AlignmentTest@27dc79f7]" started-at="2023-07-02T10:13:44Z" name="setUp" finished-at="2023-07-02T10:13:44Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="testGetWidth()[pri:0, instance:jalview.datamodel.AlignmentTest@27dc79f7]" started-at="2023-07-02T10:13:44Z" name="testGetWidth" finished-at="2023-07-02T10:13:44Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetWidth -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:jalview.datamodel.AlignmentTest@27dc79f7]" started-at="2023-07-02T10:13:44Z" name="setUp" finished-at="2023-07-02T10:13:44Z" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="testPadGaps()[pri:0, instance:jalview.datamodel.AlignmentTest@27dc79f7]" started-at="2023-07-02T10:13:44Z" name="testPadGaps" finished-at="2023-07-02T10:13:44Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testPadGaps -->
        <test-method signature="testPropagateInsertions()[pri:0, instance:jalview.datamodel.AlignmentTest@27dc79f7]" started-at="2023-07-02T10:13:44Z" name="testPropagateInsertions" finished-at="2023-07-02T10:13:44Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testPropagateInsertions -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:jalview.datamodel.AlignmentTest@27dc79f7]" started-at="2023-07-02T10:13:44Z" name="setUp" finished-at="2023-07-02T10:13:44Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:jalview.datamodel.AlignmentTest@27dc79f7]" started-at="2023-07-02T10:13:44Z" name="setUp" finished-at="2023-07-02T10:13:44Z" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="testPropagateInsertionsOverlap()[pri:0, instance:jalview.datamodel.AlignmentTest@27dc79f7]" started-at="2023-07-02T10:13:44Z" name="testPropagateInsertionsOverlap" finished-at="2023-07-02T10:13:44Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testPropagateInsertionsOverlap -->
        <test-method signature="testSetDataset_selfReference()[pri:0, instance:jalview.datamodel.AlignmentTest@27dc79f7]" started-at="2023-07-02T10:13:44Z" name="testSetDataset_selfReference" finished-at="2023-07-02T10:13:44Z" duration-ms="0" status="PASS">
          <exception class="java.lang.IllegalArgumentException">
            <message>
              <![CDATA[Circular dataset reference]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IllegalArgumentException: Circular dataset reference
	at jalview.datamodel.Alignment.setDataset(Alignment.java:1036)
	at jalview.datamodel.AlignmentTest.testSetDataset_selfReference(AlignmentTest.java:1331)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:648)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:834)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1142)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:124)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:771)
	at org.testng.TestRunner.run(TestRunner.java:621)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:357)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:352)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:310)
	at org.testng.SuiteRunner.run(SuiteRunner.java:259)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1176)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1101)
	at org.testng.TestNG.run(TestNG.java:1009)
	at org.gradle.api.internal.tasks.testing.testng.TestNGTestClassProcessor.runTests(TestNGTestClassProcessor.java:145)
	at org.gradle.api.internal.tasks.testing.testng.TestNGTestClassProcessor.stop(TestNGTestClassProcessor.java:92)
	at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.stop(SuiteTestClassProcessor.java:62)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:36)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24)
	at org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:33)
	at org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:94)
	at com.sun.proxy.$Proxy2.stop(Unknown Source)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker$3.run(TestWorker.java:193)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.executeAndMaintainThreadName(TestWorker.java:129)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.execute(TestWorker.java:100)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.execute(TestWorker.java:60)
	at org.gradle.process.internal.worker.child.ActionExecutionWorker.execute(ActionExecutionWorker.java:56)
	at org.gradle.process.internal.worker.child.SystemApplicationClassLoaderWorker.call(SystemApplicationClassLoaderWorker.java:113)
	at org.gradle.process.internal.worker.child.SystemApplicationClassLoaderWorker.call(SystemApplicationClassLoaderWorker.java:65)
	at worker.org.gradle.process.internal.worker.GradleWorkerMain.run(GradleWorkerMain.java:69)
	at worker.org.gradle.process.internal.worker.GradleWorkerMain.main(GradleWorkerMain.java:74)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalArgumentException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSetDataset_selfReference -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:jalview.datamodel.AlignmentTest@27dc79f7]" started-at="2023-07-02T10:13:44Z" name="setUp" finished-at="2023-07-02T10:13:44Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:jalview.datamodel.AlignmentTest@27dc79f7]" started-at="2023-07-02T10:13:44Z" name="setUp" finished-at="2023-07-02T10:13:44Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="testSetHiddenColumns()[pri:0, instance:jalview.datamodel.AlignmentTest@27dc79f7]" started-at="2023-07-02T10:13:44Z" name="testSetHiddenColumns" finished-at="2023-07-02T10:13:44Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSetHiddenColumns -->
        <test-method signature="testVerifyAlignmentDatasetRefs()[pri:0, instance:jalview.datamodel.AlignmentTest@27dc79f7]" started-at="2023-07-02T10:13:44Z" name="testVerifyAlignmentDatasetRefs" finished-at="2023-07-02T10:13:44Z" duration-ms="5" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testVerifyAlignmentDatasetRefs -->
      </class> <!-- jalview.datamodel.AlignmentTest -->
      <class name="jalview.datamodel.HiddenSequencesTest">
        <test-method signature="testAdjustForHiddenSeqs()[pri:0, instance:jalview.datamodel.HiddenSequencesTest@6754ef00]" started-at="2023-07-02T10:11:42Z" name="testAdjustForHiddenSeqs" finished-at="2023-07-02T10:11:42Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAdjustForHiddenSeqs -->
        <test-method is-config="true" signature="setUpJvOptionPane()[pri:0, instance:jalview.datamodel.HiddenSequencesTest@6754ef00]" started-at="2023-07-02T10:11:42Z" name="setUpJvOptionPane" finished-at="2023-07-02T10:11:42Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpJvOptionPane -->
        <test-method signature="testFindIndexNFromRow()[pri:0, instance:jalview.datamodel.HiddenSequencesTest@6754ef00]" started-at="2023-07-02T10:11:42Z" name="testFindIndexNFromRow" finished-at="2023-07-02T10:11:42Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFindIndexNFromRow -->
        <test-method signature="testAdjustHeightSequenceAdded()[pri:0, instance:jalview.datamodel.HiddenSequencesTest@6754ef00]" started-at="2023-07-02T10:11:42Z" name="testAdjustHeightSequenceAdded" finished-at="2023-07-02T10:11:42Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAdjustHeightSequenceAdded -->
        <test-method signature="testAdjustHeightSequenceDeleted()[pri:0, instance:jalview.datamodel.HiddenSequencesTest@6754ef00]" started-at="2023-07-02T10:11:42Z" name="testAdjustHeightSequenceDeleted" finished-at="2023-07-02T10:11:42Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAdjustHeightSequenceDeleted -->
        <test-method signature="testGetFullAlignment()[pri:0, instance:jalview.datamodel.HiddenSequencesTest@6754ef00]" started-at="2023-07-02T10:11:42Z" name="testGetFullAlignment" finished-at="2023-07-02T10:11:42Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetFullAlignment -->
        <test-method signature="testGetHiddenSequence()[pri:0, instance:jalview.datamodel.HiddenSequencesTest@6754ef00]" started-at="2023-07-02T10:11:42Z" name="testGetHiddenSequence" finished-at="2023-07-02T10:11:42Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHiddenSequence -->
        <test-method signature="testFindIndexWithoutHiddenSeqs()[pri:0, instance:jalview.datamodel.HiddenSequencesTest@6754ef00]" started-at="2023-07-02T10:11:42Z" name="testFindIndexWithoutHiddenSeqs" finished-at="2023-07-02T10:11:42Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFindIndexWithoutHiddenSeqs -->
        <test-method signature="testGetWidth()[pri:0, instance:jalview.datamodel.HiddenSequencesTest@6754ef00]" started-at="2023-07-02T10:11:42Z" name="testGetWidth" finished-at="2023-07-02T10:11:42Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetWidth -->
        <test-method signature="testHideShowLastSequences()[pri:0, instance:jalview.datamodel.HiddenSequencesTest@6754ef00]" started-at="2023-07-02T10:11:42Z" name="testHideShowLastSequences" finished-at="2023-07-02T10:11:42Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testHideShowLastSequences -->
        <test-method signature="testGetSize()[pri:0, instance:jalview.datamodel.HiddenSequencesTest@6754ef00]" started-at="2023-07-02T10:11:42Z" name="testGetSize" finished-at="2023-07-02T10:11:42Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetSize -->
        <test-method signature="testHideShowSequence_withHiddenRepSequence()[pri:0, instance:jalview.datamodel.HiddenSequencesTest@6754ef00]" started-at="2023-07-02T10:11:42Z" name="testHideShowSequence_withHiddenRepSequence" finished-at="2023-07-02T10:11:42Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testHideShowSequence_withHiddenRepSequence -->
        <test-method signature="testHideShowSequence()[pri:0, instance:jalview.datamodel.HiddenSequencesTest@6754ef00]" started-at="2023-07-02T10:11:42Z" name="testHideShowSequence" finished-at="2023-07-02T10:11:42Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testHideShowSequence -->
        <test-method signature="testIsHidden()[pri:0, instance:jalview.datamodel.HiddenSequencesTest@6754ef00]" started-at="2023-07-02T10:11:42Z" name="testIsHidden" finished-at="2023-07-02T10:11:42Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testIsHidden -->
      </class> <!-- jalview.datamodel.HiddenSequencesTest -->
      <class name="jalview.util.MessageManagerTest">
        <test-method signature="testFormatMessage_invalid()[pri:0, instance:jalview.util.MessageManagerTest@6650813a]" started-at="2023-07-02T10:13:35Z" name="testFormatMessage_invalid" finished-at="2023-07-02T10:13:35Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFormatMessage_invalid -->
        <test-method signature="testGetStringOrReturn()[pri:0, instance:jalview.util.MessageManagerTest@6650813a]" started-at="2023-07-02T10:13:35Z" name="testGetStringOrReturn" finished-at="2023-07-02T10:13:35Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetStringOrReturn -->
        <test-method signature="testGetString_invalid()[pri:0, instance:jalview.util.MessageManagerTest@6650813a]" started-at="2023-07-02T10:13:35Z" name="testGetString_invalid" finished-at="2023-07-02T10:13:35Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetString_invalid -->
      </class> <!-- jalview.util.MessageManagerTest -->
      <class name="jalview.gui.SeqPanelTest">
        <test-method is-config="true" signature="setUpBeforeClass()[pri:0, instance:jalview.gui.SeqPanelTest@308a6984]" started-at="2023-07-02T10:11:59Z" name="setUpBeforeClass" finished-at="2023-07-02T10:11:59Z" duration-ms="59" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpBeforeClass -->
        <test-method signature="testAmbiguousAminoAcidGetsStatusMessage()[pri:0, instance:jalview.gui.SeqPanelTest@308a6984]" started-at="2023-07-02T10:11:59Z" name="testAmbiguousAminoAcidGetsStatusMessage" finished-at="2023-07-02T10:11:59Z" duration-ms="54" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAmbiguousAminoAcidGetsStatusMessage -->
        <test-method is-config="true" signature="setUpJvOptionPane()[pri:0, instance:jalview.gui.SeqPanelTest@308a6984]" started-at="2023-07-02T10:11:59Z" name="setUpJvOptionPane" finished-at="2023-07-02T10:11:59Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpJvOptionPane -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:jalview.gui.SeqPanelTest@308a6984]" started-at="2023-07-02T10:11:59Z" name="tearDown" finished-at="2023-07-02T10:11:59Z" duration-ms="27" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method signature="testFindColumn_unwrapped()[pri:0, instance:jalview.gui.SeqPanelTest@308a6984]" started-at="2023-07-02T10:11:59Z" name="testFindColumn_unwrapped" finished-at="2023-07-02T10:11:59Z" duration-ms="42" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFindColumn_unwrapped -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:jalview.gui.SeqPanelTest@308a6984]" started-at="2023-07-02T10:11:59Z" name="tearDown" finished-at="2023-07-02T10:11:59Z" duration-ms="21" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method signature="testFindColumn_wrapped()[pri:0, instance:jalview.gui.SeqPanelTest@308a6984]" started-at="2023-07-02T10:11:59Z" name="testFindColumn_wrapped" finished-at="2023-07-02T10:11:59Z" duration-ms="26" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFindColumn_wrapped -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:jalview.gui.SeqPanelTest@308a6984]" started-at="2023-07-02T10:11:59Z" name="tearDown" finished-at="2023-07-02T10:11:59Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method signature="testFindMousePosition_wrapped_annotations()[pri:0, instance:jalview.gui.SeqPanelTest@308a6984]" started-at="2023-07-02T10:11:59Z" name="testFindMousePosition_wrapped_annotations" finished-at="2023-07-02T10:11:59Z" duration-ms="16" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFindMousePosition_wrapped_annotations -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:jalview.gui.SeqPanelTest@308a6984]" started-at="2023-07-02T10:11:59Z" name="tearDown" finished-at="2023-07-02T10:11:59Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method signature="testFindMousePosition_wrapped_noAnnotations()[pri:0, instance:jalview.gui.SeqPanelTest@308a6984]" started-at="2023-07-02T10:11:59Z" name="testFindMousePosition_wrapped_noAnnotations" finished-at="2023-07-02T10:11:59Z" duration-ms="27" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFindMousePosition_wrapped_noAnnotations -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:jalview.gui.SeqPanelTest@308a6984]" started-at="2023-07-02T10:11:59Z" name="tearDown" finished-at="2023-07-02T10:11:59Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method signature="testFindMousePosition_wrapped_scaleAbove()[pri:0, instance:jalview.gui.SeqPanelTest@308a6984]" started-at="2023-07-02T10:11:59Z" name="testFindMousePosition_wrapped_scaleAbove" finished-at="2023-07-02T10:11:59Z" duration-ms="19" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFindMousePosition_wrapped_scaleAbove -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:jalview.gui.SeqPanelTest@308a6984]" started-at="2023-07-02T10:11:59Z" name="tearDown" finished-at="2023-07-02T10:11:59Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method signature="testFindMousePosition_wrapped_scales_longSequence()[pri:0, instance:jalview.gui.SeqPanelTest@308a6984]" started-at="2023-07-02T10:11:59Z" name="testFindMousePosition_wrapped_scales_longSequence" finished-at="2023-07-02T10:11:59Z" duration-ms="234" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [17] but found [20]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [17] but found [20]
	at org.testng.Assert.fail(Assert.java:94)
	at org.testng.Assert.failNotEquals(Assert.java:496)
	at org.testng.Assert.assertEquals(Assert.java:125)
	at org.testng.Assert.assertEquals(Assert.java:372)
	at org.testng.Assert.assertEquals(Assert.java:382)
	at jalview.gui.SeqPanelTest.testFindMousePosition_wrapped_scales_longSequence(SeqPanelTest.java:940)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:648)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:834)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1142)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:124)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:771)
	at org.testng.TestRunner.run(TestRunner.java:621)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:357)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:352)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:310)
	at org.testng.SuiteRunner.run(SuiteRunner.java:259)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1176)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1101)
	at org.testng.TestNG.run(TestNG.java:1009)
	at org.gradle.api.internal.tasks.testing.testng.TestNGTestClassProcessor.runTests(TestNGTestClassProcessor.java:145)
	at org.gradle.api.internal.tasks.testing.testng.TestNGTestClassProcessor.stop(TestNGTestClassProcessor.java:92)
	at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.stop(SuiteTestClassProcessor.java:62)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:36)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24)
	at org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:33)
	at org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:94)
	at com.sun.proxy.$Proxy2.stop(Unknown Source)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker$3.run(TestWorker.java:193)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.executeAndMaintainThreadName(TestWorker.java:129)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.execute(TestWorker.java:100)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.execute(TestWorker.java:60)
	at org.gradle.process.internal.worker.child.ActionExecutionWorker.execute(ActionExecutionWorker.java:56)
	at org.gradle.process.internal.worker.child.SystemApplicationClassLoaderWorker.call(SystemApplicationClassLoaderWorker.java:113)
	at org.gradle.process.internal.worker.child.SystemApplicationClassLoaderWorker.call(SystemApplicationClassLoaderWorker.java:65)
	at worker.org.gradle.process.internal.worker.GradleWorkerMain.run(GradleWorkerMain.java:69)
	at worker.org.gradle.process.internal.worker.GradleWorkerMain.main(GradleWorkerMain.java:74)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFindMousePosition_wrapped_scales_longSequence -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:jalview.gui.SeqPanelTest@308a6984]" started-at="2023-07-02T10:11:59Z" name="tearDown" finished-at="2023-07-02T10:11:59Z" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method signature="testGetEditStatusMessage()[pri:0, instance:jalview.gui.SeqPanelTest@308a6984]" started-at="2023-07-02T10:11:59Z" name="testGetEditStatusMessage" finished-at="2023-07-02T10:11:59Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetEditStatusMessage -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:jalview.gui.SeqPanelTest@308a6984]" started-at="2023-07-02T10:11:59Z" name="tearDown" finished-at="2023-07-02T10:11:59Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:jalview.gui.SeqPanelTest@308a6984]" started-at="2023-07-02T10:11:59Z" name="tearDown" finished-at="2023-07-02T10:11:59Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method signature="testGetEditStatusMessage_lockedEditing()[pri:0, instance:jalview.gui.SeqPanelTest@308a6984]" started-at="2023-07-02T10:11:59Z" name="testGetEditStatusMessage_lockedEditing" finished-at="2023-07-02T10:11:59Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetEditStatusMessage_lockedEditing -->
        <test-method signature="testSetStatusReturnsNearestResiduePosition()[pri:0, instance:jalview.gui.SeqPanelTest@308a6984]" started-at="2023-07-02T10:11:59Z" name="testSetStatusReturnsNearestResiduePosition" finished-at="2023-07-02T10:11:59Z" duration-ms="14" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSetStatusReturnsNearestResiduePosition -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:jalview.gui.SeqPanelTest@308a6984]" started-at="2023-07-02T10:11:59Z" name="tearDown" finished-at="2023-07-02T10:11:59Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- jalview.gui.SeqPanelTest -->
      <class name="jalview.gui.ColourMenuHelperTest">
        <test-method is-config="true" signature="setUp()[pri:0, instance:jalview.gui.ColourMenuHelperTest@eadb475]" started-at="2023-07-02T10:12:10Z" name="setUp" finished-at="2023-07-02T10:12:10Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="testAddMenuItems_forAlignFrame()[pri:0, instance:jalview.gui.ColourMenuHelperTest@eadb475]" started-at="2023-07-02T10:12:10Z" name="testAddMenuItems_forAlignFrame" finished-at="2023-07-02T10:12:10Z" duration-ms="12" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAddMenuItems_forAlignFrame -->
        <test-method signature="testAddMenuItems_nucleotide()[pri:0, instance:jalview.gui.ColourMenuHelperTest@eadb475]" started-at="2023-07-02T10:12:10Z" name="testAddMenuItems_nucleotide" finished-at="2023-07-02T10:12:10Z" duration-ms="14" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAddMenuItems_nucleotide -->
        <test-method signature="testAddMenuItems_peptide()[pri:0, instance:jalview.gui.ColourMenuHelperTest@eadb475]" started-at="2023-07-02T10:12:10Z" name="testAddMenuItems_peptide" finished-at="2023-07-02T10:12:10Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAddMenuItems_peptide -->
        <test-method signature="testAddMenuItems_simpleOnly()[pri:0, instance:jalview.gui.ColourMenuHelperTest@eadb475]" started-at="2023-07-02T10:12:10Z" name="testAddMenuItems_simpleOnly" finished-at="2023-07-02T10:12:10Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAddMenuItems_simpleOnly -->
      </class> <!-- jalview.gui.ColourMenuHelperTest -->
      <class name="jalview.gui.ScalePanelTest">
        <test-method is-config="true" signature="setUpBeforeClass()[pri:0, instance:jalview.gui.ScalePanelTest@420bc288]" started-at="2023-07-02T10:11:56Z" name="setUpBeforeClass" finished-at="2023-07-02T10:11:56Z" duration-ms="50" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpBeforeClass -->
        <test-method signature="testBuildPopupMenu()[pri:0, instance:jalview.gui.ScalePanelTest@420bc288]" started-at="2023-07-02T10:11:56Z" name="testBuildPopupMenu" finished-at="2023-07-02T10:11:56Z" duration-ms="71" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testBuildPopupMenu -->
        <test-method is-config="true" signature="setUpJvOptionPane()[pri:0, instance:jalview.gui.ScalePanelTest@420bc288]" started-at="2023-07-02T10:11:56Z" name="setUpJvOptionPane" finished-at="2023-07-02T10:11:56Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpJvOptionPane -->
        <test-method signature="testPreventNegativeStartColumn()[pri:0, instance:jalview.gui.ScalePanelTest@420bc288]" started-at="2023-07-02T10:11:56Z" name="testPreventNegativeStartColumn" finished-at="2023-07-02T10:11:56Z" duration-ms="17" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testPreventNegativeStartColumn -->
        <test-method signature="testSelectColumns_withHidden()[pri:0, instance:jalview.gui.ScalePanelTest@420bc288]" started-at="2023-07-02T10:11:56Z" name="testSelectColumns_withHidden" finished-at="2023-07-02T10:11:56Z" duration-ms="24" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSelectColumns_withHidden -->
      </class> <!-- jalview.gui.ScalePanelTest -->
      <class name="jalview.datamodel.VisibleContigsIteratorTest">
        <test-method signature="testVisibleRegionsAtHiddenEdges()[pri:0, instance:jalview.datamodel.VisibleContigsIteratorTest@33d05366]" started-at="2023-07-02T10:12:18Z" name="testVisibleRegionsAtHiddenEdges" finished-at="2023-07-02T10:12:18Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testVisibleRegionsAtHiddenEdges -->
        <test-method signature="testMultipleVisibleRegions()[pri:0, instance:jalview.datamodel.VisibleContigsIteratorTest@33d05366]" started-at="2023-07-02T10:12:18Z" name="testMultipleVisibleRegions" finished-at="2023-07-02T10:12:18Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMultipleVisibleRegions -->
        <test-method signature="testSimpleVisibleRegions()[pri:0, instance:jalview.datamodel.VisibleContigsIteratorTest@33d05366]" started-at="2023-07-02T10:12:18Z" name="testSimpleVisibleRegions" finished-at="2023-07-02T10:12:18Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSimpleVisibleRegions -->
      </class> <!-- jalview.datamodel.VisibleContigsIteratorTest -->
      <class name="jalview.datamodel.features.FeatureStoreTest">
        <test-method signature="testContains()[pri:0, instance:jalview.datamodel.features.FeatureStoreTest@106faf11]" started-at="2023-07-02T10:12:31Z" name="testContains" finished-at="2023-07-02T10:12:31Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testContains -->
        <test-method signature="testAddFeature()[pri:0, instance:jalview.datamodel.features.FeatureStoreTest@106faf11]" started-at="2023-07-02T10:12:31Z" name="testAddFeature" finished-at="2023-07-02T10:12:31Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAddFeature -->
        <test-method signature="testFindFeatures_contactFeatures()[pri:0, instance:jalview.datamodel.features.FeatureStoreTest@106faf11]" started-at="2023-07-02T10:12:31Z" name="testFindFeatures_contactFeatures" finished-at="2023-07-02T10:12:31Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFindFeatures_contactFeatures -->
        <test-method signature="testDelete()[pri:0, instance:jalview.datamodel.features.FeatureStoreTest@106faf11]" started-at="2023-07-02T10:12:31Z" name="testDelete" finished-at="2023-07-02T10:12:31Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testDelete -->
        <test-method signature="testDelete_readd()[pri:0, instance:jalview.datamodel.features.FeatureStoreTest@106faf11]" started-at="2023-07-02T10:12:31Z" name="testDelete_readd" finished-at="2023-07-02T10:12:31Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testDelete_readd -->
        <test-method signature="testFindFeatures_nonNested()[pri:0, instance:jalview.datamodel.features.FeatureStoreTest@106faf11]" started-at="2023-07-02T10:12:31Z" name="testFindFeatures_nonNested" finished-at="2023-07-02T10:12:31Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFindFeatures_nonNested -->
        <test-method signature="testFindFeatures_nested()[pri:0, instance:jalview.datamodel.features.FeatureStoreTest@106faf11]" started-at="2023-07-02T10:12:31Z" name="testFindFeatures_nested" finished-at="2023-07-02T10:12:31Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFindFeatures_nested -->
        <test-method signature="testFindFeatures_mixed()[pri:0, instance:jalview.datamodel.features.FeatureStoreTest@106faf11]" started-at="2023-07-02T10:12:31Z" name="testFindFeatures_mixed" finished-at="2023-07-02T10:12:31Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFindFeatures_mixed -->
        <test-method signature="testGetFeatureGroups()[pri:0, instance:jalview.datamodel.features.FeatureStoreTest@106faf11]" started-at="2023-07-02T10:12:31Z" name="testGetFeatureGroups" finished-at="2023-07-02T10:12:31Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetFeatureGroups -->
        <test-method signature="testGetMinimumScore_getMaximumScore()[pri:0, instance:jalview.datamodel.features.FeatureStoreTest@106faf11]" started-at="2023-07-02T10:12:31Z" name="testGetMinimumScore_getMaximumScore" finished-at="2023-07-02T10:12:31Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetMinimumScore_getMaximumScore -->
        <test-method signature="testGetFeatureLength()[pri:0, instance:jalview.datamodel.features.FeatureStoreTest@106faf11]" started-at="2023-07-02T10:12:31Z" name="testGetFeatureLength" finished-at="2023-07-02T10:12:31Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetFeatureLength -->
        <test-method signature="testGetPositionalFeatures()[pri:0, instance:jalview.datamodel.features.FeatureStoreTest@106faf11]" started-at="2023-07-02T10:12:31Z" name="testGetPositionalFeatures" finished-at="2023-07-02T10:12:31Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetPositionalFeatures -->
        <test-method signature="testGetFeaturesForGroup()[pri:0, instance:jalview.datamodel.features.FeatureStoreTest@106faf11]" started-at="2023-07-02T10:12:31Z" name="testGetFeaturesForGroup" finished-at="2023-07-02T10:12:31Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetFeaturesForGroup -->
        <test-method signature="testMax()[pri:0, instance:jalview.datamodel.features.FeatureStoreTest@106faf11]" started-at="2023-07-02T10:12:31Z" name="testMax" finished-at="2023-07-02T10:12:31Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMax -->
        <test-method signature="testGetTotalFeatureLength()[pri:0, instance:jalview.datamodel.features.FeatureStoreTest@106faf11]" started-at="2023-07-02T10:12:31Z" name="testGetTotalFeatureLength" finished-at="2023-07-02T10:12:31Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetTotalFeatureLength -->
        <test-method signature="testMin()[pri:0, instance:jalview.datamodel.features.FeatureStoreTest@106faf11]" started-at="2023-07-02T10:12:31Z" name="testMin" finished-at="2023-07-02T10:12:31Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMin -->
        <test-method signature="testListContains()[pri:0, instance:jalview.datamodel.features.FeatureStoreTest@106faf11]" started-at="2023-07-02T10:12:31Z" name="testListContains" finished-at="2023-07-02T10:12:31Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testListContains -->
        <test-method signature="testShiftFeatures()[pri:0, instance:jalview.datamodel.features.FeatureStoreTest@106faf11]" started-at="2023-07-02T10:12:31Z" name="testShiftFeatures" finished-at="2023-07-02T10:12:31Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testShiftFeatures -->
        <test-method signature="testIsEmpty()[pri:0, instance:jalview.datamodel.features.FeatureStoreTest@106faf11]" started-at="2023-07-02T10:12:31Z" name="testIsEmpty" finished-at="2023-07-02T10:12:31Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testIsEmpty -->
      </class> <!-- jalview.datamodel.features.FeatureStoreTest -->
      <class name="jalview.ext.ensembl.EnsemblGeneTest">
        <test-method is-config="true" signature="setUp()[pri:0, instance:jalview.ext.ensembl.EnsemblGeneTest@7bfc3126]" started-at="2023-07-02T10:11:49Z" name="setUp" finished-at="2023-07-02T10:11:49Z" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="testGetFeatureColourScheme()[pri:0, instance:jalview.ext.ensembl.EnsemblGeneTest@7bfc3126]" started-at="2023-07-02T10:11:49Z" name="testGetFeatureColourScheme" finished-at="2023-07-02T10:11:49Z" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetFeatureColourScheme -->
        <test-method is-config="true" signature="setUpJvOptionPane()[pri:0, instance:jalview.ext.ensembl.EnsemblGeneTest@7bfc3126]" started-at="2023-07-02T10:11:49Z" name="setUpJvOptionPane" finished-at="2023-07-02T10:11:49Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpJvOptionPane -->
        <test-method signature="testGetGenomicRangesFromFeatures()[pri:0, instance:jalview.ext.ensembl.EnsemblGeneTest@7bfc3126]" started-at="2023-07-02T10:11:49Z" name="testGetGenomicRangesFromFeatures" finished-at="2023-07-02T10:11:49Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetGenomicRangesFromFeatures -->
        <test-method signature="testGetGenomicRangesFromFeatures_ncRNA_gene_reverseStrand()[pri:0, instance:jalview.ext.ensembl.EnsemblGeneTest@7bfc3126]" started-at="2023-07-02T10:11:49Z" name="testGetGenomicRangesFromFeatures_ncRNA_gene_reverseStrand" finished-at="2023-07-02T10:11:49Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetGenomicRangesFromFeatures_ncRNA_gene_reverseStrand -->
        <test-method signature="testGetIdentifyingFeatures()[pri:0, instance:jalview.ext.ensembl.EnsemblGeneTest@7bfc3126]" started-at="2023-07-02T10:11:49Z" name="testGetIdentifyingFeatures" finished-at="2023-07-02T10:11:49Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetIdentifyingFeatures -->
        <test-method signature="testRetainFeature()[pri:0, instance:jalview.ext.ensembl.EnsemblGeneTest@7bfc3126]" started-at="2023-07-02T10:11:49Z" name="testRetainFeature" finished-at="2023-07-02T10:11:49Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRetainFeature -->
        <test-method signature="testGetTranscriptFeatures()[pri:0, instance:jalview.ext.ensembl.EnsemblGeneTest@7bfc3126]" started-at="2023-07-02T10:11:49Z" name="testGetTranscriptFeatures" finished-at="2023-07-02T10:11:49Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetTranscriptFeatures -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:jalview.ext.ensembl.EnsemblGeneTest@7bfc3126]" started-at="2023-07-02T10:11:49Z" name="tearDown" finished-at="2023-07-02T10:11:49Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- jalview.ext.ensembl.EnsemblGeneTest -->
      <class name="jalview.datamodel.features.FeatureMatcherSetTest">
        <test-method signature="testFromString()[pri:0, instance:jalview.datamodel.features.FeatureMatcherSetTest@33aa93c]" started-at="2023-07-02T10:12:20Z" name="testFromString" finished-at="2023-07-02T10:12:20Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFromString -->
        <test-method signature="testAnd()[pri:0, instance:jalview.datamodel.features.FeatureMatcherSetTest@33aa93c]" started-at="2023-07-02T10:12:20Z" name="testAnd" finished-at="2023-07-02T10:12:20Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAnd -->
        <test-method signature="testGetMatchers()[pri:0, instance:jalview.datamodel.features.FeatureMatcherSetTest@33aa93c]" started-at="2023-07-02T10:12:20Z" name="testGetMatchers" finished-at="2023-07-02T10:12:20Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetMatchers -->
        <test-method signature="testMatches_byAttribute()[pri:0, instance:jalview.datamodel.features.FeatureMatcherSetTest@33aa93c]" started-at="2023-07-02T10:12:20Z" name="testMatches_byAttribute" finished-at="2023-07-02T10:12:20Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMatches_byAttribute -->
        <test-method signature="testMatches_compoundKey()[pri:0, instance:jalview.datamodel.features.FeatureMatcherSetTest@33aa93c]" started-at="2023-07-02T10:12:20Z" name="testMatches_compoundKey" finished-at="2023-07-02T10:12:20Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMatches_compoundKey -->
        <test-method signature="testIsEmpty()[pri:0, instance:jalview.datamodel.features.FeatureMatcherSetTest@33aa93c]" started-at="2023-07-02T10:12:20Z" name="testIsEmpty" finished-at="2023-07-02T10:12:20Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testIsEmpty -->
        <test-method signature="testOr()[pri:0, instance:jalview.datamodel.features.FeatureMatcherSetTest@33aa93c]" started-at="2023-07-02T10:12:20Z" name="testOr" finished-at="2023-07-02T10:12:20Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testOr -->
        <test-method signature="testToString()[pri:0, instance:jalview.datamodel.features.FeatureMatcherSetTest@33aa93c]" started-at="2023-07-02T10:12:20Z" name="testToString" finished-at="2023-07-02T10:12:20Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testToString -->
        <test-method signature="testToStableString()[pri:0, instance:jalview.datamodel.features.FeatureMatcherSetTest@33aa93c]" started-at="2023-07-02T10:12:20Z" name="testToStableString" finished-at="2023-07-02T10:12:20Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testToStableString -->
      </class> <!-- jalview.datamodel.features.FeatureMatcherSetTest -->
      <class name="jalview.bin.HiDPISettingTest1">
        <test-method is-config="true" signature="setUp()[pri:0, instance:jalview.bin.HiDPISettingTest1@1dfd5f51]" started-at="2023-07-02T10:13:35Z" name="setUp" finished-at="2023-07-02T10:13:36Z" duration-ms="148" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="testHiDPISettingInit()[pri:0, instance:jalview.bin.HiDPISettingTest1@1dfd5f51]" started-at="2023-07-02T10:13:36Z" name="testHiDPISettingInit" finished-at="2023-07-02T10:13:36Z" duration-ms="679" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testHiDPISettingInit -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:jalview.bin.HiDPISettingTest1@1dfd5f51]" started-at="2023-07-02T10:13:36Z" name="tearDown" finished-at="2023-07-02T10:13:36Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- jalview.bin.HiDPISettingTest1 -->
      <class name="jalview.schemes.BuriedColourSchemeTest">
        <test-method signature="testFindColour()[pri:0, instance:jalview.schemes.BuriedColourSchemeTest@1f2d2181]" started-at="2023-07-02T10:11:59Z" name="testFindColour" finished-at="2023-07-02T10:11:59Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFindColour -->
      </class> <!-- jalview.schemes.BuriedColourSchemeTest -->
      <class name="jalview.bin.HiDPISettingTest2">
        <test-method signature="testHiDPISettings(int)[pri:0, instance:jalview.bin.HiDPISettingTest2@3c321bdb]" started-at="2023-07-02T10:13:36Z" name="testHiDPISettings" data-provider="hidpiScaleArguments" finished-at="2023-07-02T10:13:38Z" duration-ms="1721" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testHiDPISettings -->
        <test-method signature="testHiDPISettings(int)[pri:0, instance:jalview.bin.HiDPISettingTest2@3c321bdb]" started-at="2023-07-02T10:13:38Z" name="testHiDPISettings" data-provider="hidpiScaleArguments" finished-at="2023-07-02T10:13:40Z" duration-ms="1742" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testHiDPISettings -->
        <test-method signature="testHiDPISettings(int)[pri:0, instance:jalview.bin.HiDPISettingTest2@3c321bdb]" started-at="2023-07-02T10:13:40Z" name="testHiDPISettings" data-provider="hidpiScaleArguments" finished-at="2023-07-02T10:13:42Z" duration-ms="1799" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[4]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testHiDPISettings -->
        <test-method signature="testHiDPISettings(int)[pri:0, instance:jalview.bin.HiDPISettingTest2@3c321bdb]" started-at="2023-07-02T10:13:42Z" name="testHiDPISettings" data-provider="hidpiScaleArguments" finished-at="2023-07-02T10:13:43Z" duration-ms="1762" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testHiDPISettings -->
      </class> <!-- jalview.bin.HiDPISettingTest2 -->
      <class name="jalview.gui.AnnotationLabelsTest">
        <test-method signature="testGetStatusMessage()[pri:0, instance:jalview.gui.AnnotationLabelsTest@49ef32e0]" started-at="2023-07-02T10:12:02Z" name="testGetStatusMessage" finished-at="2023-07-02T10:12:02Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetStatusMessage -->
        <test-method signature="testGetTooltip()[pri:0, instance:jalview.gui.AnnotationLabelsTest@49ef32e0]" started-at="2023-07-02T10:12:02Z" name="testGetTooltip" finished-at="2023-07-02T10:12:02Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetTooltip -->
      </class> <!-- jalview.gui.AnnotationLabelsTest -->
      <class name="jalview.datamodel.ColumnSelectionTest">
        <test-method signature="testAddElement()[pri:0, instance:jalview.datamodel.ColumnSelectionTest@3ad394e6]" started-at="2023-07-02T10:13:44Z" name="testAddElement" finished-at="2023-07-02T10:13:44Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAddElement -->
        <test-method is-config="true" signature="setUpJvOptionPane()[pri:0, instance:jalview.datamodel.ColumnSelectionTest@3ad394e6]" started-at="2023-07-02T10:13:44Z" name="setUpJvOptionPane" finished-at="2023-07-02T10:13:44Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpJvOptionPane -->
        <test-method signature="testFilterAnnotations()[pri:0, instance:jalview.datamodel.ColumnSelectionTest@3ad394e6]" started-at="2023-07-02T10:13:44Z" name="testFilterAnnotations" finished-at="2023-07-02T10:13:44Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFilterAnnotations -->
        <test-method signature="testCopyConstructor()[pri:0, instance:jalview.datamodel.ColumnSelectionTest@3ad394e6]" started-at="2023-07-02T10:13:44Z" name="testCopyConstructor" finished-at="2023-07-02T10:13:44Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCopyConstructor -->
        <test-method signature="testEquals()[pri:0, instance:jalview.datamodel.ColumnSelectionTest@3ad394e6]" started-at="2023-07-02T10:13:44Z" name="testEquals" finished-at="2023-07-02T10:13:44Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testEquals -->
        <test-method signature="testGetSelected()[pri:0, instance:jalview.datamodel.ColumnSelectionTest@3ad394e6]" started-at="2023-07-02T10:13:44Z" name="testGetSelected" finished-at="2023-07-02T10:13:44Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetSelected -->
        <test-method signature="testGetSelected_concurrentModification()[pri:0, instance:jalview.datamodel.ColumnSelectionTest@3ad394e6]" started-at="2023-07-02T10:13:44Z" name="testGetSelected_concurrentModification" finished-at="2023-07-02T10:13:44Z" duration-ms="0" status="PASS">
          <exception class="java.util.ConcurrentModificationException">
            <full-stacktrace>
              <![CDATA[java.util.ConcurrentModificationException
	at java.base/java.util.ArrayList$Itr.checkForComodification(ArrayList.java:1043)
	at java.base/java.util.ArrayList$Itr.next(ArrayList.java:997)
	at java.base/java.util.Collections$UnmodifiableCollection$1.next(Collections.java:1047)
	at jalview.datamodel.ColumnSelectionTest.testGetSelected_concurrentModification(ColumnSelectionTest.java:428)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:648)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:834)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1142)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:124)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:771)
	at org.testng.TestRunner.run(TestRunner.java:621)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:357)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:352)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:310)
	at org.testng.SuiteRunner.run(SuiteRunner.java:259)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1176)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1101)
	at org.testng.TestNG.run(TestNG.java:1009)
	at org.gradle.api.internal.tasks.testing.testng.TestNGTestClassProcessor.runTests(TestNGTestClassProcessor.java:145)
	at org.gradle.api.internal.tasks.testing.testng.TestNGTestClassProcessor.stop(TestNGTestClassProcessor.java:92)
	at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.stop(SuiteTestClassProcessor.java:62)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:36)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24)
	at org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:33)
	at org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:94)
	at com.sun.proxy.$Proxy2.stop(Unknown Source)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker$3.run(TestWorker.java:193)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.executeAndMaintainThreadName(TestWorker.java:129)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.execute(TestWorker.java:100)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.execute(TestWorker.java:60)
	at org.gradle.process.internal.worker.child.ActionExecutionWorker.execute(ActionExecutionWorker.java:56)
	at org.gradle.process.internal.worker.child.SystemApplicationClassLoaderWorker.call(SystemApplicationClassLoaderWorker.java:113)
	at org.gradle.process.internal.worker.child.SystemApplicationClassLoaderWorker.call(SystemApplicationClassLoaderWorker.java:65)
	at worker.org.gradle.process.internal.worker.GradleWorkerMain.run(GradleWorkerMain.java:69)
	at worker.org.gradle.process.internal.worker.GradleWorkerMain.main(GradleWorkerMain.java:74)
]]>
            </full-stacktrace>
          </exception> <!-- java.util.ConcurrentModificationException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetSelected_concurrentModification -->
        <test-method signature="testGetSelected_isReadOnly()[pri:0, instance:jalview.datamodel.ColumnSelectionTest@3ad394e6]" started-at="2023-07-02T10:13:44Z" name="testGetSelected_isReadOnly" finished-at="2023-07-02T10:13:44Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetSelected_isReadOnly -->
        <test-method signature="testGetSelectedRanges()[pri:0, instance:jalview.datamodel.ColumnSelectionTest@3ad394e6]" started-at="2023-07-02T10:13:44Z" name="testGetSelectedRanges" finished-at="2023-07-02T10:13:44Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetSelectedRanges -->
        <test-method signature="testHideColumns_withSelection()[pri:0, instance:jalview.datamodel.ColumnSelectionTest@3ad394e6]" started-at="2023-07-02T10:13:44Z" name="testHideColumns_withSelection" finished-at="2023-07-02T10:13:44Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testHideColumns_withSelection -->
        <test-method signature="testHideSelectedColumns()[pri:0, instance:jalview.datamodel.ColumnSelectionTest@3ad394e6]" started-at="2023-07-02T10:13:44Z" name="testHideSelectedColumns" finished-at="2023-07-02T10:13:44Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testHideSelectedColumns -->
        <test-method signature="testMarkColumns_extend()[pri:0, instance:jalview.datamodel.ColumnSelectionTest@3ad394e6]" started-at="2023-07-02T10:13:44Z" name="testMarkColumns_extend" finished-at="2023-07-02T10:13:44Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMarkColumns_extend -->
        <test-method signature="testMaxColumnSelection()[pri:0, instance:jalview.datamodel.ColumnSelectionTest@3ad394e6]" started-at="2023-07-02T10:13:44Z" name="testMaxColumnSelection" finished-at="2023-07-02T10:13:44Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMaxColumnSelection -->
        <test-method signature="testMarkColumns_toggle()[pri:0, instance:jalview.datamodel.ColumnSelectionTest@3ad394e6]" started-at="2023-07-02T10:13:44Z" name="testMarkColumns_toggle" finished-at="2023-07-02T10:13:44Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMarkColumns_toggle -->
        <test-method signature="testMarkColumns()[pri:0, instance:jalview.datamodel.ColumnSelectionTest@3ad394e6]" started-at="2023-07-02T10:13:44Z" name="testMarkColumns" finished-at="2023-07-02T10:13:44Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMarkColumns -->
        <test-method signature="testMinColumnSelection()[pri:0, instance:jalview.datamodel.ColumnSelectionTest@3ad394e6]" started-at="2023-07-02T10:13:44Z" name="testMinColumnSelection" finished-at="2023-07-02T10:13:44Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMinColumnSelection -->
        <test-method signature="testInvertColumnSelection()[pri:0, instance:jalview.datamodel.ColumnSelectionTest@3ad394e6]" started-at="2023-07-02T10:13:44Z" name="testInvertColumnSelection" finished-at="2023-07-02T10:13:44Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testInvertColumnSelection -->
        <test-method signature="testMarkColumns_invert()[pri:0, instance:jalview.datamodel.ColumnSelectionTest@3ad394e6]" started-at="2023-07-02T10:13:44Z" name="testMarkColumns_invert" finished-at="2023-07-02T10:13:44Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMarkColumns_invert -->
        <test-method signature="testRemoveElement()[pri:0, instance:jalview.datamodel.ColumnSelectionTest@3ad394e6]" started-at="2023-07-02T10:13:44Z" name="testRemoveElement" finished-at="2023-07-02T10:13:44Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemoveElement -->
        <test-method signature="testStretchGroup_shrink()[pri:0, instance:jalview.datamodel.ColumnSelectionTest@3ad394e6]" started-at="2023-07-02T10:13:44Z" name="testStretchGroup_shrink" finished-at="2023-07-02T10:13:44Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testStretchGroup_shrink -->
        <test-method signature="testSetElementsFrom()[pri:0, instance:jalview.datamodel.ColumnSelectionTest@3ad394e6]" started-at="2023-07-02T10:13:44Z" name="testSetElementsFrom" finished-at="2023-07-02T10:13:44Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSetElementsFrom -->
        <test-method signature="testStretchGroup_expand()[pri:0, instance:jalview.datamodel.ColumnSelectionTest@3ad394e6]" started-at="2023-07-02T10:13:44Z" name="testStretchGroup_expand" finished-at="2023-07-02T10:13:44Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testStretchGroup_expand -->
      </class> <!-- jalview.datamodel.ColumnSelectionTest -->
      <class name="jalview.util.ParseHtmlBodyAndLinksTest">
        <test-method signature="testParseHtml_noLinks()[pri:0, instance:jalview.util.ParseHtmlBodyAndLinksTest@44ea608c]" started-at="2023-07-02T10:13:36Z" name="testParseHtml_noLinks" finished-at="2023-07-02T10:13:36Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testParseHtml_noLinks -->
        <test-method is-config="true" signature="setUpJvOptionPane()[pri:0, instance:jalview.util.ParseHtmlBodyAndLinksTest@44ea608c]" started-at="2023-07-02T10:13:36Z" name="setUpJvOptionPane" finished-at="2023-07-02T10:13:36Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpJvOptionPane -->
        <test-method signature="testParseHtml_withLinksWithEncoding()[pri:0, instance:jalview.util.ParseHtmlBodyAndLinksTest@44ea608c]" started-at="2023-07-02T10:13:36Z" name="testParseHtml_withLinksWithEncoding" finished-at="2023-07-02T10:13:36Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testParseHtml_withLinksWithEncoding -->
        <test-method signature="testParseHtml_withLinks()[pri:0, instance:jalview.util.ParseHtmlBodyAndLinksTest@44ea608c]" started-at="2023-07-02T10:13:36Z" name="testParseHtml_withLinks" finished-at="2023-07-02T10:13:36Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testParseHtml_withLinks -->
        <test-method signature="testParseHtml_withLinksWithParameters()[pri:0, instance:jalview.util.ParseHtmlBodyAndLinksTest@44ea608c]" started-at="2023-07-02T10:13:36Z" name="testParseHtml_withLinksWithParameters" finished-at="2023-07-02T10:13:36Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testParseHtml_withLinksWithParameters -->
      </class> <!-- jalview.util.ParseHtmlBodyAndLinksTest -->
      <class name="jalview.datamodel.CigarArrayTest">
        <test-method signature="testConstructor()[pri:0, instance:jalview.datamodel.CigarArrayTest@5a2f016d]" started-at="2023-07-02T10:13:44Z" name="testConstructor" finished-at="2023-07-02T10:13:44Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testConstructor -->
        <test-method is-config="true" signature="setUpJvOptionPane()[pri:0, instance:jalview.datamodel.CigarArrayTest@5a2f016d]" started-at="2023-07-02T10:13:44Z" name="setUpJvOptionPane" finished-at="2023-07-02T10:13:44Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpJvOptionPane -->
      </class> <!-- jalview.datamodel.CigarArrayTest -->
      <class name="jalview.renderer.ResidueColourFinderTest">
        <test-method signature="testGetResidueColour_none()[pri:0, instance:jalview.renderer.ResidueColourFinderTest@7cc9ce8]" started-at="2023-07-02T10:11:41Z" name="testGetResidueColour_none" finished-at="2023-07-02T10:11:41Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetResidueColour_none -->
        <test-method is-config="true" signature="setUpJvOptionPane()[pri:0, instance:jalview.renderer.ResidueColourFinderTest@7cc9ce8]" started-at="2023-07-02T10:11:41Z" name="setUpJvOptionPane" finished-at="2023-07-02T10:11:41Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpJvOptionPane -->
        <test-method signature="testGetResidueColour_userdef()[pri:0, instance:jalview.renderer.ResidueColourFinderTest@7cc9ce8]" started-at="2023-07-02T10:11:41Z" name="testGetResidueColour_userdef" finished-at="2023-07-02T10:11:41Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetResidueColour_userdef -->
        <test-method signature="testGetResidueColour_zappo()[pri:0, instance:jalview.renderer.ResidueColourFinderTest@7cc9ce8]" started-at="2023-07-02T10:11:41Z" name="testGetResidueColour_zappo" finished-at="2023-07-02T10:11:41Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetResidueColour_zappo -->
      </class> <!-- jalview.renderer.ResidueColourFinderTest -->
      <class name="jalview.datamodel.PDBEntryTest">
        <test-method is-config="true" signature="setUp()[pri:0, instance:jalview.datamodel.PDBEntryTest@7561db12]" started-at="2023-07-02T10:11:59Z" name="setUp" finished-at="2023-07-02T10:11:59Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="testConstructor_fromDbref()[pri:0, instance:jalview.datamodel.PDBEntryTest@7561db12]" started-at="2023-07-02T10:11:59Z" name="testConstructor_fromDbref" finished-at="2023-07-02T10:11:59Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testConstructor_fromDbref -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:jalview.datamodel.PDBEntryTest@7561db12]" started-at="2023-07-02T10:11:59Z" name="tearDown" finished-at="2023-07-02T10:11:59Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUpJvOptionPane()[pri:0, instance:jalview.datamodel.PDBEntryTest@7561db12]" started-at="2023-07-02T10:11:59Z" name="setUpJvOptionPane" finished-at="2023-07-02T10:11:59Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpJvOptionPane -->
        <test-method signature="testEquals()[pri:0, instance:jalview.datamodel.PDBEntryTest@7561db12]" started-at="2023-07-02T10:11:59Z" name="testEquals" finished-at="2023-07-02T10:11:59Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testEquals -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:jalview.datamodel.PDBEntryTest@7561db12]" started-at="2023-07-02T10:11:59Z" name="setUp" finished-at="2023-07-02T10:11:59Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:jalview.datamodel.PDBEntryTest@7561db12]" started-at="2023-07-02T10:11:59Z" name="tearDown" finished-at="2023-07-02T10:11:59Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:jalview.datamodel.PDBEntryTest@7561db12]" started-at="2023-07-02T10:11:59Z" name="tearDown" finished-at="2023-07-02T10:11:59Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method signature="testGetType()[pri:0, instance:jalview.datamodel.PDBEntryTest@7561db12]" started-at="2023-07-02T10:11:59Z" name="testGetType" finished-at="2023-07-02T10:11:59Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetType -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:jalview.datamodel.PDBEntryTest@7561db12]" started-at="2023-07-02T10:11:59Z" name="setUp" finished-at="2023-07-02T10:11:59Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="testTypeMatches()[pri:0, instance:jalview.datamodel.PDBEntryTest@7561db12]" started-at="2023-07-02T10:11:59Z" name="testTypeMatches" finished-at="2023-07-02T10:11:59Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testTypeMatches -->
        <test-method signature="testSetChainCode()[pri:0, instance:jalview.datamodel.PDBEntryTest@7561db12]" started-at="2023-07-02T10:11:59Z" name="testSetChainCode" finished-at="2023-07-02T10:11:59Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSetChainCode -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:jalview.datamodel.PDBEntryTest@7561db12]" started-at="2023-07-02T10:11:59Z" name="setUp" finished-at="2023-07-02T10:11:59Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:jalview.datamodel.PDBEntryTest@7561db12]" started-at="2023-07-02T10:11:59Z" name="setUp" finished-at="2023-07-02T10:11:59Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:jalview.datamodel.PDBEntryTest@7561db12]" started-at="2023-07-02T10:11:59Z" name="tearDown" finished-at="2023-07-02T10:11:59Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:jalview.datamodel.PDBEntryTest@7561db12]" started-at="2023-07-02T10:11:59Z" name="setUp" finished-at="2023-07-02T10:11:59Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:jalview.datamodel.PDBEntryTest@7561db12]" started-at="2023-07-02T10:11:59Z" name="tearDown" finished-at="2023-07-02T10:11:59Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method signature="testUpdateFrom()[pri:0, instance:jalview.datamodel.PDBEntryTest@7561db12]" started-at="2023-07-02T10:11:59Z" name="testUpdateFrom" finished-at="2023-07-02T10:11:59Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testUpdateFrom -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:jalview.datamodel.PDBEntryTest@7561db12]" started-at="2023-07-02T10:11:59Z" name="tearDown" finished-at="2023-07-02T10:11:59Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- jalview.datamodel.PDBEntryTest -->
      <class name="jalview.datamodel.MatchTest">
        <test-method is-config="true" signature="setUpJvOptionPane()[pri:0, instance:jalview.datamodel.MatchTest@4acf72b6]" started-at="2023-07-02T10:11:57Z" name="setUpJvOptionPane" finished-at="2023-07-02T10:11:57Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpJvOptionPane -->
        <test-method signature="testEquals()[pri:0, instance:jalview.datamodel.MatchTest@4acf72b6]" started-at="2023-07-02T10:11:57Z" name="testEquals" finished-at="2023-07-02T10:11:57Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testEquals -->
        <test-method signature="testToString()[pri:0, instance:jalview.datamodel.MatchTest@4acf72b6]" started-at="2023-07-02T10:11:57Z" name="testToString" finished-at="2023-07-02T10:11:57Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testToString -->
      </class> <!-- jalview.datamodel.MatchTest -->
      <class name="jalview.ws.rest.ShmmrRSBSService">
        <test-method signature="testShmmrService()[pri:0, instance:jalview.ws.rest.ShmmrRSBSService@15051a0]" started-at="2023-07-02T10:11:41Z" name="testShmmrService" finished-at="2023-07-02T10:11:41Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testShmmrService -->
        <test-method is-config="true" signature="setUpJvOptionPane()[pri:0, instance:jalview.ws.rest.ShmmrRSBSService@15051a0]" started-at="2023-07-02T10:11:41Z" name="setUpJvOptionPane" finished-at="2023-07-02T10:11:41Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpJvOptionPane -->
        <test-method signature="testShmmrServiceDataprep()[pri:0, instance:jalview.ws.rest.ShmmrRSBSService@15051a0]" started-at="2023-07-02T10:11:41Z" name="testShmmrServiceDataprep" finished-at="2023-07-02T10:11:41Z" duration-ms="101" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testShmmrServiceDataprep -->
      </class> <!-- jalview.ws.rest.ShmmrRSBSService -->
      <class name="jalview.schemes.ColourSchemePropertyTest">
        <test-method signature="testGetColourName()[pri:0, instance:jalview.schemes.ColourSchemePropertyTest@7ee55e70]" started-at="2023-07-02T10:12:01Z" name="testGetColourName" finished-at="2023-07-02T10:12:01Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetColourName -->
        <test-method signature="testGetColourScheme()[pri:0, instance:jalview.schemes.ColourSchemePropertyTest@7ee55e70]" started-at="2023-07-02T10:12:01Z" name="testGetColourScheme" finished-at="2023-07-02T10:12:01Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetColourScheme -->
      </class> <!-- jalview.schemes.ColourSchemePropertyTest -->
      <class name="jalview.analysis.AlignmentAnnotationUtilsTest">
        <test-method is-config="true" signature="setUp()[pri:0, instance:jalview.analysis.AlignmentAnnotationUtilsTest@6d1310f6]" started-at="2023-07-02T10:11:41Z" name="setUp" finished-at="2023-07-02T10:11:41Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="setUpJvOptionPane()[pri:0, instance:jalview.analysis.AlignmentAnnotationUtilsTest@6d1310f6]" started-at="2023-07-02T10:11:41Z" name="setUpJvOptionPane" finished-at="2023-07-02T10:11:41Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpJvOptionPane -->
        <test-method signature="testAsList()[pri:0, instance:jalview.analysis.AlignmentAnnotationUtilsTest@6d1310f6]" started-at="2023-07-02T10:11:41Z" name="testAsList" finished-at="2023-07-02T10:11:41Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAsList -->
        <test-method signature="testGetShownHiddenTypes_forSelectionGroup()[pri:0, instance:jalview.analysis.AlignmentAnnotationUtilsTest@6d1310f6]" started-at="2023-07-02T10:11:41Z" name="testGetShownHiddenTypes_forSelectionGroup" finished-at="2023-07-02T10:11:41Z" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetShownHiddenTypes_forSelectionGroup -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:jalview.analysis.AlignmentAnnotationUtilsTest@6d1310f6]" started-at="2023-07-02T10:11:41Z" name="setUp" finished-at="2023-07-02T10:11:41Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:jalview.analysis.AlignmentAnnotationUtilsTest@6d1310f6]" started-at="2023-07-02T10:11:41Z" name="setUp" finished-at="2023-07-02T10:11:41Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="testGetShownHiddenTypes_noSequenceSelected()[pri:0, instance:jalview.analysis.AlignmentAnnotationUtilsTest@6d1310f6]" started-at="2023-07-02T10:11:41Z" name="testGetShownHiddenTypes_noSequenceSelected" finished-at="2023-07-02T10:11:41Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetShownHiddenTypes_noSequenceSelected -->
        <test-method signature="testGetShownHiddenTypes_withGraphGroups()[pri:0, instance:jalview.analysis.AlignmentAnnotationUtilsTest@6d1310f6]" started-at="2023-07-02T10:11:41Z" name="testGetShownHiddenTypes_withGraphGroups" finished-at="2023-07-02T10:11:41Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetShownHiddenTypes_withGraphGroups -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:jalview.analysis.AlignmentAnnotationUtilsTest@6d1310f6]" started-at="2023-07-02T10:11:41Z" name="setUp" finished-at="2023-07-02T10:11:41Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:jalview.analysis.AlignmentAnnotationUtilsTest@6d1310f6]" started-at="2023-07-02T10:11:41Z" name="setUp" finished-at="2023-07-02T10:11:41Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="testGetVisibleGraphGroups()[pri:0, instance:jalview.analysis.AlignmentAnnotationUtilsTest@6d1310f6]" started-at="2023-07-02T10:11:41Z" name="testGetVisibleGraphGroups" finished-at="2023-07-02T10:11:41Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetVisibleGraphGroups -->
      </class> <!-- jalview.analysis.AlignmentAnnotationUtilsTest -->
      <class name="jalview.bin.JalviewLiteTest">
        <test-method signature="testSeparatorListToArray()[pri:0, instance:jalview.bin.JalviewLiteTest@24855019]" started-at="2023-07-02T10:13:43Z" name="testSeparatorListToArray" finished-at="2023-07-02T10:13:43Z" duration-ms="9" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSeparatorListToArray -->
        <test-method is-config="true" signature="setUpJvOptionPane()[pri:0, instance:jalview.bin.JalviewLiteTest@24855019]" started-at="2023-07-02T10:13:43Z" name="setUpJvOptionPane" finished-at="2023-07-02T10:13:43Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpJvOptionPane -->
      </class> <!-- jalview.bin.JalviewLiteTest -->
      <class name="jalview.project.Jalview2xmlTests">
        <test-method is-config="true" signature="setUpBeforeClass()[pri:0, instance:jalview.project.Jalview2xmlTests@39fc6b2c]" started-at="2023-07-02T10:13:13Z" name="setUpBeforeClass" finished-at="2023-07-02T10:13:13Z" duration-ms="48" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpBeforeClass -->
        <test-method is-config="true" signature="setUpJvOptionPane()[pri:0, instance:jalview.project.Jalview2xmlTests@39fc6b2c]" started-at="2023-07-02T10:13:13Z" name="setUpJvOptionPane" finished-at="2023-07-02T10:13:13Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpJvOptionPane -->
        <test-method signature="gatherViewsHere()[pri:0, instance:jalview.project.Jalview2xmlTests@39fc6b2c]" started-at="2023-07-02T10:13:13Z" name="gatherViewsHere" finished-at="2023-07-02T10:13:16Z" duration-ms="3104" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- gatherViewsHere -->
        <test-method signature="noDuplicatePdbMappingsMade()[pri:0, instance:jalview.project.Jalview2xmlTests@39fc6b2c]" started-at="2023-07-02T10:13:16Z" name="noDuplicatePdbMappingsMade" finished-at="2023-07-02T10:13:18Z" duration-ms="1894" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- noDuplicatePdbMappingsMade -->
        <test-method signature="testColourByAnnotScores()[pri:0, instance:jalview.project.Jalview2xmlTests@39fc6b2c]" started-at="2023-07-02T10:13:18Z" name="testColourByAnnotScores" finished-at="2023-07-02T10:13:18Z" duration-ms="288" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testColourByAnnotScores -->
        <test-method signature="testCopyViewSettings()[pri:0, instance:jalview.project.Jalview2xmlTests@39fc6b2c]" started-at="2023-07-02T10:13:18Z" name="testCopyViewSettings" finished-at="2023-07-02T10:13:21Z" duration-ms="2209" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCopyViewSettings -->
        <test-method signature="testIsVersionStringLaterThan()[pri:0, instance:jalview.project.Jalview2xmlTests@39fc6b2c]" started-at="2023-07-02T10:13:21Z" name="testIsVersionStringLaterThan" finished-at="2023-07-02T10:13:21Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testIsVersionStringLaterThan -->
        <test-method signature="testMergeDatasetsforManyViews()[pri:0, instance:jalview.project.Jalview2xmlTests@39fc6b2c]" started-at="2023-07-02T10:13:21Z" name="testMergeDatasetsforManyViews" finished-at="2023-07-02T10:13:21Z" duration-ms="691" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMergeDatasetsforManyViews -->
        <test-method signature="testMergeDatasetsforViews()[pri:0, instance:jalview.project.Jalview2xmlTests@39fc6b2c]" started-at="2023-07-02T10:13:21Z" name="testMergeDatasetsforViews" finished-at="2023-07-02T10:13:21Z" duration-ms="138" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMergeDatasetsforViews -->
        <test-method signature="testPcaViewAssociation()[pri:0, instance:jalview.project.Jalview2xmlTests@39fc6b2c]" started-at="2023-07-02T10:13:21Z" name="testPcaViewAssociation" finished-at="2023-07-02T10:13:22Z" duration-ms="347" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testPcaViewAssociation -->
        <test-method signature="testRNAStructureRecovery()[pri:0, instance:jalview.project.Jalview2xmlTests@39fc6b2c]" started-at="2023-07-02T10:13:22Z" name="testRNAStructureRecovery" finished-at="2023-07-02T10:13:22Z" duration-ms="432" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRNAStructureRecovery -->
        <test-method signature="testSaveLoadFeatureColoursAndFilters()[pri:0, instance:jalview.project.Jalview2xmlTests@39fc6b2c]" started-at="2023-07-02T10:13:22Z" name="testSaveLoadFeatureColoursAndFilters" finished-at="2023-07-02T10:13:22Z" duration-ms="83" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSaveLoadFeatureColoursAndFilters -->
        <test-method signature="testStoreAndRecoverColourThresholds()[pri:0, instance:jalview.project.Jalview2xmlTests@39fc6b2c]" started-at="2023-07-02T10:13:22Z" name="testStoreAndRecoverColourThresholds" finished-at="2023-07-02T10:13:22Z" duration-ms="134" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testStoreAndRecoverColourThresholds -->
        <test-method signature="testStoreAndRecoverExpandedviews()[pri:0, instance:jalview.project.Jalview2xmlTests@39fc6b2c]" started-at="2023-07-02T10:13:22Z" name="testStoreAndRecoverExpandedviews" finished-at="2023-07-02T10:13:28Z" duration-ms="5410" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testStoreAndRecoverExpandedviews -->
        <test-method signature="testStoreAndRecoverGeneLocus()[pri:0, instance:jalview.project.Jalview2xmlTests@39fc6b2c]" started-at="2023-07-02T10:13:28Z" name="testStoreAndRecoverGeneLocus" finished-at="2023-07-02T10:13:28Z" duration-ms="171" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testStoreAndRecoverGeneLocus -->
        <test-method signature="testStoreAndRecoverGroupRepSeqs()[pri:0, instance:jalview.project.Jalview2xmlTests@39fc6b2c]" started-at="2023-07-02T10:13:28Z" name="testStoreAndRecoverGroupRepSeqs" finished-at="2023-07-02T10:13:28Z" duration-ms="158" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testStoreAndRecoverGroupRepSeqs -->
        <test-method signature="testStoreAndRecoverPDBEntry()[pri:0, instance:jalview.project.Jalview2xmlTests@39fc6b2c]" started-at="2023-07-02T10:13:28Z" name="testStoreAndRecoverPDBEntry" finished-at="2023-07-02T10:13:29Z" duration-ms="590" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testStoreAndRecoverPDBEntry -->
        <test-method signature="testStoreAndRecoverReferenceSeqSettings()[pri:0, instance:jalview.project.Jalview2xmlTests@39fc6b2c]" started-at="2023-07-02T10:13:29Z" name="testStoreAndRecoverReferenceSeqSettings" finished-at="2023-07-02T10:13:34Z" duration-ms="5011" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testStoreAndRecoverReferenceSeqSettings -->
        <test-method signature="testTCoffeeScores()[pri:0, instance:jalview.project.Jalview2xmlTests@39fc6b2c]" started-at="2023-07-02T10:13:34Z" name="testTCoffeeScores" finished-at="2023-07-02T10:13:34Z" duration-ms="156" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testTCoffeeScores -->
        <test-method signature="viewRefPdbAnnotation()[pri:0, instance:jalview.project.Jalview2xmlTests@39fc6b2c]" started-at="2023-07-02T10:13:34Z" name="viewRefPdbAnnotation" finished-at="2023-07-02T10:13:35Z" duration-ms="1456" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- viewRefPdbAnnotation -->
        <test-method is-config="true" signature="tearDownAfterClass()[pri:0, instance:jalview.project.Jalview2xmlTests@39fc6b2c]" started-at="2023-07-02T10:13:35Z" name="tearDownAfterClass" finished-at="2023-07-02T10:13:35Z" duration-ms="42" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownAfterClass -->
      </class> <!-- jalview.project.Jalview2xmlTests -->
      <class name="jalview.viewmodel.styles.ViewStyleTest">
        <test-method is-config="true" signature="setUpJvOptionPane()[pri:0, instance:jalview.viewmodel.styles.ViewStyleTest@130a0f66]" started-at="2023-07-02T10:13:44Z" name="setUpJvOptionPane" finished-at="2023-07-02T10:13:44Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpJvOptionPane -->
        <test-method signature="testCopyConstructor()[pri:0, instance:jalview.viewmodel.styles.ViewStyleTest@130a0f66]" started-at="2023-07-02T10:13:44Z" name="testCopyConstructor" finished-at="2023-07-02T10:13:44Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCopyConstructor -->
        <test-method signature="testEquals()[pri:0, instance:jalview.viewmodel.styles.ViewStyleTest@130a0f66]" started-at="2023-07-02T10:13:44Z" name="testEquals" finished-at="2023-07-02T10:13:44Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testEquals -->
      </class> <!-- jalview.viewmodel.styles.ViewStyleTest -->
      <class name="jalview.util.DnaUtilsTest">
        <test-method is-config="true" signature="setUpJvOptionPane()[pri:0, instance:jalview.util.DnaUtilsTest@5a6d5a8f]" started-at="2023-07-02T10:12:10Z" name="setUpJvOptionPane" finished-at="2023-07-02T10:12:10Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpJvOptionPane -->
        <test-method signature="testParseLocation()[pri:0, instance:jalview.util.DnaUtilsTest@5a6d5a8f]" started-at="2023-07-02T10:12:10Z" name="testParseLocation" finished-at="2023-07-02T10:12:10Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testParseLocation -->
      </class> <!-- jalview.util.DnaUtilsTest -->
      <class name="jalview.util.matcher.MatcherTest">
        <test-method signature="testConstructor()[pri:0, instance:jalview.util.matcher.MatcherTest@2899a8db]" started-at="2023-07-02T10:13:43Z" name="testConstructor" finished-at="2023-07-02T10:13:43Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testConstructor -->
        <test-method signature="testEquals()[pri:0, instance:jalview.util.matcher.MatcherTest@2899a8db]" started-at="2023-07-02T10:13:43Z" name="testEquals" finished-at="2023-07-02T10:13:43Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testEquals -->
        <test-method signature="testMatches_floatWithStringCondition()[pri:0, instance:jalview.util.matcher.MatcherTest@2899a8db]" started-at="2023-07-02T10:13:43Z" name="testMatches_floatWithStringCondition" finished-at="2023-07-02T10:13:43Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMatches_floatWithStringCondition -->
        <test-method signature="testMatches_floatValueIntegerCondition()[pri:0, instance:jalview.util.matcher.MatcherTest@2899a8db]" started-at="2023-07-02T10:13:43Z" name="testMatches_floatValueIntegerCondition" finished-at="2023-07-02T10:13:43Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMatches_floatValueIntegerCondition -->
        <test-method signature="testMatches_long()[pri:0, instance:jalview.util.matcher.MatcherTest@2899a8db]" started-at="2023-07-02T10:13:43Z" name="testMatches_long" finished-at="2023-07-02T10:13:43Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMatches_long -->
        <test-method signature="testMatches_float()[pri:0, instance:jalview.util.matcher.MatcherTest@2899a8db]" started-at="2023-07-02T10:13:43Z" name="testMatches_float" finished-at="2023-07-02T10:13:43Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMatches_float -->
        <test-method signature="testHashCode()[pri:0, instance:jalview.util.matcher.MatcherTest@2899a8db]" started-at="2023-07-02T10:13:43Z" name="testHashCode" finished-at="2023-07-02T10:13:43Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testHashCode -->
        <test-method signature="testMatches_pattern()[pri:0, instance:jalview.util.matcher.MatcherTest@2899a8db]" started-at="2023-07-02T10:13:43Z" name="testMatches_pattern" finished-at="2023-07-02T10:13:43Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMatches_pattern -->
        <test-method signature="testNumericMatch_nullOrInvalidValue()[pri:0, instance:jalview.util.matcher.MatcherTest@2899a8db]" started-at="2023-07-02T10:13:43Z" name="testNumericMatch_nullOrInvalidValue" finished-at="2023-07-02T10:13:43Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testNumericMatch_nullOrInvalidValue -->
        <test-method signature="testToString()[pri:0, instance:jalview.util.matcher.MatcherTest@2899a8db]" started-at="2023-07-02T10:13:43Z" name="testToString" finished-at="2023-07-02T10:13:43Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testToString -->
      </class> <!-- jalview.util.matcher.MatcherTest -->
      <class name="jalview.analysis.scoremodels.FeatureDistanceModelTest">
        <test-method signature="testFeatureScoreModel()[pri:0, instance:jalview.analysis.scoremodels.FeatureDistanceModelTest@3153ddfc]" started-at="2023-07-02T10:12:18Z" name="testFeatureScoreModel" finished-at="2023-07-02T10:12:18Z" duration-ms="24" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFeatureScoreModel -->
        <test-method is-config="true" signature="setUpJvOptionPane()[pri:0, instance:jalview.analysis.scoremodels.FeatureDistanceModelTest@3153ddfc]" started-at="2023-07-02T10:12:18Z" name="setUpJvOptionPane" finished-at="2023-07-02T10:12:18Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpJvOptionPane -->
        <test-method signature="testFeatureScoreModel_HiddenColumns()[pri:0, instance:jalview.analysis.scoremodels.FeatureDistanceModelTest@3153ddfc]" started-at="2023-07-02T10:12:18Z" name="testFeatureScoreModel_HiddenColumns" finished-at="2023-07-02T10:12:18Z" duration-ms="22" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFeatureScoreModel_HiddenColumns -->
        <test-method signature="testFeatureScoreModel_hiddenFirstColumn()[pri:0, instance:jalview.analysis.scoremodels.FeatureDistanceModelTest@3153ddfc]" started-at="2023-07-02T10:12:18Z" name="testFeatureScoreModel_hiddenFirstColumn" finished-at="2023-07-02T10:12:18Z" duration-ms="16" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFeatureScoreModel_hiddenFirstColumn -->
        <test-method signature="testFindDistances()[pri:0, instance:jalview.analysis.scoremodels.FeatureDistanceModelTest@3153ddfc]" started-at="2023-07-02T10:12:18Z" name="testFindDistances" finished-at="2023-07-02T10:12:18Z" duration-ms="22" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFindDistances -->
        <test-method signature="testFindDistances_withParams()[pri:0, instance:jalview.analysis.scoremodels.FeatureDistanceModelTest@3153ddfc]" started-at="2023-07-02T10:12:18Z" name="testFindDistances_withParams" finished-at="2023-07-02T10:12:18Z" duration-ms="16" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFindDistances_withParams -->
        <test-method signature="testFindFeatureAt_PointFeature()[pri:0, instance:jalview.analysis.scoremodels.FeatureDistanceModelTest@3153ddfc]" started-at="2023-07-02T10:12:18Z" name="testFindFeatureAt_PointFeature" finished-at="2023-07-02T10:12:18Z" duration-ms="18" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFindFeatureAt_PointFeature -->
      </class> <!-- jalview.analysis.scoremodels.FeatureDistanceModelTest -->
      <class name="jalview.ext.so.SequenceOntologyTest">
        <test-method is-config="true" signature="setUp()[pri:0, instance:jalview.ext.so.SequenceOntologyTest@3f3c966c]" started-at="2023-07-02T10:11:41Z" name="setUp" finished-at="2023-07-02T10:11:41Z" duration-ms="42" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="setUpJvOptionPane()[pri:0, instance:jalview.ext.so.SequenceOntologyTest@3f3c966c]" started-at="2023-07-02T10:11:41Z" name="setUpJvOptionPane" finished-at="2023-07-02T10:11:41Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpJvOptionPane -->
        <test-method signature="testIsA()[pri:0, instance:jalview.ext.so.SequenceOntologyTest@3f3c966c]" started-at="2023-07-02T10:11:41Z" name="testIsA" finished-at="2023-07-02T10:11:41Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testIsA -->
        <test-method signature="testIsCDS()[pri:0, instance:jalview.ext.so.SequenceOntologyTest@3f3c966c]" started-at="2023-07-02T10:11:41Z" name="testIsCDS" finished-at="2023-07-02T10:11:41Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testIsCDS -->
        <test-method signature="testIsSequenceVariant()[pri:0, instance:jalview.ext.so.SequenceOntologyTest@3f3c966c]" started-at="2023-07-02T10:11:41Z" name="testIsSequenceVariant" finished-at="2023-07-02T10:11:41Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testIsSequenceVariant -->
      </class> <!-- jalview.ext.so.SequenceOntologyTest -->
      <class name="jalview.datamodel.DBRefEntryTest">
        <test-method signature="testEqualRef()[pri:0, instance:jalview.datamodel.DBRefEntryTest@42deb43a]" started-at="2023-07-02T10:11:38Z" name="testEqualRef" finished-at="2023-07-02T10:11:38Z" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testEqualRef -->
        <test-method is-config="true" signature="setUpJvOptionPane()[pri:0, instance:jalview.datamodel.DBRefEntryTest@42deb43a]" started-at="2023-07-02T10:11:38Z" name="setUpJvOptionPane" finished-at="2023-07-02T10:11:38Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpJvOptionPane -->
        <test-method signature="testIsPrimaryCandidate()[pri:0, instance:jalview.datamodel.DBRefEntryTest@42deb43a]" started-at="2023-07-02T10:11:38Z" name="testIsPrimaryCandidate" finished-at="2023-07-02T10:11:38Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testIsPrimaryCandidate -->
        <test-method signature="testUpdateFrom()[pri:0, instance:jalview.datamodel.DBRefEntryTest@42deb43a]" started-at="2023-07-02T10:11:38Z" name="testUpdateFrom" finished-at="2023-07-02T10:11:38Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testUpdateFrom -->
      </class> <!-- jalview.datamodel.DBRefEntryTest -->
      <class name="jalview.ws.dbsources.EmblXmlSourceTest">
        <test-method is-config="true" signature="setUp()[pri:0, instance:jalview.ws.dbsources.EmblXmlSourceTest@2237bada]" started-at="2023-07-02T10:11:41Z" name="setUp" finished-at="2023-07-02T10:11:41Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="testAdjustForProteinLength()[pri:0, instance:jalview.ws.dbsources.EmblXmlSourceTest@2237bada]" started-at="2023-07-02T10:11:41Z" name="testAdjustForProteinLength" finished-at="2023-07-02T10:11:41Z" duration-ms="3" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAdjustForProteinLength -->
        <test-method signature="testGetCdsRanges()[pri:0, instance:jalview.ws.dbsources.EmblXmlSourceTest@2237bada]" started-at="2023-07-02T10:11:41Z" name="testGetCdsRanges" finished-at="2023-07-02T10:11:41Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetCdsRanges -->
        <test-method signature="testGetEmblEntries()[pri:0, instance:jalview.ws.dbsources.EmblXmlSourceTest@2237bada]" started-at="2023-07-02T10:11:41Z" name="testGetEmblEntries" finished-at="2023-07-02T10:11:41Z" duration-ms="31" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetEmblEntries -->
        <test-method signature="testGetSequence()[pri:0, instance:jalview.ws.dbsources.EmblXmlSourceTest@2237bada]" started-at="2023-07-02T10:11:41Z" name="testGetSequence" finished-at="2023-07-02T10:11:41Z" duration-ms="22" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetSequence -->
      </class> <!-- jalview.ws.dbsources.EmblXmlSourceTest -->
      <class name="jalview.gui.PaintRefresherTest">
        <test-method is-config="true" signature="setUpJvOptionPane()[pri:0, instance:jalview.gui.PaintRefresherTest@2e6ee0bc]" started-at="2023-07-02T10:11:42Z" name="setUpJvOptionPane" finished-at="2023-07-02T10:11:42Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpJvOptionPane -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:jalview.gui.PaintRefresherTest@2e6ee0bc]" started-at="2023-07-02T10:11:42Z" name="setUp" finished-at="2023-07-02T10:11:42Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="testGetAssociatedPanels()[pri:0, instance:jalview.gui.PaintRefresherTest@2e6ee0bc]" started-at="2023-07-02T10:11:42Z" name="testGetAssociatedPanels" finished-at="2023-07-02T10:11:42Z" duration-ms="34" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetAssociatedPanels -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:jalview.gui.PaintRefresherTest@2e6ee0bc]" started-at="2023-07-02T10:11:42Z" name="tearDown" finished-at="2023-07-02T10:11:42Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method signature="testRegister()[pri:0, instance:jalview.gui.PaintRefresherTest@2e6ee0bc]" started-at="2023-07-02T10:11:42Z" name="testRegister" finished-at="2023-07-02T10:11:42Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRegister -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:jalview.gui.PaintRefresherTest@2e6ee0bc]" started-at="2023-07-02T10:11:42Z" name="setUp" finished-at="2023-07-02T10:11:42Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:jalview.gui.PaintRefresherTest@2e6ee0bc]" started-at="2023-07-02T10:11:42Z" name="setUp" finished-at="2023-07-02T10:11:42Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:jalview.gui.PaintRefresherTest@2e6ee0bc]" started-at="2023-07-02T10:11:42Z" name="tearDown" finished-at="2023-07-02T10:11:42Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method signature="testRemoveComponent()[pri:0, instance:jalview.gui.PaintRefresherTest@2e6ee0bc]" started-at="2023-07-02T10:11:42Z" name="testRemoveComponent" finished-at="2023-07-02T10:11:42Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemoveComponent -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:jalview.gui.PaintRefresherTest@2e6ee0bc]" started-at="2023-07-02T10:11:42Z" name="tearDown" finished-at="2023-07-02T10:11:42Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- jalview.gui.PaintRefresherTest -->
      <class name="jalview.util.ArrayUtilsTest">
        <test-method is-config="true" signature="setUpJvOptionPane()[pri:0, instance:jalview.util.ArrayUtilsTest@25230246]" started-at="2023-07-02T10:12:02Z" name="setUpJvOptionPane" finished-at="2023-07-02T10:12:02Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpJvOptionPane -->
        <test-method signature="testReverseIntArray()[pri:0, instance:jalview.util.ArrayUtilsTest@25230246]" started-at="2023-07-02T10:12:02Z" name="testReverseIntArray" finished-at="2023-07-02T10:12:02Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testReverseIntArray -->
      </class> <!-- jalview.util.ArrayUtilsTest -->
      <class name="jalview.schemes.HelixColourSchemeTest">
        <test-method signature="testFindColour()[pri:0, instance:jalview.schemes.HelixColourSchemeTest@46292372]" started-at="2023-07-02T10:12:07Z" name="testFindColour" finished-at="2023-07-02T10:12:07Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFindColour -->
      </class> <!-- jalview.schemes.HelixColourSchemeTest -->
      <class name="jalview.structure.StructureSelectionManagerTest">
        <test-method is-config="true" signature="setUpBeforeClass()[pri:0, instance:jalview.structure.StructureSelectionManagerTest@5dda14d0]" started-at="2023-07-02T10:11:45Z" name="setUpBeforeClass" finished-at="2023-07-02T10:11:45Z" duration-ms="73" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpBeforeClass -->
        <test-method signature="testRegisterMapping()[pri:0, instance:jalview.structure.StructureSelectionManagerTest@5dda14d0]" started-at="2023-07-02T10:11:45Z" name="testRegisterMapping" finished-at="2023-07-02T10:11:45Z" duration-ms="7" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRegisterMapping -->
        <test-method is-config="true" signature="setUpJvOptionPane()[pri:0, instance:jalview.structure.StructureSelectionManagerTest@5dda14d0]" started-at="2023-07-02T10:11:45Z" name="setUpJvOptionPane" finished-at="2023-07-02T10:11:45Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpJvOptionPane -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:jalview.structure.StructureSelectionManagerTest@5dda14d0]" started-at="2023-07-02T10:11:45Z" name="setUp" finished-at="2023-07-02T10:11:45Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:jalview.structure.StructureSelectionManagerTest@5dda14d0]" started-at="2023-07-02T10:11:45Z" name="setUp" finished-at="2023-07-02T10:11:45Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="testRegisterMappings()[pri:0, instance:jalview.structure.StructureSelectionManagerTest@5dda14d0]" started-at="2023-07-02T10:11:45Z" name="testRegisterMappings" finished-at="2023-07-02T10:11:45Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRegisterMappings -->
        <test-method signature="testSetMapping_seqFeatures()[pri:0, instance:jalview.structure.StructureSelectionManagerTest@5dda14d0]" started-at="2023-07-02T10:11:45Z" name="testSetMapping_seqFeatures" finished-at="2023-07-02T10:11:46Z" duration-ms="365" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSetMapping_seqFeatures -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:jalview.structure.StructureSelectionManagerTest@5dda14d0]" started-at="2023-07-02T10:11:45Z" name="setUp" finished-at="2023-07-02T10:11:45Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="tearDownAfterClass()[pri:0, instance:jalview.structure.StructureSelectionManagerTest@5dda14d0]" started-at="2023-07-02T10:11:46Z" name="tearDownAfterClass" finished-at="2023-07-02T10:11:46Z" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownAfterClass -->
      </class> <!-- jalview.structure.StructureSelectionManagerTest -->
      <class name="jalview.gui.AnnotationPanelTest">
        <test-method signature="testGetRowIndex()[pri:0, instance:jalview.gui.AnnotationPanelTest@271f18d3]" started-at="2023-07-02T10:12:02Z" name="testGetRowIndex" finished-at="2023-07-02T10:12:02Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetRowIndex -->
      </class> <!-- jalview.gui.AnnotationPanelTest -->
      <class name="jalview.structure.StructureMappingTest">
        <test-method signature="testEquals()[pri:0, instance:jalview.structure.StructureMappingTest@282308c3]" started-at="2023-07-02T10:11:42Z" name="testEquals" finished-at="2023-07-02T10:11:42Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testEquals -->
        <test-method signature="testGetPDBResNumRanges()[pri:0, instance:jalview.structure.StructureMappingTest@282308c3]" started-at="2023-07-02T10:11:42Z" name="testGetPDBResNumRanges" finished-at="2023-07-02T10:11:42Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetPDBResNumRanges -->
      </class> <!-- jalview.structure.StructureMappingTest -->
      <class name="jalview.ext.ensembl.EnsemblCdsTest">
        <test-method signature="testGetGenomicRangesFromFeatures()[pri:0, instance:jalview.ext.ensembl.EnsemblCdsTest@22ee2d0]" started-at="2023-07-02T10:11:42Z" name="testGetGenomicRangesFromFeatures" finished-at="2023-07-02T10:11:42Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetGenomicRangesFromFeatures -->
        <test-method is-config="true" signature="setUpJvOptionPane()[pri:0, instance:jalview.ext.ensembl.EnsemblCdsTest@22ee2d0]" started-at="2023-07-02T10:11:42Z" name="setUpJvOptionPane" finished-at="2023-07-02T10:11:42Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpJvOptionPane -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:jalview.ext.ensembl.EnsemblCdsTest@22ee2d0]" started-at="2023-07-02T10:11:42Z" name="setUp" finished-at="2023-07-02T10:11:42Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="testGetIdentifyingFeatures()[pri:0, instance:jalview.ext.ensembl.EnsemblCdsTest@22ee2d0]" started-at="2023-07-02T10:11:42Z" name="testGetIdentifyingFeatures" finished-at="2023-07-02T10:11:42Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetIdentifyingFeatures -->
        <test-method signature="testIsValidReference()[pri:0, instance:jalview.ext.ensembl.EnsemblCdsTest@22ee2d0]" started-at="2023-07-02T10:11:42Z" name="testIsValidReference" finished-at="2023-07-02T10:11:42Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testIsValidReference -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:jalview.ext.ensembl.EnsemblCdsTest@22ee2d0]" started-at="2023-07-02T10:11:42Z" name="tearDown" finished-at="2023-07-02T10:11:42Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method signature="testRetainFeature()[pri:0, instance:jalview.ext.ensembl.EnsemblCdsTest@22ee2d0]" started-at="2023-07-02T10:11:42Z" name="testRetainFeature" finished-at="2023-07-02T10:11:42Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRetainFeature -->
      </class> <!-- jalview.ext.ensembl.EnsemblCdsTest -->
      <class name="jalview.gui.AnnotationColumnChooserTest">
        <test-method is-config="true" signature="setUpJvOptionPane()[pri:0, instance:jalview.gui.AnnotationColumnChooserTest@7e8e8651]" started-at="2023-07-02T10:12:00Z" name="setUpJvOptionPane" finished-at="2023-07-02T10:12:00Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpJvOptionPane -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:jalview.gui.AnnotationColumnChooserTest@7e8e8651]" started-at="2023-07-02T10:12:00Z" name="setUp" finished-at="2023-07-02T10:12:01Z" duration-ms="54" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="testReset()[pri:0, instance:jalview.gui.AnnotationColumnChooserTest@7e8e8651]" started-at="2023-07-02T10:12:01Z" name="testReset" finished-at="2023-07-02T10:12:01Z" duration-ms="129" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testReset -->
      </class> <!-- jalview.gui.AnnotationColumnChooserTest -->
      <class name="jalview.io.cache.JvCacheableInputBoxTest">
        <test-method is-config="true" signature="setUpCache()[pri:0, instance:jalview.io.cache.JvCacheableInputBoxTest@2fb68ec6]" started-at="2023-07-02T10:12:02Z" name="setUpCache" finished-at="2023-07-02T10:12:02Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpCache -->
        <test-method signature="getUserInputTest()[pri:0, instance:jalview.io.cache.JvCacheableInputBoxTest@2fb68ec6]" started-at="2023-07-02T10:12:02Z" name="getUserInputTest" finished-at="2023-07-02T10:12:02Z" duration-ms="102" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getUserInputTest -->
        <test-method signature="updateCacheTest()[pri:0, instance:jalview.io.cache.JvCacheableInputBoxTest@2fb68ec6]" started-at="2023-07-02T10:12:02Z" name="updateCacheTest" finished-at="2023-07-02T10:12:02Z" duration-ms="200" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- updateCacheTest -->
      </class> <!-- jalview.io.cache.JvCacheableInputBoxTest -->
      <class name="jalview.analysis.AlignmentUtilsTests">
        <test-method is-config="true" signature="setUpJvOptionPane()[pri:0, instance:jalview.analysis.AlignmentUtilsTests@54e7391d]" started-at="2023-07-02T10:11:49Z" name="setUpJvOptionPane" finished-at="2023-07-02T10:11:49Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpJvOptionPane -->
        <test-method signature="testAddMappedPositions()[pri:0, instance:jalview.analysis.AlignmentUtilsTests@54e7391d]" started-at="2023-07-02T10:11:49Z" name="testAddMappedPositions" finished-at="2023-07-02T10:11:49Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAddMappedPositions -->
        <test-method signature="testAddMappedPositions_withStopCodon()[pri:0, instance:jalview.analysis.AlignmentUtilsTests@54e7391d]" started-at="2023-07-02T10:11:49Z" name="testAddMappedPositions_withStopCodon" finished-at="2023-07-02T10:11:49Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAddMappedPositions_withStopCodon -->
        <test-method signature="testAlignAsSameSequences()[pri:0, instance:jalview.analysis.AlignmentUtilsTests@54e7391d]" started-at="2023-07-02T10:11:49Z" name="testAlignAsSameSequences" finished-at="2023-07-02T10:11:49Z" duration-ms="3" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAlignAsSameSequences -->
        <test-method signature="testAlignAsSameSequencesMultipleSubSeq()[pri:0, instance:jalview.analysis.AlignmentUtilsTests@54e7391d]" started-at="2023-07-02T10:11:49Z" name="testAlignAsSameSequencesMultipleSubSeq" finished-at="2023-07-02T10:11:49Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAlignAsSameSequencesMultipleSubSeq -->
        <test-method signature="testAlignAs_alternateTranscriptsUngapped()[pri:0, instance:jalview.analysis.AlignmentUtilsTests@54e7391d]" started-at="2023-07-02T10:11:49Z" name="testAlignAs_alternateTranscriptsUngapped" finished-at="2023-07-02T10:11:49Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAlignAs_alternateTranscriptsUngapped -->
        <test-method signature="testAlignProteinAsDna()[pri:0, instance:jalview.analysis.AlignmentUtilsTests@54e7391d]" started-at="2023-07-02T10:11:49Z" name="testAlignProteinAsDna" finished-at="2023-07-02T10:11:49Z" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAlignProteinAsDna -->
        <test-method signature="testAlignProteinAsDna_incompleteStartCodon()[pri:0, instance:jalview.analysis.AlignmentUtilsTests@54e7391d]" started-at="2023-07-02T10:11:49Z" name="testAlignProteinAsDna_incompleteStartCodon" finished-at="2023-07-02T10:11:49Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAlignProteinAsDna_incompleteStartCodon -->
        <test-method signature="testAlignSequenceAs_keepIntronGapsOnly()[pri:0, instance:jalview.analysis.AlignmentUtilsTests@54e7391d]" started-at="2023-07-02T10:11:49Z" name="testAlignSequenceAs_keepIntronGapsOnly" finished-at="2023-07-02T10:11:49Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAlignSequenceAs_keepIntronGapsOnly -->
        <test-method signature="testAlignSequenceAs_withMapping_noIntrons()[pri:0, instance:jalview.analysis.AlignmentUtilsTests@54e7391d]" started-at="2023-07-02T10:11:49Z" name="testAlignSequenceAs_withMapping_noIntrons" finished-at="2023-07-02T10:11:49Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAlignSequenceAs_withMapping_noIntrons -->
        <test-method signature="testAlignSequenceAs_mappedProteinProtein()[pri:0, instance:jalview.analysis.AlignmentUtilsTests@54e7391d]" started-at="2023-07-02T10:11:49Z" name="testAlignSequenceAs_mappedProteinProtein" finished-at="2023-07-02T10:11:49Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAlignSequenceAs_mappedProteinProtein -->
        <test-method signature="testAlignSequenceAs_withMapping_withIntrons()[pri:0, instance:jalview.analysis.AlignmentUtilsTests@54e7391d]" started-at="2023-07-02T10:11:49Z" name="testAlignSequenceAs_withMapping_withIntrons" finished-at="2023-07-02T10:11:49Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAlignSequenceAs_withMapping_withIntrons -->
        <test-method signature="testAlignSequenceAs_withMapping_withUnmappedProtein()[pri:0, instance:jalview.analysis.AlignmentUtilsTests@54e7391d]" started-at="2023-07-02T10:11:49Z" name="testAlignSequenceAs_withMapping_withUnmappedProtein" finished-at="2023-07-02T10:11:49Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAlignSequenceAs_withMapping_withUnmappedProtein -->
        <test-method signature="testExpandContext()[pri:0, instance:jalview.analysis.AlignmentUtilsTests@54e7391d]" started-at="2023-07-02T10:11:49Z" name="testExpandContext" finished-at="2023-07-02T10:11:49Z" duration-ms="8" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testExpandContext -->
        <test-method signature="testAlignSequenceAs_withTrailingPeptide()[pri:0, instance:jalview.analysis.AlignmentUtilsTests@54e7391d]" started-at="2023-07-02T10:11:49Z" name="testAlignSequenceAs_withTrailingPeptide" finished-at="2023-07-02T10:11:49Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAlignSequenceAs_withTrailingPeptide -->
        <test-method signature="testExpandContext_annotation()[pri:0, instance:jalview.analysis.AlignmentUtilsTests@54e7391d]" started-at="2023-07-02T10:11:49Z" name="testExpandContext_annotation" finished-at="2023-07-02T10:11:49Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testExpandContext_annotation -->
        <test-method signature="testFindCdsPositions_fivePrimeIncomplete()[pri:0, instance:jalview.analysis.AlignmentUtilsTests@54e7391d]" started-at="2023-07-02T10:11:49Z" name="testFindCdsPositions_fivePrimeIncomplete" finished-at="2023-07-02T10:11:49Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFindCdsPositions_fivePrimeIncomplete -->
        <test-method signature="testFindCdsPositions()[pri:0, instance:jalview.analysis.AlignmentUtilsTests@54e7391d]" started-at="2023-07-02T10:11:49Z" name="testFindCdsPositions" finished-at="2023-07-02T10:11:49Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFindCdsPositions -->
        <test-method signature="testGetSequencesByName()[pri:0, instance:jalview.analysis.AlignmentUtilsTests@54e7391d]" started-at="2023-07-02T10:11:49Z" name="testGetSequencesByName" finished-at="2023-07-02T10:11:49Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetSequencesByName -->
        <test-method signature="testHasCrossRef()[pri:0, instance:jalview.analysis.AlignmentUtilsTests@54e7391d]" started-at="2023-07-02T10:11:49Z" name="testHasCrossRef" finished-at="2023-07-02T10:11:49Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testHasCrossRef -->
        <test-method signature="testHaveCrossRef()[pri:0, instance:jalview.analysis.AlignmentUtilsTests@54e7391d]" started-at="2023-07-02T10:11:49Z" name="testHaveCrossRef" finished-at="2023-07-02T10:11:49Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testHaveCrossRef -->
        <test-method signature="testIsMappable()[pri:0, instance:jalview.analysis.AlignmentUtilsTests@54e7391d]" started-at="2023-07-02T10:11:49Z" name="testIsMappable" finished-at="2023-07-02T10:11:49Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testIsMappable -->
        <test-method signature="testMakeCdsAlignment()[pri:0, instance:jalview.analysis.AlignmentUtilsTests@54e7391d]" started-at="2023-07-02T10:11:49Z" name="testMakeCdsAlignment" finished-at="2023-07-02T10:11:49Z" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMakeCdsAlignment -->
        <test-method signature="testMakeCdsAlignment_alternativeTranscripts()[pri:0, instance:jalview.analysis.AlignmentUtilsTests@54e7391d]" started-at="2023-07-02T10:11:49Z" name="testMakeCdsAlignment_alternativeTranscripts" finished-at="2023-07-02T10:11:49Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMakeCdsAlignment_alternativeTranscripts -->
        <test-method signature="testMakeCdsAlignment_filterProducts()[pri:0, instance:jalview.analysis.AlignmentUtilsTests@54e7391d]" started-at="2023-07-02T10:11:49Z" name="testMakeCdsAlignment_filterProducts" finished-at="2023-07-02T10:11:49Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMakeCdsAlignment_filterProducts -->
        <test-method signature="testMakeCdsAlignment_multipleProteins()[pri:0, instance:jalview.analysis.AlignmentUtilsTests@54e7391d]" started-at="2023-07-02T10:11:49Z" name="testMakeCdsAlignment_multipleProteins" finished-at="2023-07-02T10:11:49Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMakeCdsAlignment_multipleProteins -->
        <test-method signature="testMapCdsToProtein()[pri:0, instance:jalview.analysis.AlignmentUtilsTests@54e7391d]" started-at="2023-07-02T10:11:49Z" name="testMapCdsToProtein" finished-at="2023-07-02T10:11:49Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMapCdsToProtein -->
        <test-method signature="testMapCdnaToProtein_forSubsequence()[pri:0, instance:jalview.analysis.AlignmentUtilsTests@54e7391d]" started-at="2023-07-02T10:11:49Z" name="testMapCdnaToProtein_forSubsequence" finished-at="2023-07-02T10:11:49Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMapCdnaToProtein_forSubsequence -->
        <test-method signature="testMapProteinAlignmentToCdna_noXrefs()[pri:0, instance:jalview.analysis.AlignmentUtilsTests@54e7391d]" started-at="2023-07-02T10:11:49Z" name="testMapProteinAlignmentToCdna_noXrefs" finished-at="2023-07-02T10:11:49Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMapProteinAlignmentToCdna_noXrefs -->
        <test-method signature="testMapProteinAlignmentToCdna_withStartAndStopCodons()[pri:0, instance:jalview.analysis.AlignmentUtilsTests@54e7391d]" started-at="2023-07-02T10:11:49Z" name="testMapProteinAlignmentToCdna_withStartAndStopCodons" finished-at="2023-07-02T10:11:49Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMapProteinAlignmentToCdna_withStartAndStopCodons -->
        <test-method signature="testMapProteinAlignmentToCdna_prioritiseXrefs()[pri:0, instance:jalview.analysis.AlignmentUtilsTests@54e7391d]" started-at="2023-07-02T10:11:49Z" name="testMapProteinAlignmentToCdna_prioritiseXrefs" finished-at="2023-07-02T10:11:49Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMapProteinAlignmentToCdna_prioritiseXrefs -->
        <test-method signature="testMapProteinAlignmentToCdna_withXrefs()[pri:0, instance:jalview.analysis.AlignmentUtilsTests@54e7391d]" started-at="2023-07-02T10:11:49Z" name="testMapProteinAlignmentToCdna_withXrefs" finished-at="2023-07-02T10:11:49Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMapProteinAlignmentToCdna_withXrefs -->
        <test-method signature="testShowOrHideSequenceAnnotations()[pri:0, instance:jalview.analysis.AlignmentUtilsTests@54e7391d]" started-at="2023-07-02T10:11:49Z" name="testShowOrHideSequenceAnnotations" finished-at="2023-07-02T10:11:49Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testShowOrHideSequenceAnnotations -->
        <test-method signature="testTransferFeatures()[pri:0, instance:jalview.analysis.AlignmentUtilsTests@54e7391d]" started-at="2023-07-02T10:11:49Z" name="testTransferFeatures" finished-at="2023-07-02T10:11:49Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testTransferFeatures -->
        <test-method signature="testTransferFeatures_withSelect()[pri:0, instance:jalview.analysis.AlignmentUtilsTests@54e7391d]" started-at="2023-07-02T10:11:49Z" name="testTransferFeatures_withSelect" finished-at="2023-07-02T10:11:49Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testTransferFeatures_withSelect -->
        <test-method signature="testTransferFeatures_withOmit()[pri:0, instance:jalview.analysis.AlignmentUtilsTests@54e7391d]" started-at="2023-07-02T10:11:49Z" name="testTransferFeatures_withOmit" finished-at="2023-07-02T10:11:49Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testTransferFeatures_withOmit -->
        <test-method signature="testTransferGeneLoci()[pri:0, instance:jalview.analysis.AlignmentUtilsTests@54e7391d]" started-at="2023-07-02T10:11:49Z" name="testTransferGeneLoci" finished-at="2023-07-02T10:11:49Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testTransferGeneLoci -->
        <test-method signature="testTranslatesAs()[pri:0, instance:jalview.analysis.AlignmentUtilsTests@54e7391d]" started-at="2023-07-02T10:11:49Z" name="testTranslatesAs" finished-at="2023-07-02T10:11:49Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testTranslatesAs -->
      </class> <!-- jalview.analysis.AlignmentUtilsTests -->
      <class name="jalview.util.PlatformTest">
        <test-method signature="testEscapeBackslashes()[pri:0, instance:jalview.util.PlatformTest@50cf5a23]" started-at="2023-07-02T10:13:43Z" name="testEscapeBackslashes" finished-at="2023-07-02T10:13:43Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testEscapeBackslashes -->
        <test-method signature="testIsControlDown_mac()[pri:0, instance:jalview.util.PlatformTest@50cf5a23]" started-at="2023-07-02T10:13:43Z" name="testIsControlDown_mac" finished-at="2023-07-02T10:13:43Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testIsControlDown_mac -->
        <test-method is-config="true" signature="setUpJvOptionPane()[pri:0, instance:jalview.util.PlatformTest@50cf5a23]" started-at="2023-07-02T10:13:43Z" name="setUpJvOptionPane" finished-at="2023-07-02T10:13:43Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpJvOptionPane -->
        <test-method signature="testIsControlDown_notMac()[pri:0, instance:jalview.util.PlatformTest@50cf5a23]" started-at="2023-07-02T10:13:43Z" name="testIsControlDown_notMac" finished-at="2023-07-02T10:13:43Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testIsControlDown_notMac -->
        <test-method signature="testPathEquals()[pri:0, instance:jalview.util.PlatformTest@50cf5a23]" started-at="2023-07-02T10:13:43Z" name="testPathEquals" finished-at="2023-07-02T10:13:43Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testPathEquals -->
      </class> <!-- jalview.util.PlatformTest -->
      <class name="jalview.analysis.ParsePropertiesTest">
        <test-method is-config="true" signature="setUp()[pri:0, instance:jalview.analysis.ParsePropertiesTest@182b435b]" started-at="2023-07-02T10:12:07Z" name="setUp" finished-at="2023-07-02T10:12:07Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="setUpJvOptionPane()[pri:0, instance:jalview.analysis.ParsePropertiesTest@182b435b]" started-at="2023-07-02T10:12:07Z" name="setUpJvOptionPane" finished-at="2023-07-02T10:12:07Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpJvOptionPane -->
        <test-method signature="testGetScoresFromDescription()[pri:0, instance:jalview.analysis.ParsePropertiesTest@182b435b]" started-at="2023-07-02T10:12:07Z" name="testGetScoresFromDescription" finished-at="2023-07-02T10:12:07Z" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetScoresFromDescription -->
        <test-method signature="testGetScoresFromDescription_twoScores()[pri:0, instance:jalview.analysis.ParsePropertiesTest@182b435b]" started-at="2023-07-02T10:12:07Z" name="testGetScoresFromDescription_twoScores" finished-at="2023-07-02T10:12:07Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetScoresFromDescription_twoScores -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:jalview.analysis.ParsePropertiesTest@182b435b]" started-at="2023-07-02T10:12:07Z" name="setUp" finished-at="2023-07-02T10:12:07Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="testGetScoresFromDescription_wordBoundaries()[pri:0, instance:jalview.analysis.ParsePropertiesTest@182b435b]" started-at="2023-07-02T10:12:07Z" name="testGetScoresFromDescription_wordBoundaries" finished-at="2023-07-02T10:12:07Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetScoresFromDescription_wordBoundaries -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:jalview.analysis.ParsePropertiesTest@182b435b]" started-at="2023-07-02T10:12:07Z" name="setUp" finished-at="2023-07-02T10:12:07Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
      </class> <!-- jalview.analysis.ParsePropertiesTest -->
      <class name="jalview.datamodel.RangeElementsIteratorTest">
        <test-method signature="testHasNextAndNextEndHidden()[pri:0, instance:jalview.datamodel.RangeElementsIteratorTest@3301500b]" started-at="2023-07-02T10:12:00Z" name="testHasNextAndNextEndHidden" finished-at="2023-07-02T10:12:00Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testHasNextAndNextEndHidden -->
        <test-method is-config="true" signature="setup()[pri:0, instance:jalview.datamodel.RangeElementsIteratorTest@3301500b]" started-at="2023-07-02T10:12:00Z" name="setup" finished-at="2023-07-02T10:12:00Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="testHasNextAndNextNoHidden()[pri:0, instance:jalview.datamodel.RangeElementsIteratorTest@3301500b]" started-at="2023-07-02T10:12:00Z" name="testHasNextAndNextNoHidden" finished-at="2023-07-02T10:12:00Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testHasNextAndNextNoHidden -->
        <test-method signature="testHasNextAndNextWithHidden()[pri:0, instance:jalview.datamodel.RangeElementsIteratorTest@3301500b]" started-at="2023-07-02T10:12:00Z" name="testHasNextAndNextWithHidden" finished-at="2023-07-02T10:12:00Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testHasNextAndNextWithHidden -->
        <test-method signature="testHasNextAndNextStartHidden()[pri:0, instance:jalview.datamodel.RangeElementsIteratorTest@3301500b]" started-at="2023-07-02T10:12:00Z" name="testHasNextAndNextStartHidden" finished-at="2023-07-02T10:12:00Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testHasNextAndNextStartHidden -->
        <test-method signature="testLastNextStartHidden()[pri:0, instance:jalview.datamodel.RangeElementsIteratorTest@3301500b]" started-at="2023-07-02T10:12:00Z" name="testLastNextStartHidden" finished-at="2023-07-02T10:12:00Z" duration-ms="0" status="PASS">
          <exception class="java.util.NoSuchElementException">
            <full-stacktrace>
              <![CDATA[java.util.NoSuchElementException
	at jalview.datamodel.RangeElementsIterator.next(RangeElementsIterator.java:68)
	at jalview.datamodel.RangeElementsIterator.next(RangeElementsIterator.java:34)
	at jalview.datamodel.RangeElementsIteratorTest.testLastNextStartHidden(RangeElementsIteratorTest.java:173)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:648)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:834)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1142)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:124)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:771)
	at org.testng.TestRunner.run(TestRunner.java:621)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:357)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:352)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:310)
	at org.testng.SuiteRunner.run(SuiteRunner.java:259)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1176)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1101)
	at org.testng.TestNG.run(TestNG.java:1009)
	at org.gradle.api.internal.tasks.testing.testng.TestNGTestClassProcessor.runTests(TestNGTestClassProcessor.java:145)
	at org.gradle.api.internal.tasks.testing.testng.TestNGTestClassProcessor.stop(TestNGTestClassProcessor.java:92)
	at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.stop(SuiteTestClassProcessor.java:62)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:36)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24)
	at org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:33)
	at org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:94)
	at com.sun.proxy.$Proxy2.stop(Unknown Source)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker$3.run(TestWorker.java:193)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.executeAndMaintainThreadName(TestWorker.java:129)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.execute(TestWorker.java:100)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.execute(TestWorker.java:60)
	at org.gradle.process.internal.worker.child.ActionExecutionWorker.execute(ActionExecutionWorker.java:56)
	at org.gradle.process.internal.worker.child.SystemApplicationClassLoaderWorker.call(SystemApplicationClassLoaderWorker.java:113)
	at org.gradle.process.internal.worker.child.SystemApplicationClassLoaderWorker.call(SystemApplicationClassLoaderWorker.java:65)
	at worker.org.gradle.process.internal.worker.GradleWorkerMain.run(GradleWorkerMain.java:69)
	at worker.org.gradle.process.internal.worker.GradleWorkerMain.main(GradleWorkerMain.java:74)
]]>
            </full-stacktrace>
          </exception> <!-- java.util.NoSuchElementException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testLastNextStartHidden -->
        <test-method signature="testLastNextNoHidden()[pri:0, instance:jalview.datamodel.RangeElementsIteratorTest@3301500b]" started-at="2023-07-02T10:12:00Z" name="testLastNextNoHidden" finished-at="2023-07-02T10:12:00Z" duration-ms="0" status="PASS">
          <exception class="java.util.NoSuchElementException">
            <full-stacktrace>
              <![CDATA[java.util.NoSuchElementException
	at jalview.datamodel.RangeElementsIterator.next(RangeElementsIterator.java:68)
	at jalview.datamodel.RangeElementsIterator.next(RangeElementsIterator.java:34)
	at jalview.datamodel.RangeElementsIteratorTest.testLastNextNoHidden(RangeElementsIteratorTest.java:154)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:648)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:834)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1142)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:124)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:771)
	at org.testng.TestRunner.run(TestRunner.java:621)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:357)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:352)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:310)
	at org.testng.SuiteRunner.run(SuiteRunner.java:259)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1176)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1101)
	at org.testng.TestNG.run(TestNG.java:1009)
	at org.gradle.api.internal.tasks.testing.testng.TestNGTestClassProcessor.runTests(TestNGTestClassProcessor.java:145)
	at org.gradle.api.internal.tasks.testing.testng.TestNGTestClassProcessor.stop(TestNGTestClassProcessor.java:92)
	at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.stop(SuiteTestClassProcessor.java:62)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:36)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24)
	at org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:33)
	at org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:94)
	at com.sun.proxy.$Proxy2.stop(Unknown Source)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker$3.run(TestWorker.java:193)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.executeAndMaintainThreadName(TestWorker.java:129)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.execute(TestWorker.java:100)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.execute(TestWorker.java:60)
	at org.gradle.process.internal.worker.child.ActionExecutionWorker.execute(ActionExecutionWorker.java:56)
	at org.gradle.process.internal.worker.child.SystemApplicationClassLoaderWorker.call(SystemApplicationClassLoaderWorker.java:113)
	at org.gradle.process.internal.worker.child.SystemApplicationClassLoaderWorker.call(SystemApplicationClassLoaderWorker.java:65)
	at worker.org.gradle.process.internal.worker.GradleWorkerMain.run(GradleWorkerMain.java:69)
	at worker.org.gradle.process.internal.worker.GradleWorkerMain.main(GradleWorkerMain.java:74)
]]>
            </full-stacktrace>
          </exception> <!-- java.util.NoSuchElementException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testLastNextNoHidden -->
        <test-method signature="testLastNextEndHidden()[pri:0, instance:jalview.datamodel.RangeElementsIteratorTest@3301500b]" started-at="2023-07-02T10:12:00Z" name="testLastNextEndHidden" finished-at="2023-07-02T10:12:00Z" duration-ms="0" status="PASS">
          <exception class="java.util.NoSuchElementException">
            <full-stacktrace>
              <![CDATA[java.util.NoSuchElementException
	at jalview.datamodel.RangeElementsIterator.next(RangeElementsIterator.java:68)
	at jalview.datamodel.RangeElementsIterator.next(RangeElementsIterator.java:34)
	at jalview.datamodel.RangeElementsIteratorTest.testLastNextEndHidden(RangeElementsIteratorTest.java:192)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:648)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:834)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1142)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:124)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:771)
	at org.testng.TestRunner.run(TestRunner.java:621)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:357)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:352)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:310)
	at org.testng.SuiteRunner.run(SuiteRunner.java:259)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1176)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1101)
	at org.testng.TestNG.run(TestNG.java:1009)
	at org.gradle.api.internal.tasks.testing.testng.TestNGTestClassProcessor.runTests(TestNGTestClassProcessor.java:145)
	at org.gradle.api.internal.tasks.testing.testng.TestNGTestClassProcessor.stop(TestNGTestClassProcessor.java:92)
	at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.stop(SuiteTestClassProcessor.java:62)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:36)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24)
	at org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:33)
	at org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:94)
	at com.sun.proxy.$Proxy2.stop(Unknown Source)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker$3.run(TestWorker.java:193)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.executeAndMaintainThreadName(TestWorker.java:129)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.execute(TestWorker.java:100)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.execute(TestWorker.java:60)
	at org.gradle.process.internal.worker.child.ActionExecutionWorker.execute(ActionExecutionWorker.java:56)
	at org.gradle.process.internal.worker.child.SystemApplicationClassLoaderWorker.call(SystemApplicationClassLoaderWorker.java:113)
	at org.gradle.process.internal.worker.child.SystemApplicationClassLoaderWorker.call(SystemApplicationClassLoaderWorker.java:65)
	at worker.org.gradle.process.internal.worker.GradleWorkerMain.run(GradleWorkerMain.java:69)
	at worker.org.gradle.process.internal.worker.GradleWorkerMain.main(GradleWorkerMain.java:74)
]]>
            </full-stacktrace>
          </exception> <!-- java.util.NoSuchElementException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testLastNextEndHidden -->
        <test-method signature="testRemove()[pri:0, instance:jalview.datamodel.RangeElementsIteratorTest@3301500b]" started-at="2023-07-02T10:12:00Z" name="testRemove" finished-at="2023-07-02T10:12:00Z" duration-ms="0" status="PASS">
          <exception class="java.lang.UnsupportedOperationException">
            <full-stacktrace>
              <![CDATA[java.lang.UnsupportedOperationException
	at jalview.datamodel.RangeElementsIterator.remove(RangeElementsIterator.java:106)
	at jalview.datamodel.RangeElementsIteratorTest.testRemove(RangeElementsIteratorTest.java:206)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:648)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:834)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1142)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:124)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:771)
	at org.testng.TestRunner.run(TestRunner.java:621)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:357)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:352)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:310)
	at org.testng.SuiteRunner.run(SuiteRunner.java:259)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1176)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1101)
	at org.testng.TestNG.run(TestNG.java:1009)
	at org.gradle.api.internal.tasks.testing.testng.TestNGTestClassProcessor.runTests(TestNGTestClassProcessor.java:145)
	at org.gradle.api.internal.tasks.testing.testng.TestNGTestClassProcessor.stop(TestNGTestClassProcessor.java:92)
	at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.stop(SuiteTestClassProcessor.java:62)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:36)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24)
	at org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:33)
	at org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:94)
	at com.sun.proxy.$Proxy2.stop(Unknown Source)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker$3.run(TestWorker.java:193)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.executeAndMaintainThreadName(TestWorker.java:129)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.execute(TestWorker.java:100)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.execute(TestWorker.java:60)
	at org.gradle.process.internal.worker.child.ActionExecutionWorker.execute(ActionExecutionWorker.java:56)
	at org.gradle.process.internal.worker.child.SystemApplicationClassLoaderWorker.call(SystemApplicationClassLoaderWorker.java:113)
	at org.gradle.process.internal.worker.child.SystemApplicationClassLoaderWorker.call(SystemApplicationClassLoaderWorker.java:65)
	at worker.org.gradle.process.internal.worker.GradleWorkerMain.run(GradleWorkerMain.java:69)
	at worker.org.gradle.process.internal.worker.GradleWorkerMain.main(GradleWorkerMain.java:74)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.UnsupportedOperationException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemove -->
        <test-method signature="testLastNextWithHidden()[pri:0, instance:jalview.datamodel.RangeElementsIteratorTest@3301500b]" started-at="2023-07-02T10:12:00Z" name="testLastNextWithHidden" finished-at="2023-07-02T10:12:00Z" duration-ms="0" status="PASS">
          <exception class="java.util.NoSuchElementException">
            <full-stacktrace>
              <![CDATA[java.util.NoSuchElementException
	at jalview.datamodel.RangeElementsIterator.next(RangeElementsIterator.java:68)
	at jalview.datamodel.RangeElementsIterator.next(RangeElementsIterator.java:34)
	at jalview.datamodel.RangeElementsIteratorTest.testLastNextWithHidden(RangeElementsIteratorTest.java:134)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:648)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:834)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1142)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:124)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:771)
	at org.testng.TestRunner.run(TestRunner.java:621)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:357)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:352)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:310)
	at org.testng.SuiteRunner.run(SuiteRunner.java:259)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1176)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1101)
	at org.testng.TestNG.run(TestNG.java:1009)
	at org.gradle.api.internal.tasks.testing.testng.TestNGTestClassProcessor.runTests(TestNGTestClassProcessor.java:145)
	at org.gradle.api.internal.tasks.testing.testng.TestNGTestClassProcessor.stop(TestNGTestClassProcessor.java:92)
	at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.stop(SuiteTestClassProcessor.java:62)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:36)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24)
	at org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:33)
	at org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:94)
	at com.sun.proxy.$Proxy2.stop(Unknown Source)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker$3.run(TestWorker.java:193)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.executeAndMaintainThreadName(TestWorker.java:129)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.execute(TestWorker.java:100)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.execute(TestWorker.java:60)
	at org.gradle.process.internal.worker.child.ActionExecutionWorker.execute(ActionExecutionWorker.java:56)
	at org.gradle.process.internal.worker.child.SystemApplicationClassLoaderWorker.call(SystemApplicationClassLoaderWorker.java:113)
	at org.gradle.process.internal.worker.child.SystemApplicationClassLoaderWorker.call(SystemApplicationClassLoaderWorker.java:65)
	at worker.org.gradle.process.internal.worker.GradleWorkerMain.run(GradleWorkerMain.java:69)
	at worker.org.gradle.process.internal.worker.GradleWorkerMain.main(GradleWorkerMain.java:74)
]]>
            </full-stacktrace>
          </exception> <!-- java.util.NoSuchElementException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testLastNextWithHidden -->
      </class> <!-- jalview.datamodel.RangeElementsIteratorTest -->
      <class name="jalview.util.SetUtilsTest">
        <test-method signature="testCountDisjunction()[pri:0, instance:jalview.util.SetUtilsTest@273c947f]" started-at="2023-07-02T10:13:43Z" name="testCountDisjunction" finished-at="2023-07-02T10:13:43Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCountDisjunction -->
      </class> <!-- jalview.util.SetUtilsTest -->
      <class name="jalview.io.IdentifyFileTest">
        <test-method is-config="true" signature="setUpJvOptionPane()[pri:0, instance:jalview.io.IdentifyFileTest@e27ba81]" started-at="2023-07-02T10:11:38Z" name="setUpJvOptionPane" finished-at="2023-07-02T10:11:38Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpJvOptionPane -->
        <test-method signature="testIdentify(java.lang.String, jalview.io.FileFormatI)[pri:0, instance:jalview.io.IdentifyFileTest@e27ba81]" started-at="2023-07-02T10:11:38Z" name="testIdentify" data-provider="identifyFiles" finished-at="2023-07-02T10:11:38Z" duration-ms="3" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[examples/example.json]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Json]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testIdentify -->
        <test-method signature="testIdentify(java.lang.String, jalview.io.FileFormatI)[pri:0, instance:jalview.io.IdentifyFileTest@e27ba81]" started-at="2023-07-02T10:11:38Z" name="testIdentify" data-provider="identifyFiles" finished-at="2023-07-02T10:11:38Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[examples/plantfdx.fa]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Fasta]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testIdentify -->
        <test-method signature="testIdentify(java.lang.String, jalview.io.FileFormatI)[pri:0, instance:jalview.io.IdentifyFileTest@e27ba81]" started-at="2023-07-02T10:11:38Z" name="testIdentify" data-provider="identifyFiles" finished-at="2023-07-02T10:11:38Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[examples/dna_interleaved.phy]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Phylip]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testIdentify -->
        <test-method signature="testIdentify(java.lang.String, jalview.io.FileFormatI)[pri:0, instance:jalview.io.IdentifyFileTest@e27ba81]" started-at="2023-07-02T10:11:38Z" name="testIdentify" data-provider="identifyFiles" finished-at="2023-07-02T10:11:38Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[examples/2GIS.pdb]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[PDB]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testIdentify -->
        <test-method signature="testIdentify(java.lang.String, jalview.io.FileFormatI)[pri:0, instance:jalview.io.IdentifyFileTest@e27ba81]" started-at="2023-07-02T10:11:38Z" name="testIdentify" data-provider="identifyFiles" finished-at="2023-07-02T10:11:38Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[examples/RF00031_folded.stk]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Stockholm]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testIdentify -->
        <test-method signature="testIdentify(java.lang.String, jalview.io.FileFormatI)[pri:0, instance:jalview.io.IdentifyFileTest@e27ba81]" started-at="2023-07-02T10:11:38Z" name="testIdentify" data-provider="identifyFiles" finished-at="2023-07-02T10:11:38Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[examples/testdata/test.rnaml]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Rnaml]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testIdentify -->
        <test-method signature="testIdentify(java.lang.String, jalview.io.FileFormatI)[pri:0, instance:jalview.io.IdentifyFileTest@e27ba81]" started-at="2023-07-02T10:11:38Z" name="testIdentify" data-provider="identifyFiles" finished-at="2023-07-02T10:11:38Z" duration-ms="2" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[examples/testdata/test.pfam]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Pfam]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testIdentify -->
        <test-method signature="testIdentify(java.lang.String, jalview.io.FileFormatI)[pri:0, instance:jalview.io.IdentifyFileTest@e27ba81]" started-at="2023-07-02T10:11:38Z" name="testIdentify" data-provider="identifyFiles" finished-at="2023-07-02T10:11:38Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[examples/testdata/test.aln]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Clustal]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testIdentify -->
        <test-method signature="testIdentify(java.lang.String, jalview.io.FileFormatI)[pri:0, instance:jalview.io.IdentifyFileTest@e27ba81]" started-at="2023-07-02T10:11:38Z" name="testIdentify" data-provider="identifyFiles" finished-at="2023-07-02T10:11:38Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[examples/testdata/test.pir]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[PIR]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testIdentify -->
        <test-method signature="testIdentify(java.lang.String, jalview.io.FileFormatI)[pri:0, instance:jalview.io.IdentifyFileTest@e27ba81]" started-at="2023-07-02T10:11:38Z" name="testIdentify" data-provider="identifyFiles" finished-at="2023-07-02T10:11:38Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[examples/testdata/test.msf]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[MSF]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testIdentify -->
        <test-method signature="testIdentify(java.lang.String, jalview.io.FileFormatI)[pri:0, instance:jalview.io.IdentifyFileTest@e27ba81]" started-at="2023-07-02T10:11:38Z" name="testIdentify" data-provider="identifyFiles" finished-at="2023-07-02T10:11:38Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[examples/testdata/test.html]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Html]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testIdentify -->
        <test-method signature="testIdentify(java.lang.String, jalview.io.FileFormatI)[pri:0, instance:jalview.io.IdentifyFileTest@e27ba81]" started-at="2023-07-02T10:11:38Z" name="testIdentify" data-provider="identifyFiles" finished-at="2023-07-02T10:11:38Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[examples/testdata/test.blc]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[BLC]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testIdentify -->
        <test-method signature="testIdentify(java.lang.String, jalview.io.FileFormatI)[pri:0, instance:jalview.io.IdentifyFileTest@e27ba81]" started-at="2023-07-02T10:11:38Z" name="testIdentify" data-provider="identifyFiles" finished-at="2023-07-02T10:11:38Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[examples/testdata/test.pileup]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Pileup]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testIdentify -->
        <test-method signature="testIdentify(java.lang.String, jalview.io.FileFormatI)[pri:0, instance:jalview.io.IdentifyFileTest@e27ba81]" started-at="2023-07-02T10:11:38Z" name="testIdentify" data-provider="identifyFiles" finished-at="2023-07-02T10:11:38Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[test/jalview/io/J03321.embl.txt]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Embl]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testIdentify -->
        <test-method signature="testIdentify(java.lang.String, jalview.io.FileFormatI)[pri:0, instance:jalview.io.IdentifyFileTest@e27ba81]" started-at="2023-07-02T10:11:38Z" name="testIdentify" data-provider="identifyFiles" finished-at="2023-07-02T10:11:38Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[test/jalview/io/J03321.gb]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[GenBank]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testIdentify -->
        <test-method signature="testIdentify(java.lang.String, jalview.io.FileFormatI)[pri:0, instance:jalview.io.IdentifyFileTest@e27ba81]" started-at="2023-07-02T10:11:38Z" name="testIdentify" data-provider="identifyFiles" finished-at="2023-07-02T10:11:38Z" duration-ms="2" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[examples/exampleFeatures.txt]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Features]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testIdentify -->
        <test-method signature="testIdentify(java.lang.String, jalview.io.FileFormatI)[pri:0, instance:jalview.io.IdentifyFileTest@e27ba81]" started-at="2023-07-02T10:11:38Z" name="testIdentify" data-provider="identifyFiles" finished-at="2023-07-02T10:11:38Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[examples/testdata/simpleGff3.gff]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Features]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testIdentify -->
        <test-method signature="testIdentify(java.lang.String, jalview.io.FileFormatI)[pri:0, instance:jalview.io.IdentifyFileTest@e27ba81]" started-at="2023-07-02T10:11:38Z" name="testIdentify" data-provider="identifyFiles" finished-at="2023-07-02T10:11:38Z" duration-ms="8" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[examples/testdata/test.jvp]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Jalview]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testIdentify -->
        <test-method signature="testIdentify(java.lang.String, jalview.io.FileFormatI)[pri:0, instance:jalview.io.IdentifyFileTest@e27ba81]" started-at="2023-07-02T10:11:38Z" name="testIdentify" data-provider="identifyFiles" finished-at="2023-07-02T10:11:38Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[examples/testdata/test.cif]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[MMCif]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testIdentify -->
        <test-method signature="testIdentify(java.lang.String, jalview.io.FileFormatI)[pri:0, instance:jalview.io.IdentifyFileTest@e27ba81]" started-at="2023-07-02T10:11:38Z" name="testIdentify" data-provider="identifyFiles" finished-at="2023-07-02T10:11:38Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[examples/testdata/cullpdb_pc25_res3.0_R0.3_d150729_chains9361.fasta.15316]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Fasta]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testIdentify -->
        <test-method signature="testIdentify(java.lang.String, jalview.io.FileFormatI)[pri:0, instance:jalview.io.IdentifyFileTest@e27ba81]" started-at="2023-07-02T10:11:38Z" name="testIdentify" data-provider="identifyFiles" finished-at="2023-07-02T10:11:38Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[resources/scoreModel/blosum80.scm]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[ScoreMatrix]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testIdentify -->
        <test-method signature="testIdentify(java.lang.String, jalview.io.FileFormatI)[pri:0, instance:jalview.io.IdentifyFileTest@e27ba81]" started-at="2023-07-02T10:11:38Z" name="testIdentify" data-provider="identifyFiles" finished-at="2023-07-02T10:11:38Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[resources/scoreModel/pam250.scm]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[ScoreMatrix]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testIdentify -->
        <test-method signature="testIdentify_featureFile()[pri:0, instance:jalview.io.IdentifyFileTest@e27ba81]" started-at="2023-07-02T10:11:38Z" name="testIdentify_featureFile" finished-at="2023-07-02T10:11:38Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testIdentify_featureFile -->
        <test-method signature="testLooksLikeFeatureData()[pri:0, instance:jalview.io.IdentifyFileTest@e27ba81]" started-at="2023-07-02T10:11:38Z" name="testLooksLikeFeatureData" finished-at="2023-07-02T10:11:38Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testLooksLikeFeatureData -->
      </class> <!-- jalview.io.IdentifyFileTest -->
      <class name="jalview.bin.MemorySettingTest">
        <test-method signature="testGetMemorySetting()[pri:0, instance:jalview.bin.MemorySettingTest@3abd581e]" started-at="2023-07-02T10:13:43Z" name="testGetMemorySetting" finished-at="2023-07-02T10:13:43Z" duration-ms="5" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetMemorySetting -->
      </class> <!-- jalview.bin.MemorySettingTest -->
      <class name="jalview.analysis.AlignmentSorterTest">
        <test-method signature="testSortByFeature_score()[pri:0, instance:jalview.analysis.AlignmentSorterTest@3228d990]" started-at="2023-07-02T10:11:42Z" name="testSortByFeature_score" finished-at="2023-07-02T10:11:42Z" duration-ms="3" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSortByFeature_score -->
        <test-method signature="testSortByFeature_density()[pri:0, instance:jalview.analysis.AlignmentSorterTest@3228d990]" started-at="2023-07-02T10:11:42Z" name="testSortByFeature_density" finished-at="2023-07-02T10:11:42Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSortByFeature_density -->
      </class> <!-- jalview.analysis.AlignmentSorterTest -->
      <class name="jalview.ext.jmol.JmolParserTest">
        <test-method is-config="true" signature="setUpJvOptionPane()[pri:0, instance:jalview.ext.jmol.JmolParserTest@6b739528]" started-at="2023-07-02T10:11:42Z" name="setUpJvOptionPane" finished-at="2023-07-02T10:11:42Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpJvOptionPane -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:jalview.ext.jmol.JmolParserTest@6b739528]" started-at="2023-07-02T10:11:42Z" name="setUp" finished-at="2023-07-02T10:11:42Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="testAlignmentLoader()[pri:0, instance:jalview.ext.jmol.JmolParserTest@6b739528]" started-at="2023-07-02T10:11:42Z" name="testAlignmentLoader" finished-at="2023-07-02T10:11:43Z" duration-ms="920" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAlignmentLoader -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:jalview.ext.jmol.JmolParserTest@6b739528]" started-at="2023-07-02T10:11:43Z" name="setUp" finished-at="2023-07-02T10:11:43Z" duration-ms="3" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="testFileParser()[pri:0, instance:jalview.ext.jmol.JmolParserTest@6b739528]" started-at="2023-07-02T10:11:43Z" name="testFileParser" finished-at="2023-07-02T10:11:44Z" duration-ms="859" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFileParser -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:jalview.ext.jmol.JmolParserTest@6b739528]" started-at="2023-07-02T10:11:44Z" name="setUp" finished-at="2023-07-02T10:11:44Z" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="testLocalPDBId()[pri:0, instance:jalview.ext.jmol.JmolParserTest@6b739528]" started-at="2023-07-02T10:11:44Z" name="testLocalPDBId" finished-at="2023-07-02T10:11:44Z" duration-ms="209" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testLocalPDBId -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:jalview.ext.jmol.JmolParserTest@6b739528]" started-at="2023-07-02T10:11:44Z" name="setUp" finished-at="2023-07-02T10:11:44Z" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="testParse_alternativeResidues()[pri:0, instance:jalview.ext.jmol.JmolParserTest@6b739528]" started-at="2023-07-02T10:11:44Z" name="testParse_alternativeResidues" finished-at="2023-07-02T10:11:44Z" duration-ms="230" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testParse_alternativeResidues -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:jalview.ext.jmol.JmolParserTest@6b739528]" started-at="2023-07-02T10:11:44Z" name="setUp" finished-at="2023-07-02T10:11:44Z" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="testParse_missingResidues()[pri:0, instance:jalview.ext.jmol.JmolParserTest@6b739528]" started-at="2023-07-02T10:11:44Z" name="testParse_missingResidues" finished-at="2023-07-02T10:11:44Z" duration-ms="243" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testParse_missingResidues -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:jalview.ext.jmol.JmolParserTest@6b739528]" started-at="2023-07-02T10:11:44Z" name="setUp" finished-at="2023-07-02T10:11:44Z" duration-ms="3" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="testSetSecondaryStructure()[pri:0, instance:jalview.ext.jmol.JmolParserTest@6b739528]" started-at="2023-07-02T10:11:44Z" name="testSetSecondaryStructure" finished-at="2023-07-02T10:11:44Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSetSecondaryStructure -->
      </class> <!-- jalview.ext.jmol.JmolParserTest -->
      <class name="jalview.io.FileFormatsTest">
        <test-method is-config="true" signature="setUp()[pri:0, instance:jalview.io.FileFormatsTest@10567255]" started-at="2023-07-02T10:12:20Z" name="setUp" finished-at="2023-07-02T10:12:20Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:jalview.io.FileFormatsTest@10567255]" started-at="2023-07-02T10:12:20Z" name="tearDown" finished-at="2023-07-02T10:12:20Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:jalview.io.FileFormatsTest@10567255]" started-at="2023-07-02T10:12:20Z" name="setUp" finished-at="2023-07-02T10:12:20Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="testForName()[pri:0, instance:jalview.io.FileFormatsTest@10567255]" started-at="2023-07-02T10:12:20Z" name="testForName" finished-at="2023-07-02T10:12:20Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testForName -->
        <test-method signature="testDeregisterFileFormat()[pri:0, instance:jalview.io.FileFormatsTest@10567255]" started-at="2023-07-02T10:12:20Z" name="testDeregisterFileFormat" finished-at="2023-07-02T10:12:20Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testDeregisterFileFormat -->
        <test-method signature="testGetFormats()[pri:0, instance:jalview.io.FileFormatsTest@10567255]" started-at="2023-07-02T10:12:20Z" name="testGetFormats" finished-at="2023-07-02T10:12:20Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetFormats -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:jalview.io.FileFormatsTest@10567255]" started-at="2023-07-02T10:12:20Z" name="tearDown" finished-at="2023-07-02T10:12:20Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:jalview.io.FileFormatsTest@10567255]" started-at="2023-07-02T10:12:20Z" name="setUp" finished-at="2023-07-02T10:12:20Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:jalview.io.FileFormatsTest@10567255]" started-at="2023-07-02T10:12:20Z" name="tearDown" finished-at="2023-07-02T10:12:20Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method signature="testGetReadableFormats()[pri:0, instance:jalview.io.FileFormatsTest@10567255]" started-at="2023-07-02T10:12:20Z" name="testGetReadableFormats" finished-at="2023-07-02T10:12:20Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetReadableFormats -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:jalview.io.FileFormatsTest@10567255]" started-at="2023-07-02T10:12:20Z" name="setUp" finished-at="2023-07-02T10:12:20Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:jalview.io.FileFormatsTest@10567255]" started-at="2023-07-02T10:12:20Z" name="tearDown" finished-at="2023-07-02T10:12:20Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:jalview.io.FileFormatsTest@10567255]" started-at="2023-07-02T10:12:20Z" name="setUp" finished-at="2023-07-02T10:12:20Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="testIsIdentifiable()[pri:0, instance:jalview.io.FileFormatsTest@10567255]" started-at="2023-07-02T10:12:20Z" name="testIsIdentifiable" finished-at="2023-07-02T10:12:20Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testIsIdentifiable -->
        <test-method signature="testGetWritableFormats()[pri:0, instance:jalview.io.FileFormatsTest@10567255]" started-at="2023-07-02T10:12:20Z" name="testGetWritableFormats" finished-at="2023-07-02T10:12:20Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetWritableFormats -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:jalview.io.FileFormatsTest@10567255]" started-at="2023-07-02T10:12:20Z" name="setUp" finished-at="2023-07-02T10:12:20Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:jalview.io.FileFormatsTest@10567255]" started-at="2023-07-02T10:12:20Z" name="tearDown" finished-at="2023-07-02T10:12:20Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:jalview.io.FileFormatsTest@10567255]" started-at="2023-07-02T10:12:20Z" name="setUp" finished-at="2023-07-02T10:12:20Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="testRegisterFileFormat()[pri:0, instance:jalview.io.FileFormatsTest@10567255]" started-at="2023-07-02T10:12:20Z" name="testRegisterFileFormat" finished-at="2023-07-02T10:12:20Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRegisterFileFormat -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:jalview.io.FileFormatsTest@10567255]" started-at="2023-07-02T10:12:20Z" name="tearDown" finished-at="2023-07-02T10:12:20Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:jalview.io.FileFormatsTest@10567255]" started-at="2023-07-02T10:12:20Z" name="tearDown" finished-at="2023-07-02T10:12:20Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- jalview.io.FileFormatsTest -->
      <class name="jalview.ext.android.SparseShortArrayTest">
        <test-method signature="testAdd()[pri:0, instance:jalview.ext.android.SparseShortArrayTest@7dd712e8]" started-at="2023-07-02T10:11:41Z" name="testAdd" finished-at="2023-07-02T10:11:41Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAdd -->
        <test-method is-config="true" signature="setUpJvOptionPane()[pri:0, instance:jalview.ext.android.SparseShortArrayTest@7dd712e8]" started-at="2023-07-02T10:11:41Z" name="setUpJvOptionPane" finished-at="2023-07-02T10:11:41Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpJvOptionPane -->
        <test-method signature="testPut()[pri:0, instance:jalview.ext.android.SparseShortArrayTest@7dd712e8]" started-at="2023-07-02T10:11:41Z" name="testPut" finished-at="2023-07-02T10:11:41Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testPut -->
      </class> <!-- jalview.ext.android.SparseShortArrayTest -->
      <class name="jalview.gui.PopupMenuTest">
        <test-method is-config="true" signature="setUpJvOptionPane()[pri:0, instance:jalview.gui.PopupMenuTest@467f77a5]" started-at="2023-07-02T10:11:53Z" name="setUpJvOptionPane" finished-at="2023-07-02T10:11:53Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpJvOptionPane -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:jalview.gui.PopupMenuTest@467f77a5]" started-at="2023-07-02T10:11:53Z" name="setUp" finished-at="2023-07-02T10:11:53Z" duration-ms="49" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="testAddFeatureDetails()[pri:0, instance:jalview.gui.PopupMenuTest@467f77a5]" started-at="2023-07-02T10:11:53Z" name="testAddFeatureDetails" finished-at="2023-07-02T10:11:53Z" duration-ms="11" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAddFeatureDetails -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:jalview.gui.PopupMenuTest@467f77a5]" started-at="2023-07-02T10:11:53Z" name="setUp" finished-at="2023-07-02T10:11:53Z" duration-ms="28" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="testAddFeatureDetails_linkedFeatures()[pri:0, instance:jalview.gui.PopupMenuTest@467f77a5]" started-at="2023-07-02T10:11:53Z" name="testAddFeatureDetails_linkedFeatures" finished-at="2023-07-02T10:11:53Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAddFeatureDetails_linkedFeatures -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:jalview.gui.PopupMenuTest@467f77a5]" started-at="2023-07-02T10:11:53Z" name="setUp" finished-at="2023-07-02T10:11:53Z" duration-ms="26" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="testBuildAnnotationTypesMenus()[pri:0, instance:jalview.gui.PopupMenuTest@467f77a5]" started-at="2023-07-02T10:11:53Z" name="testBuildAnnotationTypesMenus" finished-at="2023-07-02T10:11:53Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testBuildAnnotationTypesMenus -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:jalview.gui.PopupMenuTest@467f77a5]" started-at="2023-07-02T10:11:53Z" name="setUp" finished-at="2023-07-02T10:11:53Z" duration-ms="30" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="testBuildAnnotationTypesMenus_hideDisabled()[pri:0, instance:jalview.gui.PopupMenuTest@467f77a5]" started-at="2023-07-02T10:11:53Z" name="testBuildAnnotationTypesMenus_hideDisabled" finished-at="2023-07-02T10:11:53Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testBuildAnnotationTypesMenus_hideDisabled -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:jalview.gui.PopupMenuTest@467f77a5]" started-at="2023-07-02T10:11:53Z" name="setUp" finished-at="2023-07-02T10:11:53Z" duration-ms="27" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="testBuildAnnotationTypesMenus_showDisabled()[pri:0, instance:jalview.gui.PopupMenuTest@467f77a5]" started-at="2023-07-02T10:11:53Z" name="testBuildAnnotationTypesMenus_showDisabled" finished-at="2023-07-02T10:11:53Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testBuildAnnotationTypesMenus_showDisabled -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:jalview.gui.PopupMenuTest@467f77a5]" started-at="2023-07-02T10:11:53Z" name="setUp" finished-at="2023-07-02T10:11:53Z" duration-ms="29" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="testBuildLinkMenu()[pri:0, instance:jalview.gui.PopupMenuTest@467f77a5]" started-at="2023-07-02T10:11:53Z" name="testBuildLinkMenu" finished-at="2023-07-02T10:11:53Z" duration-ms="6" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testBuildLinkMenu -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:jalview.gui.PopupMenuTest@467f77a5]" started-at="2023-07-02T10:11:53Z" name="setUp" finished-at="2023-07-02T10:11:53Z" duration-ms="28" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="testConfigureReferenceAnnotationsMenu()[pri:0, instance:jalview.gui.PopupMenuTest@467f77a5]" started-at="2023-07-02T10:11:53Z" name="testConfigureReferenceAnnotationsMenu" finished-at="2023-07-02T10:11:53Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testConfigureReferenceAnnotationsMenu -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:jalview.gui.PopupMenuTest@467f77a5]" started-at="2023-07-02T10:11:53Z" name="setUp" finished-at="2023-07-02T10:11:53Z" duration-ms="24" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:jalview.gui.PopupMenuTest@467f77a5]" started-at="2023-07-02T10:11:53Z" name="setUp" finished-at="2023-07-02T10:11:53Z" duration-ms="26" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="testConfigureReferenceAnnotationsMenu_alreadyAdded()[pri:0, instance:jalview.gui.PopupMenuTest@467f77a5]" started-at="2023-07-02T10:11:53Z" name="testConfigureReferenceAnnotationsMenu_alreadyAdded" finished-at="2023-07-02T10:11:53Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testConfigureReferenceAnnotationsMenu_alreadyAdded -->
        <test-method signature="testConfigureReferenceAnnotationsMenu_noReferenceAnnotations()[pri:0, instance:jalview.gui.PopupMenuTest@467f77a5]" started-at="2023-07-02T10:11:53Z" name="testConfigureReferenceAnnotationsMenu_noReferenceAnnotations" finished-at="2023-07-02T10:11:53Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testConfigureReferenceAnnotationsMenu_noReferenceAnnotations -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:jalview.gui.PopupMenuTest@467f77a5]" started-at="2023-07-02T10:11:53Z" name="setUp" finished-at="2023-07-02T10:11:53Z" duration-ms="26" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="testConfigureReferenceAnnotationsMenu_noSequenceSelected()[pri:0, instance:jalview.gui.PopupMenuTest@467f77a5]" started-at="2023-07-02T10:11:53Z" name="testConfigureReferenceAnnotationsMenu_noSequenceSelected" finished-at="2023-07-02T10:11:53Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testConfigureReferenceAnnotationsMenu_noSequenceSelected -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:jalview.gui.PopupMenuTest@467f77a5]" started-at="2023-07-02T10:11:53Z" name="setUp" finished-at="2023-07-02T10:11:53Z" duration-ms="26" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="testConfigureReferenceAnnotationsMenu_notOnAlignment()[pri:0, instance:jalview.gui.PopupMenuTest@467f77a5]" started-at="2023-07-02T10:11:53Z" name="testConfigureReferenceAnnotationsMenu_notOnAlignment" finished-at="2023-07-02T10:11:53Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testConfigureReferenceAnnotationsMenu_notOnAlignment -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:jalview.gui.PopupMenuTest@467f77a5]" started-at="2023-07-02T10:11:53Z" name="setUp" finished-at="2023-07-02T10:11:53Z" duration-ms="32" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:jalview.gui.PopupMenuTest@467f77a5]" started-at="2023-07-02T10:11:53Z" name="setUp" finished-at="2023-07-02T10:11:53Z" duration-ms="26" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="testConfigureReferenceAnnotationsMenu_twoViews()[pri:0, instance:jalview.gui.PopupMenuTest@467f77a5]" started-at="2023-07-02T10:11:53Z" name="testConfigureReferenceAnnotationsMenu_twoViews" finished-at="2023-07-02T10:11:53Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testConfigureReferenceAnnotationsMenu_twoViews -->
        <test-method signature="testHideInsertions()[pri:0, instance:jalview.gui.PopupMenuTest@467f77a5]" started-at="2023-07-02T10:11:53Z" name="testHideInsertions" finished-at="2023-07-02T10:11:53Z" duration-ms="12" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testHideInsertions -->
      </class> <!-- jalview.gui.PopupMenuTest -->
      <class name="jalview.fts.core.FTSRestClientTest">
        <test-method is-config="true" signature="setUpJvOptionPane()[pri:0, instance:jalview.fts.core.FTSRestClientTest@11ee02f8]" started-at="2023-07-02T10:11:41Z" name="setUpJvOptionPane" finished-at="2023-07-02T10:11:41Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpJvOptionPane -->
        <test-method signature="coverageForEqualsAndHashFunction()[pri:0, instance:jalview.fts.core.FTSRestClientTest@11ee02f8]" started-at="2023-07-02T10:11:41Z" name="coverageForEqualsAndHashFunction" finished-at="2023-07-02T10:11:41Z" duration-ms="4" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- coverageForEqualsAndHashFunction -->
        <test-method is-config="true" signature="setup()[pri:0, instance:jalview.fts.core.FTSRestClientTest@11ee02f8]" started-at="2023-07-02T10:11:41Z" name="setup" finished-at="2023-07-02T10:11:41Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="coverageForExceptionBranches()[pri:0, instance:jalview.fts.core.FTSRestClientTest@11ee02f8]" started-at="2023-07-02T10:11:41Z" name="coverageForExceptionBranches" finished-at="2023-07-02T10:11:41Z" duration-ms="3" status="PASS">
          <exception class="java.lang.Exception">
            <message>
              <![CDATA[Couldn't find data column with name : unavailable column]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.Exception: Couldn't find data column with name : unavailable column
	at jalview.fts.core.FTSRestClient.getDataColumnByNameOrCode(FTSRestClient.java:432)
	at jalview.fts.core.FTSRestClientTest.coverageForExceptionBranches(FTSRestClientTest.java:325)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:648)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:834)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1142)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:124)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:771)
	at org.testng.TestRunner.run(TestRunner.java:621)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:357)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:352)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:310)
	at org.testng.SuiteRunner.run(SuiteRunner.java:259)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1176)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1101)
	at org.testng.TestNG.run(TestNG.java:1009)
	at org.gradle.api.internal.tasks.testing.testng.TestNGTestClassProcessor.runTests(TestNGTestClassProcessor.java:145)
	at org.gradle.api.internal.tasks.testing.testng.TestNGTestClassProcessor.stop(TestNGTestClassProcessor.java:92)
	at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.stop(SuiteTestClassProcessor.java:62)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:36)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24)
	at org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:33)
	at org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:94)
	at com.sun.proxy.$Proxy2.stop(Unknown Source)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker$3.run(TestWorker.java:193)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.executeAndMaintainThreadName(TestWorker.java:129)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.execute(TestWorker.java:100)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.execute(TestWorker.java:60)
	at org.gradle.process.internal.worker.child.ActionExecutionWorker.execute(ActionExecutionWorker.java:56)
	at org.gradle.process.internal.worker.child.SystemApplicationClassLoaderWorker.call(SystemApplicationClassLoaderWorker.java:113)
	at org.gradle.process.internal.worker.child.SystemApplicationClassLoaderWorker.call(SystemApplicationClassLoaderWorker.java:65)
	at worker.org.gradle.process.internal.worker.GradleWorkerMain.run(GradleWorkerMain.java:69)
	at worker.org.gradle.process.internal.worker.GradleWorkerMain.main(GradleWorkerMain.java:74)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.Exception -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- coverageForExceptionBranches -->
        <test-method is-config="true" signature="setup()[pri:0, instance:jalview.fts.core.FTSRestClientTest@11ee02f8]" started-at="2023-07-02T10:11:41Z" name="setup" finished-at="2023-07-02T10:11:41Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method is-config="true" signature="setup()[pri:0, instance:jalview.fts.core.FTSRestClientTest@11ee02f8]" started-at="2023-07-02T10:11:41Z" name="setup" finished-at="2023-07-02T10:11:41Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="coverageForMiscellaneousBranches()[pri:0, instance:jalview.fts.core.FTSRestClientTest@11ee02f8]" started-at="2023-07-02T10:11:41Z" name="coverageForMiscellaneousBranches" finished-at="2023-07-02T10:11:41Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- coverageForMiscellaneousBranches -->
        <test-method is-config="true" signature="setup()[pri:0, instance:jalview.fts.core.FTSRestClientTest@11ee02f8]" started-at="2023-07-02T10:11:41Z" name="setup" finished-at="2023-07-02T10:11:41Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="getAllDefaulDisplayedDataColumns()[pri:0, instance:jalview.fts.core.FTSRestClientTest@11ee02f8]" started-at="2023-07-02T10:11:41Z" name="getAllDefaulDisplayedDataColumns" finished-at="2023-07-02T10:11:41Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getAllDefaulDisplayedDataColumns -->
        <test-method is-config="true" signature="setup()[pri:0, instance:jalview.fts.core.FTSRestClientTest@11ee02f8]" started-at="2023-07-02T10:11:41Z" name="setup" finished-at="2023-07-02T10:11:41Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="getAllFTSDataColumns()[pri:0, instance:jalview.fts.core.FTSRestClientTest@11ee02f8]" started-at="2023-07-02T10:11:41Z" name="getAllFTSDataColumns" finished-at="2023-07-02T10:11:41Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getAllFTSDataColumns -->
        <test-method signature="getColumnClassTest()[pri:0, instance:jalview.fts.core.FTSRestClientTest@11ee02f8]" started-at="2023-07-02T10:11:41Z" name="getColumnClassTest" finished-at="2023-07-02T10:11:41Z" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getColumnClassTest -->
        <test-method is-config="true" signature="setup()[pri:0, instance:jalview.fts.core.FTSRestClientTest@11ee02f8]" started-at="2023-07-02T10:11:41Z" name="setup" finished-at="2023-07-02T10:11:41Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method is-config="true" signature="setup()[pri:0, instance:jalview.fts.core.FTSRestClientTest@11ee02f8]" started-at="2023-07-02T10:11:41Z" name="setup" finished-at="2023-07-02T10:11:41Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="getColumnMaxWidthTest()[pri:0, instance:jalview.fts.core.FTSRestClientTest@11ee02f8]" started-at="2023-07-02T10:11:41Z" name="getColumnMaxWidthTest" finished-at="2023-07-02T10:11:41Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getColumnMaxWidthTest -->
        <test-method signature="getColumnMinWidthTest()[pri:0, instance:jalview.fts.core.FTSRestClientTest@11ee02f8]" started-at="2023-07-02T10:11:41Z" name="getColumnMinWidthTest" finished-at="2023-07-02T10:11:41Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getColumnMinWidthTest -->
        <test-method is-config="true" signature="setup()[pri:0, instance:jalview.fts.core.FTSRestClientTest@11ee02f8]" started-at="2023-07-02T10:11:41Z" name="setup" finished-at="2023-07-02T10:11:41Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method is-config="true" signature="setup()[pri:0, instance:jalview.fts.core.FTSRestClientTest@11ee02f8]" started-at="2023-07-02T10:11:41Z" name="setup" finished-at="2023-07-02T10:11:41Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="getColumnPreferredWidthTest()[pri:0, instance:jalview.fts.core.FTSRestClientTest@11ee02f8]" started-at="2023-07-02T10:11:41Z" name="getColumnPreferredWidthTest" finished-at="2023-07-02T10:11:41Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getColumnPreferredWidthTest -->
        <test-method signature="getDataColumnByNameOrCode()[pri:0, instance:jalview.fts.core.FTSRestClientTest@11ee02f8]" started-at="2023-07-02T10:11:41Z" name="getDataColumnByNameOrCode" finished-at="2023-07-02T10:11:41Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getDataColumnByNameOrCode -->
        <test-method is-config="true" signature="setup()[pri:0, instance:jalview.fts.core.FTSRestClientTest@11ee02f8]" started-at="2023-07-02T10:11:41Z" name="setup" finished-at="2023-07-02T10:11:41Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method is-config="true" signature="setup()[pri:0, instance:jalview.fts.core.FTSRestClientTest@11ee02f8]" started-at="2023-07-02T10:11:41Z" name="setup" finished-at="2023-07-02T10:11:41Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="getDataColumnGroupById()[pri:0, instance:jalview.fts.core.FTSRestClientTest@11ee02f8]" started-at="2023-07-02T10:11:41Z" name="getDataColumnGroupById" finished-at="2023-07-02T10:11:41Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getDataColumnGroupById -->
        <test-method is-config="true" signature="setup()[pri:0, instance:jalview.fts.core.FTSRestClientTest@11ee02f8]" started-at="2023-07-02T10:11:41Z" name="setup" finished-at="2023-07-02T10:11:41Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="getDataColumnsFieldsAsCommaDelimitedString()[pri:0, instance:jalview.fts.core.FTSRestClientTest@11ee02f8]" started-at="2023-07-02T10:11:41Z" name="getDataColumnsFieldsAsCommaDelimitedString" finished-at="2023-07-02T10:11:41Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getDataColumnsFieldsAsCommaDelimitedString -->
        <test-method is-config="true" signature="setup()[pri:0, instance:jalview.fts.core.FTSRestClientTest@11ee02f8]" started-at="2023-07-02T10:11:41Z" name="setup" finished-at="2023-07-02T10:11:41Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="getDefaultResponsePageSize()[pri:0, instance:jalview.fts.core.FTSRestClientTest@11ee02f8]" started-at="2023-07-02T10:11:41Z" name="getDefaultResponsePageSize" finished-at="2023-07-02T10:11:41Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getDefaultResponsePageSize -->
        <test-method is-config="true" signature="setup()[pri:0, instance:jalview.fts.core.FTSRestClientTest@11ee02f8]" started-at="2023-07-02T10:11:41Z" name="setup" finished-at="2023-07-02T10:11:41Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="getPrimaryKeyColumIndexTest()[pri:0, instance:jalview.fts.core.FTSRestClientTest@11ee02f8]" started-at="2023-07-02T10:11:41Z" name="getPrimaryKeyColumIndexTest" finished-at="2023-07-02T10:11:41Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getPrimaryKeyColumIndexTest -->
        <test-method signature="getPrimaryKeyColumn()[pri:0, instance:jalview.fts.core.FTSRestClientTest@11ee02f8]" started-at="2023-07-02T10:11:41Z" name="getPrimaryKeyColumn" finished-at="2023-07-02T10:11:41Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getPrimaryKeyColumn -->
        <test-method is-config="true" signature="setup()[pri:0, instance:jalview.fts.core.FTSRestClientTest@11ee02f8]" started-at="2023-07-02T10:11:41Z" name="setup" finished-at="2023-07-02T10:11:41Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method is-config="true" signature="setup()[pri:0, instance:jalview.fts.core.FTSRestClientTest@11ee02f8]" started-at="2023-07-02T10:11:41Z" name="setup" finished-at="2023-07-02T10:11:41Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="getSearchableDataColumns()[pri:0, instance:jalview.fts.core.FTSRestClientTest@11ee02f8]" started-at="2023-07-02T10:11:41Z" name="getSearchableDataColumns" finished-at="2023-07-02T10:11:41Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getSearchableDataColumns -->
      </class> <!-- jalview.fts.core.FTSRestClientTest -->
      <class name="jalview.gui.AlignmentPanelTest">
        <test-method is-config="true" signature="setUp()[pri:0, instance:jalview.gui.AlignmentPanelTest@77b325b3]" started-at="2023-07-02T10:11:57Z" name="setUp" finished-at="2023-07-02T10:11:58Z" duration-ms="492" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="testCalculateIdWidth_noArgs()[pri:0, instance:jalview.gui.AlignmentPanelTest@77b325b3]" started-at="2023-07-02T10:11:58Z" name="testCalculateIdWidth_noArgs" finished-at="2023-07-02T10:11:58Z" duration-ms="15" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCalculateIdWidth_noArgs -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:jalview.gui.AlignmentPanelTest@77b325b3]" started-at="2023-07-02T10:11:58Z" name="setUp" finished-at="2023-07-02T10:11:58Z" duration-ms="258" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="testCalculateIdWidth_withMaxWidth()[pri:0, instance:jalview.gui.AlignmentPanelTest@77b325b3]" started-at="2023-07-02T10:11:58Z" name="testCalculateIdWidth_withMaxWidth" finished-at="2023-07-02T10:11:58Z" duration-ms="1" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [209] but found [211]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [209] but found [211]
	at org.testng.Assert.fail(Assert.java:94)
	at org.testng.Assert.failNotEquals(Assert.java:496)
	at org.testng.Assert.assertEquals(Assert.java:125)
	at org.testng.Assert.assertEquals(Assert.java:372)
	at org.testng.Assert.assertEquals(Assert.java:382)
	at jalview.gui.AlignmentPanelTest.testCalculateIdWidth_withMaxWidth(AlignmentPanelTest.java:250)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:648)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:834)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1142)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:124)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:771)
	at org.testng.TestRunner.run(TestRunner.java:621)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:357)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:352)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:310)
	at org.testng.SuiteRunner.run(SuiteRunner.java:259)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1176)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1101)
	at org.testng.TestNG.run(TestNG.java:1009)
	at org.gradle.api.internal.tasks.testing.testng.TestNGTestClassProcessor.runTests(TestNGTestClassProcessor.java:145)
	at org.gradle.api.internal.tasks.testing.testng.TestNGTestClassProcessor.stop(TestNGTestClassProcessor.java:92)
	at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.stop(SuiteTestClassProcessor.java:62)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:36)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24)
	at org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:33)
	at org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:94)
	at com.sun.proxy.$Proxy2.stop(Unknown Source)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker$3.run(TestWorker.java:193)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.executeAndMaintainThreadName(TestWorker.java:129)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.execute(TestWorker.java:100)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.execute(TestWorker.java:60)
	at org.gradle.process.internal.worker.child.ActionExecutionWorker.execute(ActionExecutionWorker.java:56)
	at org.gradle.process.internal.worker.child.SystemApplicationClassLoaderWorker.call(SystemApplicationClassLoaderWorker.java:113)
	at org.gradle.process.internal.worker.child.SystemApplicationClassLoaderWorker.call(SystemApplicationClassLoaderWorker.java:65)
	at worker.org.gradle.process.internal.worker.GradleWorkerMain.run(GradleWorkerMain.java:69)
	at worker.org.gradle.process.internal.worker.GradleWorkerMain.main(GradleWorkerMain.java:74)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCalculateIdWidth_withMaxWidth -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:jalview.gui.AlignmentPanelTest@77b325b3]" started-at="2023-07-02T10:11:58Z" name="setUp" finished-at="2023-07-02T10:11:58Z" duration-ms="192" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="testGetVisibleWidth()[pri:0, instance:jalview.gui.AlignmentPanelTest@77b325b3]" started-at="2023-07-02T10:11:58Z" name="testGetVisibleWidth" finished-at="2023-07-02T10:11:58Z" duration-ms="1" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [115] but found [105]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [115] but found [105]
	at org.testng.Assert.fail(Assert.java:94)
	at org.testng.Assert.failNotEquals(Assert.java:496)
	at org.testng.Assert.assertEquals(Assert.java:125)
	at org.testng.Assert.assertEquals(Assert.java:372)
	at org.testng.Assert.assertEquals(Assert.java:382)
	at jalview.gui.AlignmentPanelTest.testGetVisibleWidth(AlignmentPanelTest.java:271)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:648)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:834)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1142)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:124)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:771)
	at org.testng.TestRunner.run(TestRunner.java:621)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:357)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:352)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:310)
	at org.testng.SuiteRunner.run(SuiteRunner.java:259)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1176)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1101)
	at org.testng.TestNG.run(TestNG.java:1009)
	at org.gradle.api.internal.tasks.testing.testng.TestNGTestClassProcessor.runTests(TestNGTestClassProcessor.java:145)
	at org.gradle.api.internal.tasks.testing.testng.TestNGTestClassProcessor.stop(TestNGTestClassProcessor.java:92)
	at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.stop(SuiteTestClassProcessor.java:62)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:36)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24)
	at org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:33)
	at org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:94)
	at com.sun.proxy.$Proxy2.stop(Unknown Source)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker$3.run(TestWorker.java:193)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.executeAndMaintainThreadName(TestWorker.java:129)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.execute(TestWorker.java:100)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.execute(TestWorker.java:60)
	at org.gradle.process.internal.worker.child.ActionExecutionWorker.execute(ActionExecutionWorker.java:56)
	at org.gradle.process.internal.worker.child.SystemApplicationClassLoaderWorker.call(SystemApplicationClassLoaderWorker.java:113)
	at org.gradle.process.internal.worker.child.SystemApplicationClassLoaderWorker.call(SystemApplicationClassLoaderWorker.java:65)
	at worker.org.gradle.process.internal.worker.GradleWorkerMain.run(GradleWorkerMain.java:69)
	at worker.org.gradle.process.internal.worker.GradleWorkerMain.main(GradleWorkerMain.java:74)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetVisibleWidth -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:jalview.gui.AlignmentPanelTest@77b325b3]" started-at="2023-07-02T10:11:58Z" name="setUp" finished-at="2023-07-02T10:11:59Z" duration-ms="193" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="testSetScrollValues()[pri:0, instance:jalview.gui.AlignmentPanelTest@77b325b3]" started-at="2023-07-02T10:11:59Z" name="testSetScrollValues" finished-at="2023-07-02T10:11:59Z" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSetScrollValues -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:jalview.gui.AlignmentPanelTest@77b325b3]" started-at="2023-07-02T10:11:59Z" name="setUp" finished-at="2023-07-02T10:11:59Z" duration-ms="322" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="testUpdateLayout_endRes()[pri:0, instance:jalview.gui.AlignmentPanelTest@77b325b3]" started-at="2023-07-02T10:11:59Z" name="testUpdateLayout_endRes" finished-at="2023-07-02T10:11:59Z" duration-ms="5" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testUpdateLayout_endRes -->
      </class> <!-- jalview.gui.AlignmentPanelTest -->
      <class name="jalview.urls.CustomUrlProviderTest">
        <test-method signature="testDefaultUrl()[pri:0, instance:jalview.urls.CustomUrlProviderTest@3b4ef7]" started-at="2023-07-02T10:11:56Z" name="testDefaultUrl" finished-at="2023-07-02T10:11:56Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testDefaultUrl -->
        <test-method signature="testUrlLinks()[pri:0, instance:jalview.urls.CustomUrlProviderTest@3b4ef7]" started-at="2023-07-02T10:11:56Z" name="testUrlLinks" finished-at="2023-07-02T10:11:56Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testUrlLinks -->
      </class> <!-- jalview.urls.CustomUrlProviderTest -->
      <class name="jalview.ws.dbsources.UniprotTest">
        <test-method is-config="true" signature="setUpJvOptionPane()[pri:0, instance:jalview.ws.dbsources.UniprotTest@30272916]" started-at="2023-07-02T10:11:42Z" name="setUpJvOptionPane" finished-at="2023-07-02T10:11:42Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpJvOptionPane -->
        <test-method signature="testGetDescription()[pri:0, instance:jalview.ws.dbsources.UniprotTest@30272916]" started-at="2023-07-02T10:11:42Z" name="testGetDescription" finished-at="2023-07-02T10:11:42Z" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetDescription -->
        <test-method signature="testGetUniprotEntries()[pri:0, instance:jalview.ws.dbsources.UniprotTest@30272916]" started-at="2023-07-02T10:11:42Z" name="testGetUniprotEntries" finished-at="2023-07-02T10:11:42Z" duration-ms="64" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetUniprotEntries -->
        <test-method signature="testGetUniprotEntryDescription()[pri:0, instance:jalview.ws.dbsources.UniprotTest@30272916]" started-at="2023-07-02T10:11:42Z" name="testGetUniprotEntryDescription" finished-at="2023-07-02T10:11:42Z" duration-ms="21" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetUniprotEntryDescription -->
        <test-method signature="testGetUniprotEntryId()[pri:0, instance:jalview.ws.dbsources.UniprotTest@30272916]" started-at="2023-07-02T10:11:42Z" name="testGetUniprotEntryId" finished-at="2023-07-02T10:11:42Z" duration-ms="26" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetUniprotEntryId -->
        <test-method signature="testGetUniprotSequence()[pri:0, instance:jalview.ws.dbsources.UniprotTest@30272916]" started-at="2023-07-02T10:11:42Z" name="testGetUniprotSequence" finished-at="2023-07-02T10:11:42Z" duration-ms="24" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetUniprotSequence -->
      </class> <!-- jalview.ws.dbsources.UniprotTest -->
      <class name="jalview.ws.rest.RestClientTest">
        <test-method is-config="true" signature="setUpJvOptionPane()[pri:0, instance:jalview.ws.rest.RestClientTest@51671b08]" started-at="2023-07-02T10:11:41Z" name="setUpJvOptionPane" finished-at="2023-07-02T10:11:41Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpJvOptionPane -->
        <test-method signature="testGetRestClient()[pri:0, instance:jalview.ws.rest.RestClientTest@51671b08]" started-at="2023-07-02T10:11:41Z" name="testGetRestClient" finished-at="2023-07-02T10:11:41Z" duration-ms="4" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetRestClient -->
      </class> <!-- jalview.ws.rest.RestClientTest -->
      <class name="jalview.io.gff.ExonerateHelperTest">
        <test-method is-config="true" signature="setUpJvOptionPane()[pri:0, instance:jalview.io.gff.ExonerateHelperTest@d71adc2]" started-at="2023-07-02T10:12:07Z" name="setUpJvOptionPane" finished-at="2023-07-02T10:12:07Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpJvOptionPane -->
        <test-method signature="testAddExonerateGffToAlignment()[pri:0, instance:jalview.io.gff.ExonerateHelperTest@d71adc2]" started-at="2023-07-02T10:12:07Z" name="testAddExonerateGffToAlignment" finished-at="2023-07-02T10:12:07Z" duration-ms="22" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAddExonerateGffToAlignment -->
        <test-method signature="testGetMappingType()[pri:0, instance:jalview.io.gff.ExonerateHelperTest@d71adc2]" started-at="2023-07-02T10:12:07Z" name="testGetMappingType" finished-at="2023-07-02T10:12:07Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetMappingType -->
        <test-method signature="testProcessGffSimilarity_protein2dna_forward_querygff()[pri:0, instance:jalview.io.gff.ExonerateHelperTest@d71adc2]" started-at="2023-07-02T10:12:07Z" name="testProcessGffSimilarity_protein2dna_forward_querygff" finished-at="2023-07-02T10:12:07Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testProcessGffSimilarity_protein2dna_forward_querygff -->
        <test-method signature="testProcessGffSimilarity_protein2dna_reverse_targetgff()[pri:0, instance:jalview.io.gff.ExonerateHelperTest@d71adc2]" started-at="2023-07-02T10:12:07Z" name="testProcessGffSimilarity_protein2dna_reverse_targetgff" finished-at="2023-07-02T10:12:07Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testProcessGffSimilarity_protein2dna_reverse_targetgff -->
        <test-method signature="testProcessGffSimilarity_protein2dna_forward_targetgff()[pri:0, instance:jalview.io.gff.ExonerateHelperTest@d71adc2]" started-at="2023-07-02T10:12:07Z" name="testProcessGffSimilarity_protein2dna_forward_targetgff" finished-at="2023-07-02T10:12:07Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testProcessGffSimilarity_protein2dna_forward_targetgff -->
        <test-method signature="testProcessGffSimilarity_protein2dna_reverse_querygff()[pri:0, instance:jalview.io.gff.ExonerateHelperTest@d71adc2]" started-at="2023-07-02T10:12:07Z" name="testProcessGffSimilarity_protein2dna_reverse_querygff" finished-at="2023-07-02T10:12:07Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testProcessGffSimilarity_protein2dna_reverse_querygff -->
      </class> <!-- jalview.io.gff.ExonerateHelperTest -->
      <class name="jalview.workers.AlignCalcManagerTest">
        <test-method is-config="true" signature="setUp()[pri:0, instance:jalview.workers.AlignCalcManagerTest@4c432866]" started-at="2023-07-02T10:13:44Z" name="setUp" finished-at="2023-07-02T10:13:44Z" duration-ms="9" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="setUpJvOptionPane()[pri:0, instance:jalview.workers.AlignCalcManagerTest@4c432866]" started-at="2023-07-02T10:13:44Z" name="setUpJvOptionPane" finished-at="2023-07-02T10:13:44Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpJvOptionPane -->
        <test-method signature="testRemoveWorkerForAnnotation()[pri:0, instance:jalview.workers.AlignCalcManagerTest@4c432866]" started-at="2023-07-02T10:13:44Z" name="testRemoveWorkerForAnnotation" finished-at="2023-07-02T10:13:44Z" duration-ms="101" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemoveWorkerForAnnotation -->
      </class> <!-- jalview.workers.AlignCalcManagerTest -->
      <class name="jalview.ws.dbsources.RfamFullTest">
        <test-method is-config="true" signature="setUp()[pri:0, instance:jalview.ws.dbsources.RfamFullTest@6e0d4a8]" started-at="2023-07-02T10:11:41Z" name="setUp" finished-at="2023-07-02T10:11:41Z" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="testGetURL()[pri:0, instance:jalview.ws.dbsources.RfamFullTest@6e0d4a8]" started-at="2023-07-02T10:11:41Z" name="testGetURL" finished-at="2023-07-02T10:11:41Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetURL -->
      </class> <!-- jalview.ws.dbsources.RfamFullTest -->
      <class name="jalview.math.MatrixTest">
        <test-method signature="testConstructor()[pri:0, instance:jalview.math.MatrixTest@59221b97]" started-at="2023-07-02T10:12:20Z" name="testConstructor" finished-at="2023-07-02T10:12:20Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testConstructor -->
        <test-method signature="testEquals()[pri:0, instance:jalview.math.MatrixTest@59221b97]" started-at="2023-07-02T10:12:20Z" name="testEquals" finished-at="2023-07-02T10:12:20Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testEquals -->
        <test-method signature="testCopy()[pri:0, instance:jalview.math.MatrixTest@59221b97]" started-at="2023-07-02T10:12:20Z" name="testCopy" finished-at="2023-07-02T10:12:20Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCopy -->
        <test-method signature="testFindMinMax()[pri:0, instance:jalview.math.MatrixTest@59221b97]" started-at="2023-07-02T10:12:20Z" name="testFindMinMax" finished-at="2023-07-02T10:12:20Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFindMinMax -->
        <test-method signature="testFindMinMax_timing()[pri:0, instance:jalview.math.MatrixTest@59221b97]" started-at="2023-07-02T10:12:20Z" name="testFindMinMax_timing" finished-at="2023-07-02T10:12:21Z" duration-ms="82" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFindMinMax_timing -->
        <test-method signature="testPostMultiply()[pri:0, instance:jalview.math.MatrixTest@59221b97]" started-at="2023-07-02T10:12:21Z" name="testPostMultiply" finished-at="2023-07-02T10:12:21Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testPostMultiply -->
        <test-method signature="testMultiply()[pri:0, instance:jalview.math.MatrixTest@59221b97]" started-at="2023-07-02T10:12:21Z" name="testMultiply" finished-at="2023-07-02T10:12:21Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMultiply -->
        <test-method signature="testPreMultiply()[pri:0, instance:jalview.math.MatrixTest@59221b97]" started-at="2023-07-02T10:12:21Z" name="testPreMultiply" finished-at="2023-07-02T10:12:21Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testPreMultiply -->
        <test-method signature="testPreMultiply_tooFewColumns()[pri:0, instance:jalview.math.MatrixTest@59221b97]" started-at="2023-07-02T10:12:21Z" name="testPreMultiply_tooFewColumns" finished-at="2023-07-02T10:12:21Z" duration-ms="1" status="PASS">
          <exception class="java.lang.IllegalArgumentException">
            <message>
              <![CDATA[Can't pre-multiply 2 rows by 3 columns]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IllegalArgumentException: Can't pre-multiply 2 rows by 3 columns
	at jalview.math.Matrix.preMultiply(Matrix.java:153)
	at jalview.math.MatrixTest.testPreMultiply_tooFewColumns(MatrixTest.java:110)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:648)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:834)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1142)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:124)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:771)
	at org.testng.TestRunner.run(TestRunner.java:621)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:357)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:352)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:310)
	at org.testng.SuiteRunner.run(SuiteRunner.java:259)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1176)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1101)
	at org.testng.TestNG.run(TestNG.java:1009)
	at org.gradle.api.internal.tasks.testing.testng.TestNGTestClassProcessor.runTests(TestNGTestClassProcessor.java:145)
	at org.gradle.api.internal.tasks.testing.testng.TestNGTestClassProcessor.stop(TestNGTestClassProcessor.java:92)
	at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.stop(SuiteTestClassProcessor.java:62)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:36)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24)
	at org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:33)
	at org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:94)
	at com.sun.proxy.$Proxy2.stop(Unknown Source)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker$3.run(TestWorker.java:193)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.executeAndMaintainThreadName(TestWorker.java:129)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.execute(TestWorker.java:100)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.execute(TestWorker.java:60)
	at org.gradle.process.internal.worker.child.ActionExecutionWorker.execute(ActionExecutionWorker.java:56)
	at org.gradle.process.internal.worker.child.SystemApplicationClassLoaderWorker.call(SystemApplicationClassLoaderWorker.java:113)
	at org.gradle.process.internal.worker.child.SystemApplicationClassLoaderWorker.call(SystemApplicationClassLoaderWorker.java:65)
	at worker.org.gradle.process.internal.worker.GradleWorkerMain.run(GradleWorkerMain.java:69)
	at worker.org.gradle.process.internal.worker.GradleWorkerMain.main(GradleWorkerMain.java:74)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalArgumentException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testPreMultiply_tooFewColumns -->
        <test-method signature="testReverseRange_swapMinMax()[pri:0, instance:jalview.math.MatrixTest@59221b97]" started-at="2023-07-02T10:12:21Z" name="testReverseRange_swapMinMax" finished-at="2023-07-02T10:12:21Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testReverseRange_swapMinMax -->
        <test-method signature="testReverseRange_maxToZero()[pri:0, instance:jalview.math.MatrixTest@59221b97]" started-at="2023-07-02T10:12:21Z" name="testReverseRange_maxToZero" finished-at="2023-07-02T10:12:21Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testReverseRange_maxToZero -->
        <test-method signature="testPreMultiply_tooManyColumns()[pri:0, instance:jalview.math.MatrixTest@59221b97]" started-at="2023-07-02T10:12:21Z" name="testPreMultiply_tooManyColumns" finished-at="2023-07-02T10:12:21Z" duration-ms="0" status="PASS">
          <exception class="java.lang.IllegalArgumentException">
            <message>
              <![CDATA[Can't pre-multiply 2 rows by 3 columns]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IllegalArgumentException: Can't pre-multiply 2 rows by 3 columns
	at jalview.math.Matrix.preMultiply(Matrix.java:153)
	at jalview.math.MatrixTest.testPreMultiply_tooManyColumns(MatrixTest.java:94)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:648)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:834)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1142)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:124)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:771)
	at org.testng.TestRunner.run(TestRunner.java:621)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:357)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:352)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:310)
	at org.testng.SuiteRunner.run(SuiteRunner.java:259)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1176)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1101)
	at org.testng.TestNG.run(TestNG.java:1009)
	at org.gradle.api.internal.tasks.testing.testng.TestNGTestClassProcessor.runTests(TestNGTestClassProcessor.java:145)
	at org.gradle.api.internal.tasks.testing.testng.TestNGTestClassProcessor.stop(TestNGTestClassProcessor.java:92)
	at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.stop(SuiteTestClassProcessor.java:62)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:36)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24)
	at org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:33)
	at org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:94)
	at com.sun.proxy.$Proxy2.stop(Unknown Source)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker$3.run(TestWorker.java:193)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.executeAndMaintainThreadName(TestWorker.java:129)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.execute(TestWorker.java:100)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.execute(TestWorker.java:60)
	at org.gradle.process.internal.worker.child.ActionExecutionWorker.execute(ActionExecutionWorker.java:56)
	at org.gradle.process.internal.worker.child.SystemApplicationClassLoaderWorker.call(SystemApplicationClassLoaderWorker.java:113)
	at org.gradle.process.internal.worker.child.SystemApplicationClassLoaderWorker.call(SystemApplicationClassLoaderWorker.java:65)
	at worker.org.gradle.process.internal.worker.GradleWorkerMain.run(GradleWorkerMain.java:69)
	at worker.org.gradle.process.internal.worker.GradleWorkerMain.main(GradleWorkerMain.java:74)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalArgumentException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testPreMultiply_tooManyColumns -->
        <test-method signature="testTred_reproducible()[pri:0, instance:jalview.math.MatrixTest@59221b97]" started-at="2023-07-02T10:12:21Z" name="testTred_reproducible" finished-at="2023-07-02T10:12:21Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testTred_reproducible -->
      </class> <!-- jalview.math.MatrixTest -->
      <class name="jalview.datamodel.HiddenColumnsTest">
        <test-method signature="testAdjustForHiddenColumns()[pri:0, instance:jalview.datamodel.HiddenColumnsTest@3bb9efbc]" started-at="2023-07-02T10:11:41Z" name="testAdjustForHiddenColumns" finished-at="2023-07-02T10:11:41Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAdjustForHiddenColumns -->
        <test-method signature="testBoundedIterator()[pri:0, instance:jalview.datamodel.HiddenColumnsTest@3bb9efbc]" started-at="2023-07-02T10:11:41Z" name="testBoundedIterator" finished-at="2023-07-02T10:11:41Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testBoundedIterator -->
        <test-method signature="testBoundedStartIterator()[pri:0, instance:jalview.datamodel.HiddenColumnsTest@3bb9efbc]" started-at="2023-07-02T10:11:41Z" name="testBoundedStartIterator" finished-at="2023-07-02T10:11:41Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testBoundedStartIterator -->
        <test-method signature="testCopyConstructor()[pri:0, instance:jalview.datamodel.HiddenColumnsTest@3bb9efbc]" started-at="2023-07-02T10:11:41Z" name="testCopyConstructor" finished-at="2023-07-02T10:11:41Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCopyConstructor -->
        <test-method signature="testEquals()[pri:0, instance:jalview.datamodel.HiddenColumnsTest@3bb9efbc]" started-at="2023-07-02T10:11:41Z" name="testEquals" finished-at="2023-07-02T10:11:41Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testEquals -->
        <test-method signature="testCopyConstructor2()[pri:0, instance:jalview.datamodel.HiddenColumnsTest@3bb9efbc]" started-at="2023-07-02T10:11:41Z" name="testCopyConstructor2" finished-at="2023-07-02T10:11:41Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCopyConstructor2 -->
        <test-method signature="testFindColumnPosition()[pri:0, instance:jalview.datamodel.HiddenColumnsTest@3bb9efbc]" started-at="2023-07-02T10:11:41Z" name="testFindColumnPosition" finished-at="2023-07-02T10:11:41Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFindColumnPosition -->
        <test-method signature="testGetRegionWithEdgeAtRes()[pri:0, instance:jalview.datamodel.HiddenColumnsTest@3bb9efbc]" started-at="2023-07-02T10:11:41Z" name="testGetRegionWithEdgeAtRes" finished-at="2023-07-02T10:11:41Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetRegionWithEdgeAtRes -->
        <test-method signature="testGetNextHiddenBoundary_Left()[pri:0, instance:jalview.datamodel.HiddenColumnsTest@3bb9efbc]" started-at="2023-07-02T10:11:41Z" name="testGetNextHiddenBoundary_Left" finished-at="2023-07-02T10:11:41Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetNextHiddenBoundary_Left -->
        <test-method signature="testGetNextHiddenBoundary_Right()[pri:0, instance:jalview.datamodel.HiddenColumnsTest@3bb9efbc]" started-at="2023-07-02T10:11:41Z" name="testGetNextHiddenBoundary_Right" finished-at="2023-07-02T10:11:41Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetNextHiddenBoundary_Right -->
        <test-method signature="testGetSize()[pri:0, instance:jalview.datamodel.HiddenColumnsTest@3bb9efbc]" started-at="2023-07-02T10:11:41Z" name="testGetSize" finished-at="2023-07-02T10:11:41Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetSize -->
        <test-method signature="testGetVisibleColsIterator()[pri:0, instance:jalview.datamodel.HiddenColumnsTest@3bb9efbc]" started-at="2023-07-02T10:11:41Z" name="testGetVisibleColsIterator" finished-at="2023-07-02T10:11:41Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetVisibleColsIterator -->
        <test-method signature="testGetVisibleStartAndEndIndex()[pri:0, instance:jalview.datamodel.HiddenColumnsTest@3bb9efbc]" started-at="2023-07-02T10:11:41Z" name="testGetVisibleStartAndEndIndex" finished-at="2023-07-02T10:11:41Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetVisibleStartAndEndIndex -->
        <test-method signature="testHasHiddenColumns()[pri:0, instance:jalview.datamodel.HiddenColumnsTest@3bb9efbc]" started-at="2023-07-02T10:11:41Z" name="testHasHiddenColumns" finished-at="2023-07-02T10:11:41Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testHasHiddenColumns -->
        <test-method signature="testHasManyHiddenColumns()[pri:0, instance:jalview.datamodel.HiddenColumnsTest@3bb9efbc]" started-at="2023-07-02T10:11:41Z" name="testHasManyHiddenColumns" finished-at="2023-07-02T10:11:41Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testHasManyHiddenColumns -->
        <test-method signature="testHashCode()[pri:0, instance:jalview.datamodel.HiddenColumnsTest@3bb9efbc]" started-at="2023-07-02T10:11:41Z" name="testHashCode" finished-at="2023-07-02T10:11:41Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testHashCode -->
        <test-method signature="testHideColumns()[pri:0, instance:jalview.datamodel.HiddenColumnsTest@3bb9efbc]" started-at="2023-07-02T10:11:41Z" name="testHideColumns" finished-at="2023-07-02T10:11:41Z" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testHideColumns -->
        <test-method signature="testHideColumns_BitSet()[pri:0, instance:jalview.datamodel.HiddenColumnsTest@3bb9efbc]" started-at="2023-07-02T10:11:41Z" name="testHideColumns_BitSet" finished-at="2023-07-02T10:11:41Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testHideColumns_BitSet -->
        <test-method signature="testHideColumns_BitSet_range()[pri:0, instance:jalview.datamodel.HiddenColumnsTest@3bb9efbc]" started-at="2023-07-02T10:11:41Z" name="testHideColumns_BitSet_range" finished-at="2023-07-02T10:11:41Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testHideColumns_BitSet_range -->
        <test-method signature="testHideColumns_subsumingHidden()[pri:0, instance:jalview.datamodel.HiddenColumnsTest@3bb9efbc]" started-at="2023-07-02T10:11:41Z" name="testHideColumns_subsumingHidden" finished-at="2023-07-02T10:11:41Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testHideColumns_subsumingHidden -->
        <test-method signature="testHideInsertionsFor()[pri:0, instance:jalview.datamodel.HiddenColumnsTest@3bb9efbc]" started-at="2023-07-02T10:11:41Z" name="testHideInsertionsFor" finished-at="2023-07-02T10:11:41Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testHideInsertionsFor -->
        <test-method signature="testIsVisible()[pri:0, instance:jalview.datamodel.HiddenColumnsTest@3bb9efbc]" started-at="2023-07-02T10:11:41Z" name="testIsVisible" finished-at="2023-07-02T10:11:41Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testIsVisible -->
        <test-method signature="testIterator()[pri:0, instance:jalview.datamodel.HiddenColumnsTest@3bb9efbc]" started-at="2023-07-02T10:11:41Z" name="testIterator" finished-at="2023-07-02T10:11:41Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testIterator -->
        <test-method signature="testOffsetByVisibleColumns()[pri:0, instance:jalview.datamodel.HiddenColumnsTest@3bb9efbc]" started-at="2023-07-02T10:11:41Z" name="testOffsetByVisibleColumns" finished-at="2023-07-02T10:11:41Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testOffsetByVisibleColumns -->
        <test-method signature="testRegionsToString()[pri:0, instance:jalview.datamodel.HiddenColumnsTest@3bb9efbc]" started-at="2023-07-02T10:11:41Z" name="testRegionsToString" finished-at="2023-07-02T10:11:41Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRegionsToString -->
        <test-method signature="testRevealAllHiddenColumns()[pri:0, instance:jalview.datamodel.HiddenColumnsTest@3bb9efbc]" started-at="2023-07-02T10:11:41Z" name="testRevealAllHiddenColumns" finished-at="2023-07-02T10:11:41Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRevealAllHiddenColumns -->
        <test-method signature="testRevealHiddenColumns()[pri:0, instance:jalview.datamodel.HiddenColumnsTest@3bb9efbc]" started-at="2023-07-02T10:11:41Z" name="testRevealHiddenColumns" finished-at="2023-07-02T10:11:41Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRevealHiddenColumns -->
        <test-method signature="testVisibleBlocksVisBoundsIterator()[pri:0, instance:jalview.datamodel.HiddenColumnsTest@3bb9efbc]" started-at="2023-07-02T10:11:41Z" name="testVisibleBlocksVisBoundsIterator" finished-at="2023-07-02T10:11:41Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testVisibleBlocksVisBoundsIterator -->
        <test-method signature="testVisibleContigsIterator()[pri:0, instance:jalview.datamodel.HiddenColumnsTest@3bb9efbc]" started-at="2023-07-02T10:11:41Z" name="testVisibleContigsIterator" finished-at="2023-07-02T10:11:41Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testVisibleContigsIterator -->
      </class> <!-- jalview.datamodel.HiddenColumnsTest -->
      <class name="jalview.datamodel.SequenceTest">
        <test-method is-config="true" signature="setUpJvOptionPane()[pri:0, instance:jalview.datamodel.SequenceTest@36dce7ed]" started-at="2023-07-02T10:12:10Z" name="setUpJvOptionPane" finished-at="2023-07-02T10:12:10Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpJvOptionPane -->
        <test-method signature="testAddAlignmentAnnotation()[pri:0, instance:jalview.datamodel.SequenceTest@36dce7ed]" started-at="2023-07-02T10:12:10Z" name="testAddAlignmentAnnotation" finished-at="2023-07-02T10:12:10Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAddAlignmentAnnotation -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:jalview.datamodel.SequenceTest@36dce7ed]" started-at="2023-07-02T10:12:10Z" name="setUp" finished-at="2023-07-02T10:12:10Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:jalview.datamodel.SequenceTest@36dce7ed]" started-at="2023-07-02T10:12:10Z" name="setUp" finished-at="2023-07-02T10:12:10Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:jalview.datamodel.SequenceTest@36dce7ed]" started-at="2023-07-02T10:12:10Z" name="setUp" finished-at="2023-07-02T10:12:10Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="testAddPDBId()[pri:0, instance:jalview.datamodel.SequenceTest@36dce7ed]" started-at="2023-07-02T10:12:10Z" name="testAddPDBId" finished-at="2023-07-02T10:12:10Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAddPDBId -->
        <test-method signature="testAddDBRef()[pri:0, instance:jalview.datamodel.SequenceTest@36dce7ed]" started-at="2023-07-02T10:12:10Z" name="testAddDBRef" finished-at="2023-07-02T10:12:10Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAddDBRef -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:jalview.datamodel.SequenceTest@36dce7ed]" started-at="2023-07-02T10:12:10Z" name="setUp" finished-at="2023-07-02T10:12:10Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="testAddSequenceFeatures()[pri:0, instance:jalview.datamodel.SequenceTest@36dce7ed]" started-at="2023-07-02T10:12:10Z" name="testAddSequenceFeatures" finished-at="2023-07-02T10:12:10Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAddSequenceFeatures -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:jalview.datamodel.SequenceTest@36dce7ed]" started-at="2023-07-02T10:12:10Z" name="setUp" finished-at="2023-07-02T10:12:10Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:jalview.datamodel.SequenceTest@36dce7ed]" started-at="2023-07-02T10:12:10Z" name="setUp" finished-at="2023-07-02T10:12:10Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:jalview.datamodel.SequenceTest@36dce7ed]" started-at="2023-07-02T10:12:10Z" name="setUp" finished-at="2023-07-02T10:12:10Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="testCopyConstructor_noDataset()[pri:0, instance:jalview.datamodel.SequenceTest@36dce7ed]" started-at="2023-07-02T10:12:10Z" name="testCopyConstructor_noDataset" finished-at="2023-07-02T10:12:10Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCopyConstructor_noDataset -->
        <test-method signature="testCheckValidRange()[pri:0, instance:jalview.datamodel.SequenceTest@36dce7ed]" started-at="2023-07-02T10:12:10Z" name="testCheckValidRange" finished-at="2023-07-02T10:12:10Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCheckValidRange -->
        <test-method signature="testDeleteChars_withGaps()[pri:0, instance:jalview.datamodel.SequenceTest@36dce7ed]" started-at="2023-07-02T10:12:10Z" name="testDeleteChars_withGaps" finished-at="2023-07-02T10:12:10Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testDeleteChars_withGaps -->
        <test-method signature="testDeleteChars_withDbRefsAndFeatures()[pri:0, instance:jalview.datamodel.SequenceTest@36dce7ed]" started-at="2023-07-02T10:12:10Z" name="testDeleteChars_withDbRefsAndFeatures" finished-at="2023-07-02T10:12:10Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testDeleteChars_withDbRefsAndFeatures -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:jalview.datamodel.SequenceTest@36dce7ed]" started-at="2023-07-02T10:12:10Z" name="setUp" finished-at="2023-07-02T10:12:10Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:jalview.datamodel.SequenceTest@36dce7ed]" started-at="2023-07-02T10:12:10Z" name="setUp" finished-at="2023-07-02T10:12:10Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:jalview.datamodel.SequenceTest@36dce7ed]" started-at="2023-07-02T10:12:10Z" name="setUp" finished-at="2023-07-02T10:12:10Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:jalview.datamodel.SequenceTest@36dce7ed]" started-at="2023-07-02T10:12:10Z" name="setUp" finished-at="2023-07-02T10:12:10Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="testCopyConstructor_withDataset()[pri:0, instance:jalview.datamodel.SequenceTest@36dce7ed]" started-at="2023-07-02T10:12:10Z" name="testCopyConstructor_withDataset" finished-at="2023-07-02T10:12:10Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCopyConstructor_withDataset -->
        <test-method signature="testDeleteChars()[pri:0, instance:jalview.datamodel.SequenceTest@36dce7ed]" started-at="2023-07-02T10:12:10Z" name="testDeleteChars" finished-at="2023-07-02T10:12:10Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testDeleteChars -->
        <test-method signature="testCreateDatasetSequence()[pri:0, instance:jalview.datamodel.SequenceTest@36dce7ed]" started-at="2023-07-02T10:12:10Z" name="testCreateDatasetSequence" finished-at="2023-07-02T10:12:10Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCreateDatasetSequence -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:jalview.datamodel.SequenceTest@36dce7ed]" started-at="2023-07-02T10:12:10Z" name="setUp" finished-at="2023-07-02T10:12:10Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:jalview.datamodel.SequenceTest@36dce7ed]" started-at="2023-07-02T10:12:10Z" name="setUp" finished-at="2023-07-02T10:12:10Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="testDeriveSequence_existingDataset()[pri:0, instance:jalview.datamodel.SequenceTest@36dce7ed]" started-at="2023-07-02T10:12:10Z" name="testDeriveSequence_existingDataset" finished-at="2023-07-02T10:12:10Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testDeriveSequence_existingDataset -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:jalview.datamodel.SequenceTest@36dce7ed]" started-at="2023-07-02T10:12:10Z" name="setUp" finished-at="2023-07-02T10:12:10Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:jalview.datamodel.SequenceTest@36dce7ed]" started-at="2023-07-02T10:12:10Z" name="setUp" finished-at="2023-07-02T10:12:10Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:jalview.datamodel.SequenceTest@36dce7ed]" started-at="2023-07-02T10:12:10Z" name="setUp" finished-at="2023-07-02T10:12:10Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="testDeriveSequence_noDatasetUngapped()[pri:0, instance:jalview.datamodel.SequenceTest@36dce7ed]" started-at="2023-07-02T10:12:10Z" name="testDeriveSequence_noDatasetUngapped" finished-at="2023-07-02T10:12:10Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testDeriveSequence_noDatasetUngapped -->
        <test-method signature="testFindFeatures()[pri:0, instance:jalview.datamodel.SequenceTest@36dce7ed]" started-at="2023-07-02T10:12:10Z" name="testFindFeatures" finished-at="2023-07-02T10:12:10Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFindFeatures -->
        <test-method signature="testDeriveSequence_noDatasetGapped()[pri:0, instance:jalview.datamodel.SequenceTest@36dce7ed]" started-at="2023-07-02T10:12:10Z" name="testDeriveSequence_noDatasetGapped" finished-at="2023-07-02T10:12:10Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testDeriveSequence_noDatasetGapped -->
        <test-method signature="testFindPosition()[pri:0, instance:jalview.datamodel.SequenceTest@36dce7ed]" started-at="2023-07-02T10:12:10Z" name="testFindPosition" finished-at="2023-07-02T10:12:10Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFindPosition -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:jalview.datamodel.SequenceTest@36dce7ed]" started-at="2023-07-02T10:12:10Z" name="setUp" finished-at="2023-07-02T10:12:10Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="testFindIndex()[pri:0, instance:jalview.datamodel.SequenceTest@36dce7ed]" started-at="2023-07-02T10:12:10Z" name="testFindIndex" finished-at="2023-07-02T10:12:10Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFindIndex -->
        <test-method signature="testFindIndex_withCursor()[pri:0, instance:jalview.datamodel.SequenceTest@36dce7ed]" started-at="2023-07-02T10:12:10Z" name="testFindIndex_withCursor" finished-at="2023-07-02T10:12:10Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFindIndex_withCursor -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:jalview.datamodel.SequenceTest@36dce7ed]" started-at="2023-07-02T10:12:10Z" name="setUp" finished-at="2023-07-02T10:12:10Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="testFindPositionMap()[pri:0, instance:jalview.datamodel.SequenceTest@36dce7ed]" started-at="2023-07-02T10:12:10Z" name="testFindPositionMap" finished-at="2023-07-02T10:12:10Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFindPositionMap -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:jalview.datamodel.SequenceTest@36dce7ed]" started-at="2023-07-02T10:12:10Z" name="setUp" finished-at="2023-07-02T10:12:10Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:jalview.datamodel.SequenceTest@36dce7ed]" started-at="2023-07-02T10:12:10Z" name="setUp" finished-at="2023-07-02T10:12:10Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="testFindPosition_withCursor()[pri:0, instance:jalview.datamodel.SequenceTest@36dce7ed]" started-at="2023-07-02T10:12:10Z" name="testFindPosition_withCursor" finished-at="2023-07-02T10:12:10Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFindPosition_withCursor -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:jalview.datamodel.SequenceTest@36dce7ed]" started-at="2023-07-02T10:12:10Z" name="setUp" finished-at="2023-07-02T10:12:10Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:jalview.datamodel.SequenceTest@36dce7ed]" started-at="2023-07-02T10:12:10Z" name="setUp" finished-at="2023-07-02T10:12:10Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="testFindPositions()[pri:0, instance:jalview.datamodel.SequenceTest@36dce7ed]" started-at="2023-07-02T10:12:10Z" name="testFindPositions" finished-at="2023-07-02T10:12:10Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFindPositions -->
        <test-method signature="testFindPosition_withCursorAndEdits()[pri:0, instance:jalview.datamodel.SequenceTest@36dce7ed]" started-at="2023-07-02T10:12:10Z" name="testFindPosition_withCursorAndEdits" finished-at="2023-07-02T10:12:10Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFindPosition_withCursorAndEdits -->
        <test-method signature="testGapMap()[pri:0, instance:jalview.datamodel.SequenceTest@36dce7ed]" started-at="2023-07-02T10:12:10Z" name="testGapMap" finished-at="2023-07-02T10:12:10Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGapMap -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:jalview.datamodel.SequenceTest@36dce7ed]" started-at="2023-07-02T10:12:10Z" name="setUp" finished-at="2023-07-02T10:12:10Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:jalview.datamodel.SequenceTest@36dce7ed]" started-at="2023-07-02T10:12:10Z" name="setUp" finished-at="2023-07-02T10:12:10Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="testGapBitset()[pri:0, instance:jalview.datamodel.SequenceTest@36dce7ed]" started-at="2023-07-02T10:12:10Z" name="testGapBitset" finished-at="2023-07-02T10:12:10Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGapBitset -->
        <test-method signature="testGetAlignmentAnnotations_forCalcIdLabelAndDescription()[pri:0, instance:jalview.datamodel.SequenceTest@36dce7ed]" started-at="2023-07-02T10:12:10Z" name="testGetAlignmentAnnotations_forCalcIdLabelAndDescription" finished-at="2023-07-02T10:12:10Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetAlignmentAnnotations_forCalcIdLabelAndDescription -->
        <test-method signature="testGetAlignmentAnnotations_forCalcIdAndLabel()[pri:0, instance:jalview.datamodel.SequenceTest@36dce7ed]" started-at="2023-07-02T10:12:10Z" name="testGetAlignmentAnnotations_forCalcIdAndLabel" finished-at="2023-07-02T10:12:10Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetAlignmentAnnotations_forCalcIdAndLabel -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:jalview.datamodel.SequenceTest@36dce7ed]" started-at="2023-07-02T10:12:10Z" name="setUp" finished-at="2023-07-02T10:12:10Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:jalview.datamodel.SequenceTest@36dce7ed]" started-at="2023-07-02T10:12:10Z" name="setUp" finished-at="2023-07-02T10:12:10Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="testGetAnnotation()[pri:0, instance:jalview.datamodel.SequenceTest@36dce7ed]" started-at="2023-07-02T10:12:10Z" name="testGetAnnotation" finished-at="2023-07-02T10:12:10Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetAnnotation -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:jalview.datamodel.SequenceTest@36dce7ed]" started-at="2023-07-02T10:12:10Z" name="setUp" finished-at="2023-07-02T10:12:10Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:jalview.datamodel.SequenceTest@36dce7ed]" started-at="2023-07-02T10:12:10Z" name="setUp" finished-at="2023-07-02T10:12:10Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="testGetAnnotation_forLabel()[pri:0, instance:jalview.datamodel.SequenceTest@36dce7ed]" started-at="2023-07-02T10:12:10Z" name="testGetAnnotation_forLabel" finished-at="2023-07-02T10:12:10Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetAnnotation_forLabel -->
        <test-method signature="testGetCharAt()[pri:0, instance:jalview.datamodel.SequenceTest@36dce7ed]" started-at="2023-07-02T10:12:10Z" name="testGetCharAt" finished-at="2023-07-02T10:12:10Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetCharAt -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:jalview.datamodel.SequenceTest@36dce7ed]" started-at="2023-07-02T10:12:10Z" name="setUp" finished-at="2023-07-02T10:12:10Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:jalview.datamodel.SequenceTest@36dce7ed]" started-at="2023-07-02T10:12:10Z" name="setUp" finished-at="2023-07-02T10:12:10Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="testGetPrimaryDBRefs_peptide()[pri:0, instance:jalview.datamodel.SequenceTest@36dce7ed]" started-at="2023-07-02T10:12:10Z" name="testGetPrimaryDBRefs_peptide" finished-at="2023-07-02T10:12:10Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetPrimaryDBRefs_peptide -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:jalview.datamodel.SequenceTest@36dce7ed]" started-at="2023-07-02T10:12:10Z" name="setUp" finished-at="2023-07-02T10:12:10Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="testGetPrimaryDBRefs_nucleotide()[pri:0, instance:jalview.datamodel.SequenceTest@36dce7ed]" started-at="2023-07-02T10:12:10Z" name="testGetPrimaryDBRefs_nucleotide" finished-at="2023-07-02T10:12:10Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetPrimaryDBRefs_nucleotide -->
        <test-method signature="testGetStartGetEnd()[pri:0, instance:jalview.datamodel.SequenceTest@36dce7ed]" started-at="2023-07-02T10:12:10Z" name="testGetStartGetEnd" finished-at="2023-07-02T10:12:10Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetStartGetEnd -->
        <test-method signature="testGetSubsequence()[pri:0, instance:jalview.datamodel.SequenceTest@36dce7ed]" started-at="2023-07-02T10:12:10Z" name="testGetSubsequence" finished-at="2023-07-02T10:12:10Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetSubsequence -->
        <test-method signature="testGetSequence()[pri:0, instance:jalview.datamodel.SequenceTest@36dce7ed]" started-at="2023-07-02T10:12:10Z" name="testGetSequence" finished-at="2023-07-02T10:12:10Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetSequence -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:jalview.datamodel.SequenceTest@36dce7ed]" started-at="2023-07-02T10:12:10Z" name="setUp" finished-at="2023-07-02T10:12:10Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:jalview.datamodel.SequenceTest@36dce7ed]" started-at="2023-07-02T10:12:10Z" name="setUp" finished-at="2023-07-02T10:12:10Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:jalview.datamodel.SequenceTest@36dce7ed]" started-at="2023-07-02T10:12:10Z" name="setUp" finished-at="2023-07-02T10:12:10Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:jalview.datamodel.SequenceTest@36dce7ed]" started-at="2023-07-02T10:12:10Z" name="setUp" finished-at="2023-07-02T10:12:10Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="testGetSequenceFeatures()[pri:0, instance:jalview.datamodel.SequenceTest@36dce7ed]" started-at="2023-07-02T10:12:10Z" name="testGetSequenceFeatures" finished-at="2023-07-02T10:12:10Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetSequenceFeatures -->
        <test-method signature="testLocateVisibleStartofSequence()[pri:0, instance:jalview.datamodel.SequenceTest@36dce7ed]" started-at="2023-07-02T10:12:10Z" name="testLocateVisibleStartofSequence" finished-at="2023-07-02T10:12:10Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testLocateVisibleStartofSequence -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:jalview.datamodel.SequenceTest@36dce7ed]" started-at="2023-07-02T10:12:10Z" name="setUp" finished-at="2023-07-02T10:12:10Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:jalview.datamodel.SequenceTest@36dce7ed]" started-at="2023-07-02T10:12:10Z" name="setUp" finished-at="2023-07-02T10:12:10Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="testIsProtein()[pri:0, instance:jalview.datamodel.SequenceTest@36dce7ed]" started-at="2023-07-02T10:12:10Z" name="testIsProtein" finished-at="2023-07-02T10:12:10Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testIsProtein -->
        <test-method signature="testIsProteinWithXorNAmbiguityCodes()[pri:0, instance:jalview.datamodel.SequenceTest@36dce7ed]" started-at="2023-07-02T10:12:10Z" name="testIsProteinWithXorNAmbiguityCodes" finished-at="2023-07-02T10:12:10Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testIsProteinWithXorNAmbiguityCodes -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:jalview.datamodel.SequenceTest@36dce7ed]" started-at="2023-07-02T10:12:10Z" name="setUp" finished-at="2023-07-02T10:12:10Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:jalview.datamodel.SequenceTest@36dce7ed]" started-at="2023-07-02T10:12:10Z" name="setUp" finished-at="2023-07-02T10:12:10Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="testInsertCharAt()[pri:0, instance:jalview.datamodel.SequenceTest@36dce7ed]" started-at="2023-07-02T10:12:10Z" name="testInsertCharAt" finished-at="2023-07-02T10:12:10Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testInsertCharAt -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:jalview.datamodel.SequenceTest@36dce7ed]" started-at="2023-07-02T10:12:10Z" name="setUp" finished-at="2023-07-02T10:12:10Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="testInsertGapsAndGapmaps()[pri:0, instance:jalview.datamodel.SequenceTest@36dce7ed]" started-at="2023-07-02T10:12:10Z" name="testInsertGapsAndGapmaps" finished-at="2023-07-02T10:12:10Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testInsertGapsAndGapmaps -->
        <test-method signature="testReplace()[pri:0, instance:jalview.datamodel.SequenceTest@36dce7ed]" started-at="2023-07-02T10:12:10Z" name="testReplace" finished-at="2023-07-02T10:12:10Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testReplace -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:jalview.datamodel.SequenceTest@36dce7ed]" started-at="2023-07-02T10:12:10Z" name="setUp" finished-at="2023-07-02T10:12:10Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:jalview.datamodel.SequenceTest@36dce7ed]" started-at="2023-07-02T10:12:10Z" name="setUp" finished-at="2023-07-02T10:12:10Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="testSetDatasetSequence_toSelf()[pri:0, instance:jalview.datamodel.SequenceTest@36dce7ed]" started-at="2023-07-02T10:12:10Z" name="testSetDatasetSequence_toSelf" finished-at="2023-07-02T10:12:10Z" duration-ms="0" status="PASS">
          <exception class="java.lang.IllegalArgumentException">
            <message>
              <![CDATA[Implementation Error: self reference passed to SequenceI.setDatasetSequence]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IllegalArgumentException: Implementation Error: self reference passed to SequenceI.setDatasetSequence
	at jalview.datamodel.Sequence.setDatasetSequence(Sequence.java:1463)
	at jalview.datamodel.SequenceTest.testSetDatasetSequence_toSelf(SequenceTest.java:1516)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:648)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:834)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1142)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:124)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:771)
	at org.testng.TestRunner.run(TestRunner.java:621)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:357)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:352)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:310)
	at org.testng.SuiteRunner.run(SuiteRunner.java:259)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1176)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1101)
	at org.testng.TestNG.run(TestNG.java:1009)
	at org.gradle.api.internal.tasks.testing.testng.TestNGTestClassProcessor.runTests(TestNGTestClassProcessor.java:145)
	at org.gradle.api.internal.tasks.testing.testng.TestNGTestClassProcessor.stop(TestNGTestClassProcessor.java:92)
	at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.stop(SuiteTestClassProcessor.java:62)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:36)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24)
	at org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:33)
	at org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:94)
	at com.sun.proxy.$Proxy2.stop(Unknown Source)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker$3.run(TestWorker.java:193)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.executeAndMaintainThreadName(TestWorker.java:129)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.execute(TestWorker.java:100)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.execute(TestWorker.java:60)
	at org.gradle.process.internal.worker.child.ActionExecutionWorker.execute(ActionExecutionWorker.java:56)
	at org.gradle.process.internal.worker.child.SystemApplicationClassLoaderWorker.call(SystemApplicationClassLoaderWorker.java:113)
	at org.gradle.process.internal.worker.child.SystemApplicationClassLoaderWorker.call(SystemApplicationClassLoaderWorker.java:65)
	at worker.org.gradle.process.internal.worker.GradleWorkerMain.run(GradleWorkerMain.java:69)
	at worker.org.gradle.process.internal.worker.GradleWorkerMain.main(GradleWorkerMain.java:74)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalArgumentException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSetDatasetSequence_toSelf -->
        <test-method signature="testSetName()[pri:0, instance:jalview.datamodel.SequenceTest@36dce7ed]" started-at="2023-07-02T10:12:10Z" name="testSetName" finished-at="2023-07-02T10:12:10Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSetName -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:jalview.datamodel.SequenceTest@36dce7ed]" started-at="2023-07-02T10:12:10Z" name="setUp" finished-at="2023-07-02T10:12:10Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:jalview.datamodel.SequenceTest@36dce7ed]" started-at="2023-07-02T10:12:10Z" name="setUp" finished-at="2023-07-02T10:12:10Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="testSetDatasetSequence_cascading()[pri:0, instance:jalview.datamodel.SequenceTest@36dce7ed]" started-at="2023-07-02T10:12:10Z" name="testSetDatasetSequence_cascading" finished-at="2023-07-02T10:12:10Z" duration-ms="0" status="PASS">
          <exception class="java.lang.IllegalArgumentException">
            <message>
              <![CDATA[Implementation error: cascading dataset sequences are not allowed.]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IllegalArgumentException: Implementation error: cascading dataset sequences are not allowed.
	at jalview.datamodel.Sequence.setDatasetSequence(Sequence.java:1468)
	at jalview.datamodel.SequenceTest.testSetDatasetSequence_cascading(SequenceTest.java:1528)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:648)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:834)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1142)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:124)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:771)
	at org.testng.TestRunner.run(TestRunner.java:621)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:357)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:352)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:310)
	at org.testng.SuiteRunner.run(SuiteRunner.java:259)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1176)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1101)
	at org.testng.TestNG.run(TestNG.java:1009)
	at org.gradle.api.internal.tasks.testing.testng.TestNGTestClassProcessor.runTests(TestNGTestClassProcessor.java:145)
	at org.gradle.api.internal.tasks.testing.testng.TestNGTestClassProcessor.stop(TestNGTestClassProcessor.java:92)
	at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.stop(SuiteTestClassProcessor.java:62)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:36)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24)
	at org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:33)
	at org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:94)
	at com.sun.proxy.$Proxy2.stop(Unknown Source)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker$3.run(TestWorker.java:193)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.executeAndMaintainThreadName(TestWorker.java:129)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.execute(TestWorker.java:100)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.execute(TestWorker.java:60)
	at org.gradle.process.internal.worker.child.ActionExecutionWorker.execute(ActionExecutionWorker.java:56)
	at org.gradle.process.internal.worker.child.SystemApplicationClassLoaderWorker.call(SystemApplicationClassLoaderWorker.java:113)
	at org.gradle.process.internal.worker.child.SystemApplicationClassLoaderWorker.call(SystemApplicationClassLoaderWorker.java:65)
	at worker.org.gradle.process.internal.worker.GradleWorkerMain.run(GradleWorkerMain.java:69)
	at worker.org.gradle.process.internal.worker.GradleWorkerMain.main(GradleWorkerMain.java:74)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalArgumentException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSetDatasetSequence_cascading -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:jalview.datamodel.SequenceTest@36dce7ed]" started-at="2023-07-02T10:12:10Z" name="setUp" finished-at="2023-07-02T10:12:10Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:jalview.datamodel.SequenceTest@36dce7ed]" started-at="2023-07-02T10:12:10Z" name="setUp" finished-at="2023-07-02T10:12:10Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="testTransferAnnotation()[pri:0, instance:jalview.datamodel.SequenceTest@36dce7ed]" started-at="2023-07-02T10:12:10Z" name="testTransferAnnotation" finished-at="2023-07-02T10:12:10Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testTransferAnnotation -->
        <test-method signature="testUpdatePDBIds()[pri:0, instance:jalview.datamodel.SequenceTest@36dce7ed]" started-at="2023-07-02T10:12:10Z" name="testUpdatePDBIds" finished-at="2023-07-02T10:12:10Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testUpdatePDBIds -->
      </class> <!-- jalview.datamodel.SequenceTest -->
      <class name="jalview.schemes.TurnColourSchemeTest">
        <test-method signature="testFindColour()[pri:0, instance:jalview.schemes.TurnColourSchemeTest@36b6964d]" started-at="2023-07-02T10:12:20Z" name="testFindColour" finished-at="2023-07-02T10:12:20Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFindColour -->
      </class> <!-- jalview.schemes.TurnColourSchemeTest -->
      <class name="jalview.schemes.AnnotationColourGradientTest">
        <test-method is-config="true" signature="setUp()[pri:0, instance:jalview.schemes.AnnotationColourGradientTest@3b718392]" started-at="2023-07-02T10:11:56Z" name="setUp" finished-at="2023-07-02T10:11:56Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="testFindColour_aboveThreshold()[pri:0, instance:jalview.schemes.AnnotationColourGradientTest@3b718392]" started-at="2023-07-02T10:11:56Z" name="testFindColour_aboveThreshold" finished-at="2023-07-02T10:11:56Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFindColour_aboveThreshold -->
        <test-method signature="testFindColour_belowThreshold()[pri:0, instance:jalview.schemes.AnnotationColourGradientTest@3b718392]" started-at="2023-07-02T10:11:56Z" name="testFindColour_belowThreshold" finished-at="2023-07-02T10:11:56Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFindColour_belowThreshold -->
        <test-method signature="testFindColour_originalColours()[pri:0, instance:jalview.schemes.AnnotationColourGradientTest@3b718392]" started-at="2023-07-02T10:11:56Z" name="testFindColour_originalColours" finished-at="2023-07-02T10:11:56Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFindColour_originalColours -->
        <test-method signature="testShadeCalculation_aboveThreshold()[pri:0, instance:jalview.schemes.AnnotationColourGradientTest@3b718392]" started-at="2023-07-02T10:11:56Z" name="testShadeCalculation_aboveThreshold" finished-at="2023-07-02T10:11:56Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testShadeCalculation_aboveThreshold -->
        <test-method signature="testFindColour_noThreshold()[pri:0, instance:jalview.schemes.AnnotationColourGradientTest@3b718392]" started-at="2023-07-02T10:11:56Z" name="testFindColour_noThreshold" finished-at="2023-07-02T10:11:56Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFindColour_noThreshold -->
        <test-method signature="testShadeCalculation_noThreshold()[pri:0, instance:jalview.schemes.AnnotationColourGradientTest@3b718392]" started-at="2023-07-02T10:11:56Z" name="testShadeCalculation_noThreshold" finished-at="2023-07-02T10:11:56Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testShadeCalculation_noThreshold -->
        <test-method signature="testShadeCalculation_belowThreshold()[pri:0, instance:jalview.schemes.AnnotationColourGradientTest@3b718392]" started-at="2023-07-02T10:11:56Z" name="testShadeCalculation_belowThreshold" finished-at="2023-07-02T10:11:56Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testShadeCalculation_belowThreshold -->
      </class> <!-- jalview.schemes.AnnotationColourGradientTest -->
      <class name="jalview.datamodel.AlignedCodonTest">
        <test-method signature="testToString()[pri:0, instance:jalview.datamodel.AlignedCodonTest@51b01960]" started-at="2023-07-02T10:13:43Z" name="testToString" finished-at="2023-07-02T10:13:43Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testToString -->
        <test-method signature="testEquals()[pri:0, instance:jalview.datamodel.AlignedCodonTest@51b01960]" started-at="2023-07-02T10:13:43Z" name="testEquals" finished-at="2023-07-02T10:13:43Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testEquals -->
        <test-method is-config="true" signature="setUpJvOptionPane()[pri:0, instance:jalview.datamodel.AlignedCodonTest@51b01960]" started-at="2023-07-02T10:13:43Z" name="setUpJvOptionPane" finished-at="2023-07-02T10:13:43Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpJvOptionPane -->
      </class> <!-- jalview.datamodel.AlignedCodonTest -->
      <class name="jalview.io.GenBankFileTest">
        <test-method is-config="true" signature="setUp()[pri:0, instance:jalview.io.GenBankFileTest@5aa360ea]" started-at="2023-07-02T10:11:41Z" name="setUp" finished-at="2023-07-02T10:11:41Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="testParse()[pri:0, instance:jalview.io.GenBankFileTest@5aa360ea]" started-at="2023-07-02T10:11:41Z" name="testParse" finished-at="2023-07-02T10:11:41Z" duration-ms="12" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testParse -->
      </class> <!-- jalview.io.GenBankFileTest -->
      <class name="jalview.fts.threedbeacons.TDBeaconsFTSRestClientTest">
        <test-method is-config="true" signature="setUpJvOptionPane()[pri:0, instance:jalview.fts.threedbeacons.TDBeaconsFTSRestClientTest@3a71c100]" started-at="2023-07-02T10:11:53Z" name="setUpJvOptionPane" finished-at="2023-07-02T10:11:53Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpJvOptionPane -->
        <test-method signature="coverageForEqualsAndHashFunction()[pri:0, instance:jalview.fts.threedbeacons.TDBeaconsFTSRestClientTest@3a71c100]" started-at="2023-07-02T10:11:53Z" name="coverageForEqualsAndHashFunction" finished-at="2023-07-02T10:11:53Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- coverageForEqualsAndHashFunction -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:jalview.fts.threedbeacons.TDBeaconsFTSRestClientTest@3a71c100]" started-at="2023-07-02T10:11:53Z" name="setUp" finished-at="2023-07-02T10:11:53Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:jalview.fts.threedbeacons.TDBeaconsFTSRestClientTest@3a71c100]" started-at="2023-07-02T10:11:53Z" name="tearDown" finished-at="2023-07-02T10:11:53Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method signature="getAllFTSDataColumns()[pri:0, instance:jalview.fts.threedbeacons.TDBeaconsFTSRestClientTest@3a71c100]" started-at="2023-07-02T10:11:53Z" name="getAllFTSDataColumns" finished-at="2023-07-02T10:11:53Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getAllFTSDataColumns -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:jalview.fts.threedbeacons.TDBeaconsFTSRestClientTest@3a71c100]" started-at="2023-07-02T10:11:53Z" name="setUp" finished-at="2023-07-02T10:11:53Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:jalview.fts.threedbeacons.TDBeaconsFTSRestClientTest@3a71c100]" started-at="2023-07-02T10:11:53Z" name="tearDown" finished-at="2023-07-02T10:11:53Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:jalview.fts.threedbeacons.TDBeaconsFTSRestClientTest@3a71c100]" started-at="2023-07-02T10:11:53Z" name="setUp" finished-at="2023-07-02T10:11:53Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="getColumnClassTest()[pri:0, instance:jalview.fts.threedbeacons.TDBeaconsFTSRestClientTest@3a71c100]" started-at="2023-07-02T10:11:53Z" name="getColumnClassTest" finished-at="2023-07-02T10:11:53Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getColumnClassTest -->
        <test-method signature="getColumnMinWidthTest()[pri:0, instance:jalview.fts.threedbeacons.TDBeaconsFTSRestClientTest@3a71c100]" started-at="2023-07-02T10:11:53Z" name="getColumnMinWidthTest" finished-at="2023-07-02T10:11:53Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getColumnMinWidthTest -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:jalview.fts.threedbeacons.TDBeaconsFTSRestClientTest@3a71c100]" started-at="2023-07-02T10:11:53Z" name="tearDown" finished-at="2023-07-02T10:11:53Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:jalview.fts.threedbeacons.TDBeaconsFTSRestClientTest@3a71c100]" started-at="2023-07-02T10:11:53Z" name="setUp" finished-at="2023-07-02T10:11:53Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:jalview.fts.threedbeacons.TDBeaconsFTSRestClientTest@3a71c100]" started-at="2023-07-02T10:11:53Z" name="tearDown" finished-at="2023-07-02T10:11:53Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:jalview.fts.threedbeacons.TDBeaconsFTSRestClientTest@3a71c100]" started-at="2023-07-02T10:11:53Z" name="setUp" finished-at="2023-07-02T10:11:53Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:jalview.fts.threedbeacons.TDBeaconsFTSRestClientTest@3a71c100]" started-at="2023-07-02T10:11:53Z" name="tearDown" finished-at="2023-07-02T10:11:53Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method signature="getDataColumnByNameOrCode()[pri:0, instance:jalview.fts.threedbeacons.TDBeaconsFTSRestClientTest@3a71c100]" started-at="2023-07-02T10:11:53Z" name="getDataColumnByNameOrCode" finished-at="2023-07-02T10:11:53Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getDataColumnByNameOrCode -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:jalview.fts.threedbeacons.TDBeaconsFTSRestClientTest@3a71c100]" started-at="2023-07-02T10:11:53Z" name="setUp" finished-at="2023-07-02T10:11:53Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="getDataColumnGroupById()[pri:0, instance:jalview.fts.threedbeacons.TDBeaconsFTSRestClientTest@3a71c100]" started-at="2023-07-02T10:11:53Z" name="getDataColumnGroupById" finished-at="2023-07-02T10:11:53Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getDataColumnGroupById -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:jalview.fts.threedbeacons.TDBeaconsFTSRestClientTest@3a71c100]" started-at="2023-07-02T10:11:53Z" name="tearDown" finished-at="2023-07-02T10:11:53Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method signature="getDataColumnsFieldsAsCommaDelimitedString()[pri:0, instance:jalview.fts.threedbeacons.TDBeaconsFTSRestClientTest@3a71c100]" started-at="2023-07-02T10:11:53Z" name="getDataColumnsFieldsAsCommaDelimitedString" finished-at="2023-07-02T10:11:53Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getDataColumnsFieldsAsCommaDelimitedString -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:jalview.fts.threedbeacons.TDBeaconsFTSRestClientTest@3a71c100]" started-at="2023-07-02T10:11:53Z" name="tearDown" finished-at="2023-07-02T10:11:53Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:jalview.fts.threedbeacons.TDBeaconsFTSRestClientTest@3a71c100]" started-at="2023-07-02T10:11:53Z" name="setUp" finished-at="2023-07-02T10:11:53Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:jalview.fts.threedbeacons.TDBeaconsFTSRestClientTest@3a71c100]" started-at="2023-07-02T10:11:53Z" name="tearDown" finished-at="2023-07-02T10:11:53Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method signature="getDefaultResponsePageSize()[pri:0, instance:jalview.fts.threedbeacons.TDBeaconsFTSRestClientTest@3a71c100]" started-at="2023-07-02T10:11:53Z" name="getDefaultResponsePageSize" finished-at="2023-07-02T10:11:53Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getDefaultResponsePageSize -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:jalview.fts.threedbeacons.TDBeaconsFTSRestClientTest@3a71c100]" started-at="2023-07-02T10:11:53Z" name="setUp" finished-at="2023-07-02T10:11:53Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:jalview.fts.threedbeacons.TDBeaconsFTSRestClientTest@3a71c100]" started-at="2023-07-02T10:11:53Z" name="setUp" finished-at="2023-07-02T10:11:53Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="getPrimaryKeyColumn()[pri:0, instance:jalview.fts.threedbeacons.TDBeaconsFTSRestClientTest@3a71c100]" started-at="2023-07-02T10:11:53Z" name="getPrimaryKeyColumn" finished-at="2023-07-02T10:11:53Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getPrimaryKeyColumn -->
        <test-method signature="getPrimaryKeyColumIndexTest()[pri:0, instance:jalview.fts.threedbeacons.TDBeaconsFTSRestClientTest@3a71c100]" started-at="2023-07-02T10:11:53Z" name="getPrimaryKeyColumIndexTest" finished-at="2023-07-02T10:11:53Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getPrimaryKeyColumIndexTest -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:jalview.fts.threedbeacons.TDBeaconsFTSRestClientTest@3a71c100]" started-at="2023-07-02T10:11:53Z" name="tearDown" finished-at="2023-07-02T10:11:53Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:jalview.fts.threedbeacons.TDBeaconsFTSRestClientTest@3a71c100]" started-at="2023-07-02T10:11:53Z" name="setUp" finished-at="2023-07-02T10:11:53Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="getSearchableDataColumns()[pri:0, instance:jalview.fts.threedbeacons.TDBeaconsFTSRestClientTest@3a71c100]" started-at="2023-07-02T10:11:53Z" name="getSearchableDataColumns" finished-at="2023-07-02T10:11:53Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getSearchableDataColumns -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:jalview.fts.threedbeacons.TDBeaconsFTSRestClientTest@3a71c100]" started-at="2023-07-02T10:11:53Z" name="setUp" finished-at="2023-07-02T10:11:53Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:jalview.fts.threedbeacons.TDBeaconsFTSRestClientTest@3a71c100]" started-at="2023-07-02T10:11:53Z" name="tearDown" finished-at="2023-07-02T10:11:53Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:jalview.fts.threedbeacons.TDBeaconsFTSRestClientTest@3a71c100]" started-at="2023-07-02T10:11:53Z" name="setUp" finished-at="2023-07-02T10:11:53Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:jalview.fts.threedbeacons.TDBeaconsFTSRestClientTest@3a71c100]" started-at="2023-07-02T10:11:53Z" name="tearDown" finished-at="2023-07-02T10:11:53Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method signature="getTDBIdColumIndexTest()[pri:0, instance:jalview.fts.threedbeacons.TDBeaconsFTSRestClientTest@3a71c100]" started-at="2023-07-02T10:11:53Z" name="getTDBIdColumIndexTest" finished-at="2023-07-02T10:11:53Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getTDBIdColumIndexTest -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:jalview.fts.threedbeacons.TDBeaconsFTSRestClientTest@3a71c100]" started-at="2023-07-02T10:11:53Z" name="tearDown" finished-at="2023-07-02T10:11:53Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method signature="testMockTDBRequest()[pri:0, instance:jalview.fts.threedbeacons.TDBeaconsFTSRestClientTest@3a71c100]" started-at="2023-07-02T10:11:53Z" name="testMockTDBRequest" finished-at="2023-07-02T10:11:53Z" duration-ms="303" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMockTDBRequest -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:jalview.fts.threedbeacons.TDBeaconsFTSRestClientTest@3a71c100]" started-at="2023-07-02T10:11:53Z" name="setUp" finished-at="2023-07-02T10:11:53Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:jalview.fts.threedbeacons.TDBeaconsFTSRestClientTest@3a71c100]" started-at="2023-07-02T10:11:53Z" name="tearDown" finished-at="2023-07-02T10:11:53Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- jalview.fts.threedbeacons.TDBeaconsFTSRestClientTest -->
      <class name="jalview.datamodel.AllRowsIteratorTest">
        <test-method is-config="true" signature="setup()[pri:0, instance:jalview.datamodel.AllRowsIteratorTest@18e8473e]" started-at="2023-07-02T10:13:44Z" name="setup" finished-at="2023-07-02T10:13:44Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="testLastNext()[pri:0, instance:jalview.datamodel.AllRowsIteratorTest@18e8473e]" started-at="2023-07-02T10:13:44Z" name="testLastNext" finished-at="2023-07-02T10:13:44Z" duration-ms="1" status="PASS">
          <exception class="java.util.NoSuchElementException">
            <full-stacktrace>
              <![CDATA[java.util.NoSuchElementException
	at jalview.datamodel.AllRowsIterator.next(AllRowsIterator.java:62)
	at jalview.datamodel.AllRowsIteratorTest.testLastNext(AllRowsIteratorTest.java:83)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:648)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:834)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1142)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:124)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:771)
	at org.testng.TestRunner.run(TestRunner.java:621)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:357)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:352)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:310)
	at org.testng.SuiteRunner.run(SuiteRunner.java:259)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1176)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1101)
	at org.testng.TestNG.run(TestNG.java:1009)
	at org.gradle.api.internal.tasks.testing.testng.TestNGTestClassProcessor.runTests(TestNGTestClassProcessor.java:145)
	at org.gradle.api.internal.tasks.testing.testng.TestNGTestClassProcessor.stop(TestNGTestClassProcessor.java:92)
	at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.stop(SuiteTestClassProcessor.java:62)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:36)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24)
	at org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:33)
	at org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:94)
	at com.sun.proxy.$Proxy2.stop(Unknown Source)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker$3.run(TestWorker.java:193)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.executeAndMaintainThreadName(TestWorker.java:129)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.execute(TestWorker.java:100)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.execute(TestWorker.java:60)
	at org.gradle.process.internal.worker.child.ActionExecutionWorker.execute(ActionExecutionWorker.java:56)
	at org.gradle.process.internal.worker.child.SystemApplicationClassLoaderWorker.call(SystemApplicationClassLoaderWorker.java:113)
	at org.gradle.process.internal.worker.child.SystemApplicationClassLoaderWorker.call(SystemApplicationClassLoaderWorker.java:65)
	at worker.org.gradle.process.internal.worker.GradleWorkerMain.run(GradleWorkerMain.java:69)
	at worker.org.gradle.process.internal.worker.GradleWorkerMain.main(GradleWorkerMain.java:74)
]]>
            </full-stacktrace>
          </exception> <!-- java.util.NoSuchElementException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testLastNext -->
        <test-method signature="testHasNextAndNext()[pri:0, instance:jalview.datamodel.AllRowsIteratorTest@18e8473e]" started-at="2023-07-02T10:13:44Z" name="testHasNextAndNext" finished-at="2023-07-02T10:13:44Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testHasNextAndNext -->
        <test-method signature="testOneElement()[pri:0, instance:jalview.datamodel.AllRowsIteratorTest@18e8473e]" started-at="2023-07-02T10:13:44Z" name="testOneElement" finished-at="2023-07-02T10:13:44Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testOneElement -->
        <test-method signature="testRemove()[pri:0, instance:jalview.datamodel.AllRowsIteratorTest@18e8473e]" started-at="2023-07-02T10:13:44Z" name="testRemove" finished-at="2023-07-02T10:13:44Z" duration-ms="0" status="PASS">
          <exception class="java.lang.UnsupportedOperationException">
            <full-stacktrace>
              <![CDATA[java.lang.UnsupportedOperationException
	at jalview.datamodel.AllRowsIterator.remove(AllRowsIterator.java:73)
	at jalview.datamodel.AllRowsIteratorTest.testRemove(AllRowsIteratorTest.java:97)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:648)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:834)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1142)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:124)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:771)
	at org.testng.TestRunner.run(TestRunner.java:621)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:357)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:352)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:310)
	at org.testng.SuiteRunner.run(SuiteRunner.java:259)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1176)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1101)
	at org.testng.TestNG.run(TestNG.java:1009)
	at org.gradle.api.internal.tasks.testing.testng.TestNGTestClassProcessor.runTests(TestNGTestClassProcessor.java:145)
	at org.gradle.api.internal.tasks.testing.testng.TestNGTestClassProcessor.stop(TestNGTestClassProcessor.java:92)
	at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.stop(SuiteTestClassProcessor.java:62)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:36)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24)
	at org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:33)
	at org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:94)
	at com.sun.proxy.$Proxy2.stop(Unknown Source)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker$3.run(TestWorker.java:193)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.executeAndMaintainThreadName(TestWorker.java:129)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.execute(TestWorker.java:100)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.execute(TestWorker.java:60)
	at org.gradle.process.internal.worker.child.ActionExecutionWorker.execute(ActionExecutionWorker.java:56)
	at org.gradle.process.internal.worker.child.SystemApplicationClassLoaderWorker.call(SystemApplicationClassLoaderWorker.java:113)
	at org.gradle.process.internal.worker.child.SystemApplicationClassLoaderWorker.call(SystemApplicationClassLoaderWorker.java:65)
	at worker.org.gradle.process.internal.worker.GradleWorkerMain.run(GradleWorkerMain.java:69)
	at worker.org.gradle.process.internal.worker.GradleWorkerMain.main(GradleWorkerMain.java:74)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.UnsupportedOperationException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemove -->
      </class> <!-- jalview.datamodel.AllRowsIteratorTest -->
      <class name="jalview.ext.ensembl.EnsemblXrefTest">
        <test-method signature="testGetCrossReferences()[pri:0, instance:jalview.ext.ensembl.EnsemblXrefTest@4b770e40]" started-at="2023-07-02T10:11:41Z" name="testGetCrossReferences" finished-at="2023-07-02T10:11:41Z" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetCrossReferences -->
        <test-method is-config="true" signature="setUpJvOptionPane()[pri:0, instance:jalview.ext.ensembl.EnsemblXrefTest@4b770e40]" started-at="2023-07-02T10:11:41Z" name="setUpJvOptionPane" finished-at="2023-07-02T10:11:41Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpJvOptionPane -->
      </class> <!-- jalview.ext.ensembl.EnsemblXrefTest -->
      <class name="jalview.bin.ArgsParserTest">
        <test-method is-config="true" signature="setUpJvOptionPane()[pri:0, instance:jalview.bin.ArgsParserTest@10b3df93]" started-at="2023-07-02T10:12:21Z" name="setUpJvOptionPane" finished-at="2023-07-02T10:12:21Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpJvOptionPane -->
        <test-method signature="testContains()[pri:0, instance:jalview.bin.ArgsParserTest@10b3df93]" started-at="2023-07-02T10:12:21Z" name="testContains" finished-at="2023-07-02T10:12:21Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testContains -->
        <test-method signature="testGetValue_decoded()[pri:0, instance:jalview.bin.ArgsParserTest@10b3df93]" started-at="2023-07-02T10:12:21Z" name="testGetValue_decoded" finished-at="2023-07-02T10:12:21Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetValue_decoded -->
        <test-method signature="testGetValue()[pri:0, instance:jalview.bin.ArgsParserTest@10b3df93]" started-at="2023-07-02T10:12:21Z" name="testGetValue" finished-at="2023-07-02T10:12:21Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetValue -->
        <test-method signature="testNextValue()[pri:0, instance:jalview.bin.ArgsParserTest@10b3df93]" started-at="2023-07-02T10:12:21Z" name="testNextValue" finished-at="2023-07-02T10:12:21Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testNextValue -->
      </class> <!-- jalview.bin.ArgsParserTest -->
      <class name="jalview.util.QuickSortTest">
        <test-method signature="testCharSortByFloat()[pri:0, instance:jalview.util.QuickSortTest@450794b4]" started-at="2023-07-02T10:13:43Z" name="testCharSortByFloat" finished-at="2023-07-02T10:13:43Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCharSortByFloat -->
        <test-method is-config="true" signature="setUpJvOptionPane()[pri:0, instance:jalview.util.QuickSortTest@450794b4]" started-at="2023-07-02T10:13:43Z" name="setUpJvOptionPane" finished-at="2023-07-02T10:13:43Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpJvOptionPane -->
        <test-method signature="testSortByString()[pri:0, instance:jalview.util.QuickSortTest@450794b4]" started-at="2023-07-02T10:13:43Z" name="testSortByString" finished-at="2023-07-02T10:13:43Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSortByString -->
        <test-method signature="testSortByInt()[pri:0, instance:jalview.util.QuickSortTest@450794b4]" started-at="2023-07-02T10:13:43Z" name="testSortByInt" finished-at="2023-07-02T10:13:43Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSortByInt -->
        <test-method signature="testCharSortByInt()[pri:0, instance:jalview.util.QuickSortTest@450794b4]" started-at="2023-07-02T10:13:43Z" name="testCharSortByInt" finished-at="2023-07-02T10:13:43Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCharSortByInt -->
        <test-method signature="testSort_byDoubleValues()[pri:0, instance:jalview.util.QuickSortTest@450794b4]" started-at="2023-07-02T10:13:43Z" name="testSort_byDoubleValues" finished-at="2023-07-02T10:13:43Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSort_byDoubleValues -->
        <test-method signature="testSort_byFloatValues()[pri:0, instance:jalview.util.QuickSortTest@450794b4]" started-at="2023-07-02T10:13:43Z" name="testSort_byFloatValues" finished-at="2023-07-02T10:13:43Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSort_byFloatValues -->
        <test-method signature="testSort_byIntValues()[pri:0, instance:jalview.util.QuickSortTest@450794b4]" started-at="2023-07-02T10:13:43Z" name="testSort_byIntValues" finished-at="2023-07-02T10:13:43Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSort_byIntValues -->
        <test-method signature="testSort_charSortByInt_mostlyZeroValues()[pri:0, instance:jalview.util.QuickSortTest@450794b4]" started-at="2023-07-02T10:13:43Z" name="testSort_charSortByInt_mostlyZeroValues" finished-at="2023-07-02T10:13:43Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSort_charSortByInt_mostlyZeroValues -->
        <test-method signature="testSort_byStringValues()[pri:0, instance:jalview.util.QuickSortTest@450794b4]" started-at="2023-07-02T10:13:43Z" name="testSort_byStringValues" finished-at="2023-07-02T10:13:43Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSort_byStringValues -->
        <test-method signature="testSort_charSortByFloat_mostlyZeroValues()[pri:0, instance:jalview.util.QuickSortTest@450794b4]" started-at="2023-07-02T10:13:43Z" name="testSort_charSortByFloat_mostlyZeroValues" finished-at="2023-07-02T10:13:43Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSort_charSortByFloat_mostlyZeroValues -->
      </class> <!-- jalview.util.QuickSortTest -->
      <class name="jalview.io.ClustalFileTest">
        <test-method signature="testParse_noNumbering()[pri:0, instance:jalview.io.ClustalFileTest@85ec632]" started-at="2023-07-02T10:12:10Z" name="testParse_noNumbering" finished-at="2023-07-02T10:12:10Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testParse_noNumbering -->
        <test-method signature="testParse_withNumbering()[pri:0, instance:jalview.io.ClustalFileTest@85ec632]" started-at="2023-07-02T10:12:10Z" name="testParse_withNumbering" finished-at="2023-07-02T10:12:10Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testParse_withNumbering -->
      </class> <!-- jalview.io.ClustalFileTest -->
      <class name="jalview.util.ShiftListTest">
        <test-method signature="testParseMap()[pri:0, instance:jalview.util.ShiftListTest@30457e14]" started-at="2023-07-02T10:13:43Z" name="testParseMap" finished-at="2023-07-02T10:13:43Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testParseMap -->
        <test-method is-config="true" signature="setUpJvOptionPane()[pri:0, instance:jalview.util.ShiftListTest@30457e14]" started-at="2023-07-02T10:13:43Z" name="setUpJvOptionPane" finished-at="2023-07-02T10:13:43Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpJvOptionPane -->
      </class> <!-- jalview.util.ShiftListTest -->
      <class name="jalview.io.RNAMLfileTest">
        <test-method is-config="true" signature="setUpBeforeClass()[pri:0, instance:jalview.io.RNAMLfileTest@6e5bfdfc]" started-at="2023-07-02T10:11:54Z" name="setUpBeforeClass" finished-at="2023-07-02T10:11:54Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpBeforeClass -->
        <test-method is-config="true" signature="setUpJvOptionPane()[pri:0, instance:jalview.io.RNAMLfileTest@6e5bfdfc]" started-at="2023-07-02T10:11:54Z" name="setUpJvOptionPane" finished-at="2023-07-02T10:11:54Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpJvOptionPane -->
        <test-method signature="testRnamlToStockholmIO()[pri:0, instance:jalview.io.RNAMLfileTest@6e5bfdfc]" started-at="2023-07-02T10:11:54Z" name="testRnamlToStockholmIO" finished-at="2023-07-02T10:11:55Z" duration-ms="127" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRnamlToStockholmIO -->
        <test-method is-config="true" signature="tearDownAfterClass()[pri:0, instance:jalview.io.RNAMLfileTest@6e5bfdfc]" started-at="2023-07-02T10:11:55Z" name="tearDownAfterClass" finished-at="2023-07-02T10:11:55Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownAfterClass -->
      </class> <!-- jalview.io.RNAMLfileTest -->
      <class name="jalview.schemes.PIDColourSchemeTest">
        <test-method signature="testFindColour()[pri:0, instance:jalview.schemes.PIDColourSchemeTest@5c371e13]" started-at="2023-07-02T10:12:10Z" name="testFindColour" finished-at="2023-07-02T10:12:10Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFindColour -->
        <test-method signature="testFindColour_ignoreGaps()[pri:0, instance:jalview.schemes.PIDColourSchemeTest@5c371e13]" started-at="2023-07-02T10:12:10Z" name="testFindColour_ignoreGaps" finished-at="2023-07-02T10:12:10Z" duration-ms="63" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFindColour_ignoreGaps -->
      </class> <!-- jalview.schemes.PIDColourSchemeTest -->
      <class name="jalview.io.ScoreMatrixFileTest">
        <test-method signature="testParseMatrix_aaIndexBlosum80()[pri:0, instance:jalview.io.ScoreMatrixFileTest@3d829787]" started-at="2023-07-02T10:11:56Z" name="testParseMatrix_aaIndexBlosum80" finished-at="2023-07-02T10:11:56Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testParseMatrix_aaIndexBlosum80 -->
        <test-method is-config="true" signature="tearDownAfterTest()[pri:0, instance:jalview.io.ScoreMatrixFileTest@3d829787]" started-at="2023-07-02T10:11:56Z" name="tearDownAfterTest" finished-at="2023-07-02T10:11:56Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownAfterTest -->
        <test-method is-config="true" signature="tearDownAfterTest()[pri:0, instance:jalview.io.ScoreMatrixFileTest@3d829787]" started-at="2023-07-02T10:11:56Z" name="tearDownAfterTest" finished-at="2023-07-02T10:11:56Z" duration-ms="3" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownAfterTest -->
        <test-method signature="testParseMatrix_aaindexFormat()[pri:0, instance:jalview.io.ScoreMatrixFileTest@3d829787]" started-at="2023-07-02T10:11:56Z" name="testParseMatrix_aaindexFormat" finished-at="2023-07-02T10:11:56Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testParseMatrix_aaindexFormat -->
        <test-method signature="testParseMatrix_aaindex_extraDataLines()[pri:0, instance:jalview.io.ScoreMatrixFileTest@3d829787]" started-at="2023-07-02T10:11:56Z" name="testParseMatrix_aaindex_extraDataLines" finished-at="2023-07-02T10:11:56Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testParseMatrix_aaindex_extraDataLines -->
        <test-method is-config="true" signature="tearDownAfterTest()[pri:0, instance:jalview.io.ScoreMatrixFileTest@3d829787]" started-at="2023-07-02T10:11:56Z" name="tearDownAfterTest" finished-at="2023-07-02T10:11:56Z" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownAfterTest -->
        <test-method signature="testParseMatrix_aaindex_mMissing()[pri:0, instance:jalview.io.ScoreMatrixFileTest@3d829787]" started-at="2023-07-02T10:11:56Z" name="testParseMatrix_aaindex_mMissing" finished-at="2023-07-02T10:11:56Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testParseMatrix_aaindex_mMissing -->
        <test-method is-config="true" signature="tearDownAfterTest()[pri:0, instance:jalview.io.ScoreMatrixFileTest@3d829787]" started-at="2023-07-02T10:11:56Z" name="tearDownAfterTest" finished-at="2023-07-02T10:11:56Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownAfterTest -->
        <test-method signature="testParseMatrix_aaindex_rowColMismatch()[pri:0, instance:jalview.io.ScoreMatrixFileTest@3d829787]" started-at="2023-07-02T10:11:56Z" name="testParseMatrix_aaindex_rowColMismatch" finished-at="2023-07-02T10:11:56Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testParseMatrix_aaindex_rowColMismatch -->
        <test-method is-config="true" signature="tearDownAfterTest()[pri:0, instance:jalview.io.ScoreMatrixFileTest@3d829787]" started-at="2023-07-02T10:11:56Z" name="tearDownAfterTest" finished-at="2023-07-02T10:11:56Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownAfterTest -->
        <test-method signature="testParseMatrix_aaindex_tooFewColumns()[pri:0, instance:jalview.io.ScoreMatrixFileTest@3d829787]" started-at="2023-07-02T10:11:56Z" name="testParseMatrix_aaindex_tooFewColumns" finished-at="2023-07-02T10:11:56Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testParseMatrix_aaindex_tooFewColumns -->
        <test-method is-config="true" signature="tearDownAfterTest()[pri:0, instance:jalview.io.ScoreMatrixFileTest@3d829787]" started-at="2023-07-02T10:11:56Z" name="tearDownAfterTest" finished-at="2023-07-02T10:11:56Z" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownAfterTest -->
        <test-method is-config="true" signature="tearDownAfterTest()[pri:0, instance:jalview.io.ScoreMatrixFileTest@3d829787]" started-at="2023-07-02T10:11:56Z" name="tearDownAfterTest" finished-at="2023-07-02T10:11:56Z" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownAfterTest -->
        <test-method signature="testParseMatrix_aaindex_tooManyRows()[pri:0, instance:jalview.io.ScoreMatrixFileTest@3d829787]" started-at="2023-07-02T10:11:56Z" name="testParseMatrix_aaindex_tooManyRows" finished-at="2023-07-02T10:11:56Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testParseMatrix_aaindex_tooManyRows -->
        <test-method is-config="true" signature="tearDownAfterTest()[pri:0, instance:jalview.io.ScoreMatrixFileTest@3d829787]" started-at="2023-07-02T10:11:56Z" name="tearDownAfterTest" finished-at="2023-07-02T10:11:56Z" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownAfterTest -->
        <test-method signature="testParseMatrix_headerMissing()[pri:0, instance:jalview.io.ScoreMatrixFileTest@3d829787]" started-at="2023-07-02T10:11:56Z" name="testParseMatrix_headerMissing" finished-at="2023-07-02T10:11:56Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testParseMatrix_headerMissing -->
        <test-method signature="testParseMatrix_ncbiBadDelimiter()[pri:0, instance:jalview.io.ScoreMatrixFileTest@3d829787]" started-at="2023-07-02T10:11:56Z" name="testParseMatrix_ncbiBadDelimiter" finished-at="2023-07-02T10:11:56Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testParseMatrix_ncbiBadDelimiter -->
        <test-method is-config="true" signature="tearDownAfterTest()[pri:0, instance:jalview.io.ScoreMatrixFileTest@3d829787]" started-at="2023-07-02T10:11:56Z" name="tearDownAfterTest" finished-at="2023-07-02T10:11:56Z" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownAfterTest -->
        <test-method signature="testParseMatrix_ncbiBadFloat()[pri:0, instance:jalview.io.ScoreMatrixFileTest@3d829787]" started-at="2023-07-02T10:11:56Z" name="testParseMatrix_ncbiBadFloat" finished-at="2023-07-02T10:11:56Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testParseMatrix_ncbiBadFloat -->
        <test-method is-config="true" signature="tearDownAfterTest()[pri:0, instance:jalview.io.ScoreMatrixFileTest@3d829787]" started-at="2023-07-02T10:11:56Z" name="tearDownAfterTest" finished-at="2023-07-02T10:11:56Z" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownAfterTest -->
        <test-method signature="testParseMatrix_ncbiBadGuideCharacter()[pri:0, instance:jalview.io.ScoreMatrixFileTest@3d829787]" started-at="2023-07-02T10:11:56Z" name="testParseMatrix_ncbiBadGuideCharacter" finished-at="2023-07-02T10:11:56Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testParseMatrix_ncbiBadGuideCharacter -->
        <test-method is-config="true" signature="tearDownAfterTest()[pri:0, instance:jalview.io.ScoreMatrixFileTest@3d829787]" started-at="2023-07-02T10:11:56Z" name="tearDownAfterTest" finished-at="2023-07-02T10:11:56Z" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownAfterTest -->
        <test-method is-config="true" signature="tearDownAfterTest()[pri:0, instance:jalview.io.ScoreMatrixFileTest@3d829787]" started-at="2023-07-02T10:11:56Z" name="tearDownAfterTest" finished-at="2023-07-02T10:11:56Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownAfterTest -->
        <test-method signature="testParseMatrix_ncbiFormat()[pri:0, instance:jalview.io.ScoreMatrixFileTest@3d829787]" started-at="2023-07-02T10:11:56Z" name="testParseMatrix_ncbiFormat" finished-at="2023-07-02T10:11:56Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testParseMatrix_ncbiFormat -->
        <test-method is-config="true" signature="tearDownAfterTest()[pri:0, instance:jalview.io.ScoreMatrixFileTest@3d829787]" started-at="2023-07-02T10:11:56Z" name="tearDownAfterTest" finished-at="2023-07-02T10:11:56Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownAfterTest -->
        <test-method signature="testParseMatrix_ncbiHeaderRepeated()[pri:0, instance:jalview.io.ScoreMatrixFileTest@3d829787]" started-at="2023-07-02T10:11:56Z" name="testParseMatrix_ncbiHeaderRepeated" finished-at="2023-07-02T10:11:56Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testParseMatrix_ncbiHeaderRepeated -->
        <test-method is-config="true" signature="tearDownAfterTest()[pri:0, instance:jalview.io.ScoreMatrixFileTest@3d829787]" started-at="2023-07-02T10:11:56Z" name="tearDownAfterTest" finished-at="2023-07-02T10:11:56Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownAfterTest -->
        <test-method signature="testParseMatrix_ncbiMixedDelimiters()[pri:0, instance:jalview.io.ScoreMatrixFileTest@3d829787]" started-at="2023-07-02T10:11:56Z" name="testParseMatrix_ncbiMixedDelimiters" finished-at="2023-07-02T10:11:56Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testParseMatrix_ncbiMixedDelimiters -->
        <test-method signature="testParseMatrix_ncbiNameMissing()[pri:0, instance:jalview.io.ScoreMatrixFileTest@3d829787]" started-at="2023-07-02T10:11:56Z" name="testParseMatrix_ncbiNameMissing" finished-at="2023-07-02T10:11:56Z" duration-ms="3" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testParseMatrix_ncbiNameMissing -->
        <test-method is-config="true" signature="tearDownAfterTest()[pri:0, instance:jalview.io.ScoreMatrixFileTest@3d829787]" started-at="2023-07-02T10:11:56Z" name="tearDownAfterTest" finished-at="2023-07-02T10:11:56Z" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownAfterTest -->
        <test-method signature="testParseMatrix_ncbiNotEnoughColumns()[pri:0, instance:jalview.io.ScoreMatrixFileTest@3d829787]" started-at="2023-07-02T10:11:56Z" name="testParseMatrix_ncbiNotEnoughColumns" finished-at="2023-07-02T10:11:56Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testParseMatrix_ncbiNotEnoughColumns -->
        <test-method is-config="true" signature="tearDownAfterTest()[pri:0, instance:jalview.io.ScoreMatrixFileTest@3d829787]" started-at="2023-07-02T10:11:56Z" name="tearDownAfterTest" finished-at="2023-07-02T10:11:56Z" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownAfterTest -->
        <test-method signature="testParseMatrix_ncbiNotEnoughRows()[pri:0, instance:jalview.io.ScoreMatrixFileTest@3d829787]" started-at="2023-07-02T10:11:56Z" name="testParseMatrix_ncbiNotEnoughRows" finished-at="2023-07-02T10:11:56Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testParseMatrix_ncbiNotEnoughRows -->
        <test-method is-config="true" signature="tearDownAfterTest()[pri:0, instance:jalview.io.ScoreMatrixFileTest@3d829787]" started-at="2023-07-02T10:11:56Z" name="tearDownAfterTest" finished-at="2023-07-02T10:11:56Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownAfterTest -->
        <test-method signature="testParseMatrix_ncbiTooManyColumns()[pri:0, instance:jalview.io.ScoreMatrixFileTest@3d829787]" started-at="2023-07-02T10:11:56Z" name="testParseMatrix_ncbiTooManyColumns" finished-at="2023-07-02T10:11:56Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testParseMatrix_ncbiTooManyColumns -->
        <test-method is-config="true" signature="tearDownAfterTest()[pri:0, instance:jalview.io.ScoreMatrixFileTest@3d829787]" started-at="2023-07-02T10:11:56Z" name="tearDownAfterTest" finished-at="2023-07-02T10:11:56Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownAfterTest -->
        <test-method is-config="true" signature="tearDownAfterTest()[pri:0, instance:jalview.io.ScoreMatrixFileTest@3d829787]" started-at="2023-07-02T10:11:56Z" name="tearDownAfterTest" finished-at="2023-07-02T10:11:56Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownAfterTest -->
        <test-method signature="testParseMatrix_ncbiTooManyRows()[pri:0, instance:jalview.io.ScoreMatrixFileTest@3d829787]" started-at="2023-07-02T10:11:56Z" name="testParseMatrix_ncbiTooManyRows" finished-at="2023-07-02T10:11:56Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testParseMatrix_ncbiTooManyRows -->
        <test-method signature="testParse_ncbiFormat()[pri:0, instance:jalview.io.ScoreMatrixFileTest@3d829787]" started-at="2023-07-02T10:11:56Z" name="testParse_ncbiFormat" finished-at="2023-07-02T10:11:56Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testParse_ncbiFormat -->
        <test-method is-config="true" signature="tearDownAfterTest()[pri:0, instance:jalview.io.ScoreMatrixFileTest@3d829787]" started-at="2023-07-02T10:11:56Z" name="tearDownAfterTest" finished-at="2023-07-02T10:11:56Z" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownAfterTest -->
      </class> <!-- jalview.io.ScoreMatrixFileTest -->
      <class name="jalview.io.JalviewFileViewTest">
        <test-method signature="testGetExtension()[pri:0, instance:jalview.io.JalviewFileViewTest@62577d6]" started-at="2023-07-02T10:11:41Z" name="testGetExtension" finished-at="2023-07-02T10:11:41Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetExtension -->
        <test-method signature="testGetImageIcon()[pri:0, instance:jalview.io.JalviewFileViewTest@62577d6]" started-at="2023-07-02T10:11:41Z" name="testGetImageIcon" finished-at="2023-07-02T10:11:41Z" duration-ms="5" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetImageIcon -->
        <test-method signature="testGetTypeDescription()[pri:0, instance:jalview.io.JalviewFileViewTest@62577d6]" started-at="2023-07-02T10:11:41Z" name="testGetTypeDescription" finished-at="2023-07-02T10:11:41Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetTypeDescription -->
      </class> <!-- jalview.io.JalviewFileViewTest -->
      <class name="jalview.io.JalviewExportPropertiesTests">
        <test-method is-config="true" signature="setUpBeforeClass()[pri:0, instance:jalview.io.JalviewExportPropertiesTests@35e52059]" started-at="2023-07-02T10:11:38Z" name="setUpBeforeClass" finished-at="2023-07-02T10:11:38Z" duration-ms="446" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpBeforeClass -->
        <test-method is-config="true" signature="setUpJvOptionPane()[pri:0, instance:jalview.io.JalviewExportPropertiesTests@35e52059]" started-at="2023-07-02T10:11:38Z" name="setUpJvOptionPane" finished-at="2023-07-02T10:11:38Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpJvOptionPane -->
        <test-method signature="testImportExportPeriodGaps()[pri:0, instance:jalview.io.JalviewExportPropertiesTests@35e52059]" started-at="2023-07-02T10:11:38Z" name="testImportExportPeriodGaps" finished-at="2023-07-02T10:11:39Z" duration-ms="412" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testImportExportPeriodGaps -->
        <test-method is-config="true" signature="tearDownAfterClass()[pri:0, instance:jalview.io.JalviewExportPropertiesTests@35e52059]" started-at="2023-07-02T10:11:39Z" name="tearDownAfterClass" finished-at="2023-07-02T10:11:39Z" duration-ms="161" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownAfterClass -->
      </class> <!-- jalview.io.JalviewExportPropertiesTests -->
      <class name="jalview.io.StockholmFileTest">
        <test-method is-config="true" signature="setUpJvOptionPane()[pri:0, instance:jalview.io.StockholmFileTest@51bde877]" started-at="2023-07-02T10:11:59Z" name="setUpJvOptionPane" finished-at="2023-07-02T10:11:59Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpJvOptionPane -->
        <test-method signature="curlyWUSSsecondaryStructureForRNASequence()[pri:0, instance:jalview.io.StockholmFileTest@51bde877]" started-at="2023-07-02T10:11:59Z" name="curlyWUSSsecondaryStructureForRNASequence" finished-at="2023-07-02T10:11:59Z" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- curlyWUSSsecondaryStructureForRNASequence -->
        <test-method signature="dbrefOutput()[pri:0, instance:jalview.io.StockholmFileTest@51bde877]" started-at="2023-07-02T10:11:59Z" name="dbrefOutput" finished-at="2023-07-02T10:11:59Z" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- dbrefOutput -->
        <test-method signature="fullWUSSsecondaryStructureForRNASequence()[pri:0, instance:jalview.io.StockholmFileTest@51bde877]" started-at="2023-07-02T10:11:59Z" name="fullWUSSsecondaryStructureForRNASequence" finished-at="2023-07-02T10:11:59Z" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- fullWUSSsecondaryStructureForRNASequence -->
        <test-method signature="detectWussBrackets()[pri:0, instance:jalview.io.StockholmFileTest@51bde877]" started-at="2023-07-02T10:11:59Z" name="detectWussBrackets" finished-at="2023-07-02T10:11:59Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- detectWussBrackets -->
        <test-method signature="pfamFileDataExtraction()[pri:0, instance:jalview.io.StockholmFileTest@51bde877]" started-at="2023-07-02T10:11:59Z" name="pfamFileDataExtraction" finished-at="2023-07-02T10:12:00Z" duration-ms="25" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- pfamFileDataExtraction -->
        <test-method signature="pfamFileIO()[pri:0, instance:jalview.io.StockholmFileTest@51bde877]" started-at="2023-07-02T10:12:00Z" name="pfamFileIO" finished-at="2023-07-02T10:12:00Z" duration-ms="121" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- pfamFileIO -->
        <test-method signature="rfamFileIO()[pri:0, instance:jalview.io.StockholmFileTest@51bde877]" started-at="2023-07-02T10:12:00Z" name="rfamFileIO" finished-at="2023-07-02T10:12:00Z" duration-ms="102" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- rfamFileIO -->
        <test-method signature="secondaryStructureForRNASequence()[pri:0, instance:jalview.io.StockholmFileTest@51bde877]" started-at="2023-07-02T10:12:00Z" name="secondaryStructureForRNASequence" finished-at="2023-07-02T10:12:00Z" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- secondaryStructureForRNASequence -->
        <test-method signature="stockholmFileRnaSSAlphaChars()[pri:0, instance:jalview.io.StockholmFileTest@51bde877]" started-at="2023-07-02T10:12:00Z" name="stockholmFileRnaSSAlphaChars" finished-at="2023-07-02T10:12:00Z" duration-ms="4" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- stockholmFileRnaSSAlphaChars -->
        <test-method signature="stockholmFileRnaSSSpaceChars()[pri:0, instance:jalview.io.StockholmFileTest@51bde877]" started-at="2023-07-02T10:12:00Z" name="stockholmFileRnaSSSpaceChars" finished-at="2023-07-02T10:12:00Z" duration-ms="3" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- stockholmFileRnaSSSpaceChars -->
        <test-method signature="testAnnotationEquivalence()[pri:0, instance:jalview.io.StockholmFileTest@51bde877]" started-at="2023-07-02T10:12:00Z" name="testAnnotationEquivalence" finished-at="2023-07-02T10:12:00Z" duration-ms="15" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAnnotationEquivalence -->
      </class> <!-- jalview.io.StockholmFileTest -->
      <class name="jalview.ext.pymol.PymolCommandsTest">
        <test-method is-config="true" signature="setUp()[pri:0, instance:jalview.ext.pymol.PymolCommandsTest@5f577419]" started-at="2023-07-02T10:11:41Z" name="setUp" finished-at="2023-07-02T10:11:41Z" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="testCloseViewer()[pri:0, instance:jalview.ext.pymol.PymolCommandsTest@5f577419]" started-at="2023-07-02T10:11:41Z" name="testCloseViewer" finished-at="2023-07-02T10:11:41Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCloseViewer -->
        <test-method signature="testColourByChain()[pri:0, instance:jalview.ext.pymol.PymolCommandsTest@5f577419]" started-at="2023-07-02T10:11:41Z" name="testColourByChain" finished-at="2023-07-02T10:11:41Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testColourByChain -->
        <test-method signature="testColourByCharge()[pri:0, instance:jalview.ext.pymol.PymolCommandsTest@5f577419]" started-at="2023-07-02T10:11:41Z" name="testColourByCharge" finished-at="2023-07-02T10:11:41Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testColourByCharge -->
        <test-method signature="testColourBySequence()[pri:0, instance:jalview.ext.pymol.PymolCommandsTest@5f577419]" started-at="2023-07-02T10:11:41Z" name="testColourBySequence" finished-at="2023-07-02T10:11:41Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testColourBySequence -->
        <test-method signature="testColourResidues()[pri:0, instance:jalview.ext.pymol.PymolCommandsTest@5f577419]" started-at="2023-07-02T10:11:41Z" name="testColourResidues" finished-at="2023-07-02T10:11:41Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testColourResidues -->
        <test-method signature="testGetAtomSpec()[pri:0, instance:jalview.ext.pymol.PymolCommandsTest@5f577419]" started-at="2023-07-02T10:11:41Z" name="testGetAtomSpec" finished-at="2023-07-02T10:11:41Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetAtomSpec -->
        <test-method signature="testGetAtomSpec_alphaOnly()[pri:0, instance:jalview.ext.pymol.PymolCommandsTest@5f577419]" started-at="2023-07-02T10:11:41Z" name="testGetAtomSpec_alphaOnly" finished-at="2023-07-02T10:11:41Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetAtomSpec_alphaOnly -->
        <test-method signature="testGetResidueSpec()[pri:0, instance:jalview.ext.pymol.PymolCommandsTest@5f577419]" started-at="2023-07-02T10:11:41Z" name="testGetResidueSpec" finished-at="2023-07-02T10:11:41Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetResidueSpec -->
        <test-method signature="testGetModelStartNo()[pri:0, instance:jalview.ext.pymol.PymolCommandsTest@5f577419]" started-at="2023-07-02T10:11:41Z" name="testGetModelStartNo" finished-at="2023-07-02T10:11:41Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetModelStartNo -->
        <test-method signature="testLoadFile()[pri:0, instance:jalview.ext.pymol.PymolCommandsTest@5f577419]" started-at="2023-07-02T10:11:41Z" name="testLoadFile" finished-at="2023-07-02T10:11:41Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testLoadFile -->
        <test-method signature="testOpenSession()[pri:0, instance:jalview.ext.pymol.PymolCommandsTest@5f577419]" started-at="2023-07-02T10:11:41Z" name="testOpenSession" finished-at="2023-07-02T10:11:41Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testOpenSession -->
        <test-method signature="testOpenCommandFile()[pri:0, instance:jalview.ext.pymol.PymolCommandsTest@5f577419]" started-at="2023-07-02T10:11:41Z" name="testOpenCommandFile" finished-at="2023-07-02T10:11:41Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testOpenCommandFile -->
        <test-method signature="testSaveSession()[pri:0, instance:jalview.ext.pymol.PymolCommandsTest@5f577419]" started-at="2023-07-02T10:11:41Z" name="testSaveSession" finished-at="2023-07-02T10:11:41Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSaveSession -->
        <test-method signature="testSetAttribute()[pri:0, instance:jalview.ext.pymol.PymolCommandsTest@5f577419]" started-at="2023-07-02T10:11:41Z" name="testSetAttribute" finished-at="2023-07-02T10:11:41Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSetAttribute -->
        <test-method signature="testSetAttributes()[pri:0, instance:jalview.ext.pymol.PymolCommandsTest@5f577419]" started-at="2023-07-02T10:11:41Z" name="testSetAttributes" finished-at="2023-07-02T10:11:41Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSetAttributes -->
        <test-method signature="testSetBackgroundColour()[pri:0, instance:jalview.ext.pymol.PymolCommandsTest@5f577419]" started-at="2023-07-02T10:11:41Z" name="testSetBackgroundColour" finished-at="2023-07-02T10:11:41Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSetBackgroundColour -->
        <test-method signature="testShowBackbone()[pri:0, instance:jalview.ext.pymol.PymolCommandsTest@5f577419]" started-at="2023-07-02T10:11:41Z" name="testShowBackbone" finished-at="2023-07-02T10:11:41Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testShowBackbone -->
        <test-method signature="testSuperposeStructures()[pri:0, instance:jalview.ext.pymol.PymolCommandsTest@5f577419]" started-at="2023-07-02T10:11:41Z" name="testSuperposeStructures" finished-at="2023-07-02T10:11:41Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSuperposeStructures -->
      </class> <!-- jalview.ext.pymol.PymolCommandsTest -->
      <class name="jalview.analysis.AnnotationSorterTest">
        <test-method is-config="true" signature="setUpJvOptionPane()[pri:0, instance:jalview.analysis.AnnotationSorterTest@50b8ae8d]" started-at="2023-07-02T10:11:53Z" name="setUpJvOptionPane" finished-at="2023-07-02T10:11:53Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpJvOptionPane -->
        <test-method signature="testNoSort_autocalcFirst()[pri:0, instance:jalview.analysis.AnnotationSorterTest@50b8ae8d]" started-at="2023-07-02T10:11:53Z" name="testNoSort_autocalcFirst" finished-at="2023-07-02T10:11:53Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testNoSort_autocalcFirst -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:jalview.analysis.AnnotationSorterTest@50b8ae8d]" started-at="2023-07-02T10:11:53Z" name="setUp" finished-at="2023-07-02T10:11:53Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:jalview.analysis.AnnotationSorterTest@50b8ae8d]" started-at="2023-07-02T10:11:53Z" name="setUp" finished-at="2023-07-02T10:11:53Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="testSortBySequenceAndType_autocalcFirst()[pri:0, instance:jalview.analysis.AnnotationSorterTest@50b8ae8d]" started-at="2023-07-02T10:11:53Z" name="testSortBySequenceAndType_autocalcFirst" finished-at="2023-07-02T10:11:53Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSortBySequenceAndType_autocalcFirst -->
        <test-method signature="testSortByTypeAndSequence_autocalcFirst()[pri:0, instance:jalview.analysis.AnnotationSorterTest@50b8ae8d]" started-at="2023-07-02T10:11:53Z" name="testSortByTypeAndSequence_autocalcFirst" finished-at="2023-07-02T10:11:53Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSortByTypeAndSequence_autocalcFirst -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:jalview.analysis.AnnotationSorterTest@50b8ae8d]" started-at="2023-07-02T10:11:53Z" name="setUp" finished-at="2023-07-02T10:11:53Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="testSort_timingPresorted()[pri:0, instance:jalview.analysis.AnnotationSorterTest@50b8ae8d]" started-at="2023-07-02T10:11:53Z" name="testSort_timingPresorted" finished-at="2023-07-02T10:11:54Z" duration-ms="206" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSort_timingPresorted -->
        <test-method signature="testSortByTypeAndSequence_autocalcLast()[pri:0, instance:jalview.analysis.AnnotationSorterTest@50b8ae8d]" started-at="2023-07-02T10:11:53Z" name="testSortByTypeAndSequence_autocalcLast" finished-at="2023-07-02T10:11:53Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSortByTypeAndSequence_autocalcLast -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:jalview.analysis.AnnotationSorterTest@50b8ae8d]" started-at="2023-07-02T10:11:53Z" name="setUp" finished-at="2023-07-02T10:11:53Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="testSortBySequenceAndType_autocalcLast()[pri:0, instance:jalview.analysis.AnnotationSorterTest@50b8ae8d]" started-at="2023-07-02T10:11:53Z" name="testSortBySequenceAndType_autocalcLast" finished-at="2023-07-02T10:11:53Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSortBySequenceAndType_autocalcLast -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:jalview.analysis.AnnotationSorterTest@50b8ae8d]" started-at="2023-07-02T10:11:53Z" name="setUp" finished-at="2023-07-02T10:11:53Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:jalview.analysis.AnnotationSorterTest@50b8ae8d]" started-at="2023-07-02T10:11:53Z" name="setUp" finished-at="2023-07-02T10:11:53Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:jalview.analysis.AnnotationSorterTest@50b8ae8d]" started-at="2023-07-02T10:11:54Z" name="setUp" finished-at="2023-07-02T10:11:54Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="testSort_timingSemisorted()[pri:0, instance:jalview.analysis.AnnotationSorterTest@50b8ae8d]" started-at="2023-07-02T10:11:54Z" name="testSort_timingSemisorted" finished-at="2023-07-02T10:11:54Z" duration-ms="195" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSort_timingSemisorted -->
        <test-method signature="testSort_timingUnsorted()[pri:0, instance:jalview.analysis.AnnotationSorterTest@50b8ae8d]" started-at="2023-07-02T10:11:54Z" name="testSort_timingUnsorted" finished-at="2023-07-02T10:11:54Z" duration-ms="85" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSort_timingUnsorted -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:jalview.analysis.AnnotationSorterTest@50b8ae8d]" started-at="2023-07-02T10:11:54Z" name="setUp" finished-at="2023-07-02T10:11:54Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
      </class> <!-- jalview.analysis.AnnotationSorterTest -->
      <class name="jalview.util.matcher.ConditionTest">
        <test-method signature="testFromString()[pri:0, instance:jalview.util.matcher.ConditionTest@3b582111]" started-at="2023-07-02T10:13:43Z" name="testFromString" finished-at="2023-07-02T10:13:43Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFromString -->
        <test-method signature="testToString()[pri:0, instance:jalview.util.matcher.ConditionTest@3b582111]" started-at="2023-07-02T10:13:43Z" name="testToString" finished-at="2023-07-02T10:13:43Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testToString -->
        <test-method signature="testGetStableName()[pri:0, instance:jalview.util.matcher.ConditionTest@3b582111]" started-at="2023-07-02T10:13:43Z" name="testGetStableName" finished-at="2023-07-02T10:13:43Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetStableName -->
      </class> <!-- jalview.util.matcher.ConditionTest -->
      <class name="jalview.gui.JvSwingUtilsTest">
        <test-method signature="testGetScrollBarProportion()[pri:0, instance:jalview.gui.JvSwingUtilsTest@1e287667]" started-at="2023-07-02T10:11:41Z" name="testGetScrollBarProportion" finished-at="2023-07-02T10:11:41Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetScrollBarProportion -->
        <test-method is-config="true" signature="setUpJvOptionPane()[pri:0, instance:jalview.gui.JvSwingUtilsTest@1e287667]" started-at="2023-07-02T10:11:41Z" name="setUpJvOptionPane" finished-at="2023-07-02T10:11:41Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpJvOptionPane -->
        <test-method signature="testGetScrollValueForProportion()[pri:0, instance:jalview.gui.JvSwingUtilsTest@1e287667]" started-at="2023-07-02T10:11:41Z" name="testGetScrollValueForProportion" finished-at="2023-07-02T10:11:41Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetScrollValueForProportion -->
        <test-method signature="testWrapTooltip_longText()[pri:0, instance:jalview.gui.JvSwingUtilsTest@1e287667]" started-at="2023-07-02T10:11:41Z" name="testWrapTooltip_longText" finished-at="2023-07-02T10:11:41Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testWrapTooltip_longText -->
        <test-method signature="testWrapTooltip_multilineShortText()[pri:0, instance:jalview.gui.JvSwingUtilsTest@1e287667]" started-at="2023-07-02T10:11:41Z" name="testWrapTooltip_multilineShortText" finished-at="2023-07-02T10:11:41Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testWrapTooltip_multilineShortText -->
        <test-method signature="testWrapTooltip_shortText()[pri:0, instance:jalview.gui.JvSwingUtilsTest@1e287667]" started-at="2023-07-02T10:11:41Z" name="testWrapTooltip_shortText" finished-at="2023-07-02T10:11:41Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testWrapTooltip_shortText -->
      </class> <!-- jalview.gui.JvSwingUtilsTest -->
      <class name="jalview.gui.AnnotationRowFilterTest">
        <test-method is-config="true" signature="setUp()[pri:0, instance:jalview.gui.AnnotationRowFilterTest@6bd51ed8]" started-at="2023-07-02T10:12:07Z" name="setUp" finished-at="2023-07-02T10:12:07Z" duration-ms="19" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="testGetAnnotationItems()[pri:0, instance:jalview.gui.AnnotationRowFilterTest@6bd51ed8]" started-at="2023-07-02T10:12:07Z" name="testGetAnnotationItems" finished-at="2023-07-02T10:12:07Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetAnnotationItems -->
      </class> <!-- jalview.gui.AnnotationRowFilterTest -->
      <class name="jalview.io.gff.InterProScanHelperTest">
        <test-method is-config="true" signature="setUpJvOptionPane()[pri:0, instance:jalview.io.gff.InterProScanHelperTest@57dc9128]" started-at="2023-07-02T10:12:18Z" name="setUpJvOptionPane" finished-at="2023-07-02T10:12:18Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpJvOptionPane -->
        <test-method signature="testProcessProteinMatch()[pri:0, instance:jalview.io.gff.InterProScanHelperTest@57dc9128]" started-at="2023-07-02T10:12:18Z" name="testProcessProteinMatch" finished-at="2023-07-02T10:12:18Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testProcessProteinMatch -->
      </class> <!-- jalview.io.gff.InterProScanHelperTest -->
      <class name="jalview.analysis.scoremodels.PIDModelTest">
        <test-method signature="testComputePID_matchesComparisonPID()[pri:0, instance:jalview.analysis.scoremodels.PIDModelTest@60afd40d]" started-at="2023-07-02T10:12:18Z" name="testComputePID_matchesComparisonPID" finished-at="2023-07-02T10:12:18Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testComputePID_matchesComparisonPID -->
        <test-method signature="testComputePID_matchShortestSequence()[pri:0, instance:jalview.analysis.scoremodels.PIDModelTest@60afd40d]" started-at="2023-07-02T10:12:18Z" name="testComputePID_matchShortestSequence" finished-at="2023-07-02T10:12:18Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testComputePID_matchShortestSequence -->
        <test-method signature="testComputePID_matchLongestSequence()[pri:0, instance:jalview.analysis.scoremodels.PIDModelTest@60afd40d]" started-at="2023-07-02T10:12:18Z" name="testComputePID_matchLongestSequence" finished-at="2023-07-02T10:12:18Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testComputePID_matchLongestSequence -->
        <test-method signature="testGetPairwiseScore()[pri:0, instance:jalview.analysis.scoremodels.PIDModelTest@60afd40d]" started-at="2023-07-02T10:12:18Z" name="testGetPairwiseScore" finished-at="2023-07-02T10:12:18Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetPairwiseScore -->
      </class> <!-- jalview.analysis.scoremodels.PIDModelTest -->
      <class name="jalview.ws.ebi.EBIFetchClientTest">
        <test-method is-config="true" signature="setUpJvOptionPane()[pri:0, instance:jalview.ws.ebi.EBIFetchClientTest@5bf61e67]" started-at="2023-07-02T10:11:38Z" name="setUpJvOptionPane" finished-at="2023-07-02T10:11:38Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpJvOptionPane -->
        <test-method signature="testBuildUrl()[pri:0, instance:jalview.ws.ebi.EBIFetchClientTest@5bf61e67]" started-at="2023-07-02T10:11:38Z" name="testBuildUrl" finished-at="2023-07-02T10:11:38Z" duration-ms="5" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testBuildUrl -->
        <test-method signature="testParseIds()[pri:0, instance:jalview.ws.ebi.EBIFetchClientTest@5bf61e67]" started-at="2023-07-02T10:11:38Z" name="testParseIds" finished-at="2023-07-02T10:11:38Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testParseIds -->
      </class> <!-- jalview.ws.ebi.EBIFetchClientTest -->
      <class name="jalview.datamodel.AlignedCodonIteratorTest">
        <test-method signature="testNext()[pri:0, instance:jalview.datamodel.AlignedCodonIteratorTest@74d7184a]" started-at="2023-07-02T10:13:43Z" name="testNext" finished-at="2023-07-02T10:13:43Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testNext -->
        <test-method signature="testNext_incompleteCodon()[pri:0, instance:jalview.datamodel.AlignedCodonIteratorTest@74d7184a]" started-at="2023-07-02T10:13:43Z" name="testNext_incompleteCodon" finished-at="2023-07-02T10:13:43Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testNext_incompleteCodon -->
        <test-method is-config="true" signature="setUpJvOptionPane()[pri:0, instance:jalview.datamodel.AlignedCodonIteratorTest@74d7184a]" started-at="2023-07-02T10:13:43Z" name="setUpJvOptionPane" finished-at="2023-07-02T10:13:43Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpJvOptionPane -->
        <test-method signature="testAnother()[pri:0, instance:jalview.datamodel.AlignedCodonIteratorTest@74d7184a]" started-at="2023-07-02T10:13:43Z" name="testAnother" finished-at="2023-07-02T10:13:43Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAnother -->
        <test-method signature="testNext_withOffset()[pri:0, instance:jalview.datamodel.AlignedCodonIteratorTest@74d7184a]" started-at="2023-07-02T10:13:43Z" name="testNext_withOffset" finished-at="2023-07-02T10:13:43Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testNext_withOffset -->
        <test-method signature="testNext_unmappedPeptide()[pri:0, instance:jalview.datamodel.AlignedCodonIteratorTest@74d7184a]" started-at="2023-07-02T10:13:43Z" name="testNext_unmappedPeptide" finished-at="2023-07-02T10:13:43Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testNext_unmappedPeptide -->
      </class> <!-- jalview.datamodel.AlignedCodonIteratorTest -->
      <class name="jalview.datamodel.AllColsIteratorTest">
        <test-method signature="testLastNext()[pri:0, instance:jalview.datamodel.AllColsIteratorTest@5cbf9e9f]" started-at="2023-07-02T10:13:44Z" name="testLastNext" finished-at="2023-07-02T10:13:44Z" duration-ms="1" status="PASS">
          <exception class="java.util.NoSuchElementException">
            <full-stacktrace>
              <![CDATA[java.util.NoSuchElementException
	at jalview.datamodel.AllColsIterator.next(AllColsIterator.java:60)
	at jalview.datamodel.AllColsIteratorTest.testLastNext(AllColsIteratorTest.java:72)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:648)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:834)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1142)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:124)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:771)
	at org.testng.TestRunner.run(TestRunner.java:621)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:357)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:352)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:310)
	at org.testng.SuiteRunner.run(SuiteRunner.java:259)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1176)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1101)
	at org.testng.TestNG.run(TestNG.java:1009)
	at org.gradle.api.internal.tasks.testing.testng.TestNGTestClassProcessor.runTests(TestNGTestClassProcessor.java:145)
	at org.gradle.api.internal.tasks.testing.testng.TestNGTestClassProcessor.stop(TestNGTestClassProcessor.java:92)
	at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.stop(SuiteTestClassProcessor.java:62)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:36)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24)
	at org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:33)
	at org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:94)
	at com.sun.proxy.$Proxy2.stop(Unknown Source)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker$3.run(TestWorker.java:193)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.executeAndMaintainThreadName(TestWorker.java:129)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.execute(TestWorker.java:100)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.execute(TestWorker.java:60)
	at org.gradle.process.internal.worker.child.ActionExecutionWorker.execute(ActionExecutionWorker.java:56)
	at org.gradle.process.internal.worker.child.SystemApplicationClassLoaderWorker.call(SystemApplicationClassLoaderWorker.java:113)
	at org.gradle.process.internal.worker.child.SystemApplicationClassLoaderWorker.call(SystemApplicationClassLoaderWorker.java:65)
	at worker.org.gradle.process.internal.worker.GradleWorkerMain.run(GradleWorkerMain.java:69)
	at worker.org.gradle.process.internal.worker.GradleWorkerMain.main(GradleWorkerMain.java:74)
]]>
            </full-stacktrace>
          </exception> <!-- java.util.NoSuchElementException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testLastNext -->
        <test-method is-config="true" signature="setup()[pri:0, instance:jalview.datamodel.AllColsIteratorTest@5cbf9e9f]" started-at="2023-07-02T10:13:44Z" name="setup" finished-at="2023-07-02T10:13:44Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="testHasNextAndNext()[pri:0, instance:jalview.datamodel.AllColsIteratorTest@5cbf9e9f]" started-at="2023-07-02T10:13:44Z" name="testHasNextAndNext" finished-at="2023-07-02T10:13:44Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testHasNextAndNext -->
        <test-method signature="testRemove()[pri:0, instance:jalview.datamodel.AllColsIteratorTest@5cbf9e9f]" started-at="2023-07-02T10:13:44Z" name="testRemove" finished-at="2023-07-02T10:13:44Z" duration-ms="0" status="PASS">
          <exception class="java.lang.UnsupportedOperationException">
            <full-stacktrace>
              <![CDATA[java.lang.UnsupportedOperationException
	at jalview.datamodel.AllColsIterator.remove(AllColsIterator.java:71)
	at jalview.datamodel.AllColsIteratorTest.testRemove(AllColsIteratorTest.java:86)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:648)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:834)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1142)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:124)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:771)
	at org.testng.TestRunner.run(TestRunner.java:621)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:357)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:352)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:310)
	at org.testng.SuiteRunner.run(SuiteRunner.java:259)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1176)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1101)
	at org.testng.TestNG.run(TestNG.java:1009)
	at org.gradle.api.internal.tasks.testing.testng.TestNGTestClassProcessor.runTests(TestNGTestClassProcessor.java:145)
	at org.gradle.api.internal.tasks.testing.testng.TestNGTestClassProcessor.stop(TestNGTestClassProcessor.java:92)
	at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.stop(SuiteTestClassProcessor.java:62)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:36)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24)
	at org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:33)
	at org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:94)
	at com.sun.proxy.$Proxy2.stop(Unknown Source)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker$3.run(TestWorker.java:193)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.executeAndMaintainThreadName(TestWorker.java:129)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.execute(TestWorker.java:100)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.execute(TestWorker.java:60)
	at org.gradle.process.internal.worker.child.ActionExecutionWorker.execute(ActionExecutionWorker.java:56)
	at org.gradle.process.internal.worker.child.SystemApplicationClassLoaderWorker.call(SystemApplicationClassLoaderWorker.java:113)
	at org.gradle.process.internal.worker.child.SystemApplicationClassLoaderWorker.call(SystemApplicationClassLoaderWorker.java:65)
	at worker.org.gradle.process.internal.worker.GradleWorkerMain.run(GradleWorkerMain.java:69)
	at worker.org.gradle.process.internal.worker.GradleWorkerMain.main(GradleWorkerMain.java:74)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.UnsupportedOperationException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemove -->
        <test-method signature="testOneElement()[pri:0, instance:jalview.datamodel.AllColsIteratorTest@5cbf9e9f]" started-at="2023-07-02T10:13:44Z" name="testOneElement" finished-at="2023-07-02T10:13:44Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testOneElement -->
      </class> <!-- jalview.datamodel.AllColsIteratorTest -->
      <class name="jalview.viewmodel.OverviewDimensionsHideHiddenTest">
        <test-method is-config="true" signature="setUpAlignment()[pri:0, instance:jalview.viewmodel.OverviewDimensionsHideHiddenTest@1e8823d2]" started-at="2023-07-02T10:13:43Z" name="setUpAlignment" finished-at="2023-07-02T10:13:44Z" duration-ms="12" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpAlignment -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:jalview.viewmodel.OverviewDimensionsHideHiddenTest@1e8823d2]" started-at="2023-07-02T10:13:44Z" name="setUp" finished-at="2023-07-02T10:13:44Z" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="testConstructor()[pri:0, instance:jalview.viewmodel.OverviewDimensionsHideHiddenTest@1e8823d2]" started-at="2023-07-02T10:13:44Z" name="testConstructor" finished-at="2023-07-02T10:13:44Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testConstructor -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:jalview.viewmodel.OverviewDimensionsHideHiddenTest@1e8823d2]" started-at="2023-07-02T10:13:44Z" name="setUp" finished-at="2023-07-02T10:13:44Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="testDragging()[pri:0, instance:jalview.viewmodel.OverviewDimensionsHideHiddenTest@1e8823d2]" started-at="2023-07-02T10:13:44Z" name="testDragging" finished-at="2023-07-02T10:13:44Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testDragging -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:jalview.viewmodel.OverviewDimensionsHideHiddenTest@1e8823d2]" started-at="2023-07-02T10:13:44Z" name="setUp" finished-at="2023-07-02T10:13:44Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="testFromMouseWithHiddenColsAtEnd()[pri:0, instance:jalview.viewmodel.OverviewDimensionsHideHiddenTest@1e8823d2]" started-at="2023-07-02T10:13:44Z" name="testFromMouseWithHiddenColsAtEnd" finished-at="2023-07-02T10:13:44Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFromMouseWithHiddenColsAtEnd -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:jalview.viewmodel.OverviewDimensionsHideHiddenTest@1e8823d2]" started-at="2023-07-02T10:13:44Z" name="setUp" finished-at="2023-07-02T10:13:44Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="testFromMouseWithHiddenColsAtStart()[pri:0, instance:jalview.viewmodel.OverviewDimensionsHideHiddenTest@1e8823d2]" started-at="2023-07-02T10:13:44Z" name="testFromMouseWithHiddenColsAtStart" finished-at="2023-07-02T10:13:44Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFromMouseWithHiddenColsAtStart -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:jalview.viewmodel.OverviewDimensionsHideHiddenTest@1e8823d2]" started-at="2023-07-02T10:13:44Z" name="setUp" finished-at="2023-07-02T10:13:44Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="testFromMouseWithHiddenColsInMiddle()[pri:0, instance:jalview.viewmodel.OverviewDimensionsHideHiddenTest@1e8823d2]" started-at="2023-07-02T10:13:44Z" name="testFromMouseWithHiddenColsInMiddle" finished-at="2023-07-02T10:13:44Z" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFromMouseWithHiddenColsInMiddle -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:jalview.viewmodel.OverviewDimensionsHideHiddenTest@1e8823d2]" started-at="2023-07-02T10:13:44Z" name="setUp" finished-at="2023-07-02T10:13:44Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="testFromMouseWithHiddenRowsAtEnd()[pri:0, instance:jalview.viewmodel.OverviewDimensionsHideHiddenTest@1e8823d2]" started-at="2023-07-02T10:13:44Z" name="testFromMouseWithHiddenRowsAtEnd" finished-at="2023-07-02T10:13:44Z" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFromMouseWithHiddenRowsAtEnd -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:jalview.viewmodel.OverviewDimensionsHideHiddenTest@1e8823d2]" started-at="2023-07-02T10:13:44Z" name="setUp" finished-at="2023-07-02T10:13:44Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="testFromMouseWithHiddenRowsAtStart()[pri:0, instance:jalview.viewmodel.OverviewDimensionsHideHiddenTest@1e8823d2]" started-at="2023-07-02T10:13:44Z" name="testFromMouseWithHiddenRowsAtStart" finished-at="2023-07-02T10:13:44Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFromMouseWithHiddenRowsAtStart -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:jalview.viewmodel.OverviewDimensionsHideHiddenTest@1e8823d2]" started-at="2023-07-02T10:13:44Z" name="setUp" finished-at="2023-07-02T10:13:44Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="testFromMouseWithHiddenRowsInMiddle()[pri:0, instance:jalview.viewmodel.OverviewDimensionsHideHiddenTest@1e8823d2]" started-at="2023-07-02T10:13:44Z" name="testFromMouseWithHiddenRowsInMiddle" finished-at="2023-07-02T10:13:44Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFromMouseWithHiddenRowsInMiddle -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:jalview.viewmodel.OverviewDimensionsHideHiddenTest@1e8823d2]" started-at="2023-07-02T10:13:44Z" name="setUp" finished-at="2023-07-02T10:13:44Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="testPositionInBox()[pri:0, instance:jalview.viewmodel.OverviewDimensionsHideHiddenTest@1e8823d2]" started-at="2023-07-02T10:13:44Z" name="testPositionInBox" finished-at="2023-07-02T10:13:44Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testPositionInBox -->
        <test-method signature="testSetBoxFromMouseClick()[pri:0, instance:jalview.viewmodel.OverviewDimensionsHideHiddenTest@1e8823d2]" started-at="2023-07-02T10:13:44Z" name="testSetBoxFromMouseClick" finished-at="2023-07-02T10:13:44Z" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSetBoxFromMouseClick -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:jalview.viewmodel.OverviewDimensionsHideHiddenTest@1e8823d2]" started-at="2023-07-02T10:13:44Z" name="setUp" finished-at="2023-07-02T10:13:44Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:jalview.viewmodel.OverviewDimensionsHideHiddenTest@1e8823d2]" started-at="2023-07-02T10:13:44Z" name="setUp" finished-at="2023-07-02T10:13:44Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="testSetBoxFromViewport()[pri:0, instance:jalview.viewmodel.OverviewDimensionsHideHiddenTest@1e8823d2]" started-at="2023-07-02T10:13:44Z" name="testSetBoxFromViewport" finished-at="2023-07-02T10:13:44Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSetBoxFromViewport -->
        <test-method signature="testSetBoxFromViewportHiddenColsAtEnd()[pri:0, instance:jalview.viewmodel.OverviewDimensionsHideHiddenTest@1e8823d2]" started-at="2023-07-02T10:13:44Z" name="testSetBoxFromViewportHiddenColsAtEnd" finished-at="2023-07-02T10:13:44Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSetBoxFromViewportHiddenColsAtEnd -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:jalview.viewmodel.OverviewDimensionsHideHiddenTest@1e8823d2]" started-at="2023-07-02T10:13:44Z" name="setUp" finished-at="2023-07-02T10:13:44Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:jalview.viewmodel.OverviewDimensionsHideHiddenTest@1e8823d2]" started-at="2023-07-02T10:13:44Z" name="setUp" finished-at="2023-07-02T10:13:44Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="testSetBoxFromViewportHiddenColsAtStart()[pri:0, instance:jalview.viewmodel.OverviewDimensionsHideHiddenTest@1e8823d2]" started-at="2023-07-02T10:13:44Z" name="testSetBoxFromViewportHiddenColsAtStart" finished-at="2023-07-02T10:13:44Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSetBoxFromViewportHiddenColsAtStart -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:jalview.viewmodel.OverviewDimensionsHideHiddenTest@1e8823d2]" started-at="2023-07-02T10:13:44Z" name="setUp" finished-at="2023-07-02T10:13:44Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:jalview.viewmodel.OverviewDimensionsHideHiddenTest@1e8823d2]" started-at="2023-07-02T10:13:44Z" name="setUp" finished-at="2023-07-02T10:13:44Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="testSetBoxFromViewportHiddenColsInMiddle()[pri:0, instance:jalview.viewmodel.OverviewDimensionsHideHiddenTest@1e8823d2]" started-at="2023-07-02T10:13:44Z" name="testSetBoxFromViewportHiddenColsInMiddle" finished-at="2023-07-02T10:13:44Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSetBoxFromViewportHiddenColsInMiddle -->
        <test-method signature="testSetBoxFromViewportHiddenRowsAtEnd()[pri:0, instance:jalview.viewmodel.OverviewDimensionsHideHiddenTest@1e8823d2]" started-at="2023-07-02T10:13:44Z" name="testSetBoxFromViewportHiddenRowsAtEnd" finished-at="2023-07-02T10:13:44Z" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSetBoxFromViewportHiddenRowsAtEnd -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:jalview.viewmodel.OverviewDimensionsHideHiddenTest@1e8823d2]" started-at="2023-07-02T10:13:44Z" name="setUp" finished-at="2023-07-02T10:13:44Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="testSetBoxFromViewportHiddenRowsAtStart()[pri:0, instance:jalview.viewmodel.OverviewDimensionsHideHiddenTest@1e8823d2]" started-at="2023-07-02T10:13:44Z" name="testSetBoxFromViewportHiddenRowsAtStart" finished-at="2023-07-02T10:13:44Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSetBoxFromViewportHiddenRowsAtStart -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:jalview.viewmodel.OverviewDimensionsHideHiddenTest@1e8823d2]" started-at="2023-07-02T10:13:44Z" name="setUp" finished-at="2023-07-02T10:13:44Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="testSetBoxFromViewportHiddenRowsInMiddle()[pri:0, instance:jalview.viewmodel.OverviewDimensionsHideHiddenTest@1e8823d2]" started-at="2023-07-02T10:13:44Z" name="testSetBoxFromViewportHiddenRowsInMiddle" finished-at="2023-07-02T10:13:44Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSetBoxFromViewportHiddenRowsInMiddle -->
        <test-method is-config="true" signature="cleanUp()[pri:0, instance:jalview.viewmodel.OverviewDimensionsHideHiddenTest@1e8823d2]" started-at="2023-07-02T10:13:44Z" name="cleanUp" finished-at="2023-07-02T10:13:44Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cleanUp -->
      </class> <!-- jalview.viewmodel.OverviewDimensionsHideHiddenTest -->
      <class name="jalview.io.EmblFlatFileTest">
        <test-method signature="testAdjustForProteinLength()[pri:0, instance:jalview.io.EmblFlatFileTest@5fd9b663]" started-at="2023-07-02T10:12:18Z" name="testAdjustForProteinLength" finished-at="2023-07-02T10:12:18Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAdjustForProteinLength -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:jalview.io.EmblFlatFileTest@5fd9b663]" started-at="2023-07-02T10:12:18Z" name="setUp" finished-at="2023-07-02T10:12:18Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="testParse()[pri:0, instance:jalview.io.EmblFlatFileTest@5fd9b663]" started-at="2023-07-02T10:12:18Z" name="testParse" finished-at="2023-07-02T10:12:18Z" duration-ms="13" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testParse -->
        <test-method signature="testParseToRNA()[pri:0, instance:jalview.io.EmblFlatFileTest@5fd9b663]" started-at="2023-07-02T10:12:18Z" name="testParseToRNA" finished-at="2023-07-02T10:12:18Z" duration-ms="12" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testParseToRNA -->
        <test-method signature="testParse_noUniprotXref()[pri:0, instance:jalview.io.EmblFlatFileTest@5fd9b663]" started-at="2023-07-02T10:12:18Z" name="testParse_noUniprotXref" finished-at="2023-07-02T10:12:18Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testParse_noUniprotXref -->
        <test-method signature="testRemoveQuotes()[pri:0, instance:jalview.io.EmblFlatFileTest@5fd9b663]" started-at="2023-07-02T10:12:18Z" name="testRemoveQuotes" finished-at="2023-07-02T10:12:18Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemoveQuotes -->
        <test-method signature="testParse_codonStartNot1()[pri:0, instance:jalview.io.EmblFlatFileTest@5fd9b663]" started-at="2023-07-02T10:12:18Z" name="testParse_codonStartNot1" finished-at="2023-07-02T10:12:18Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testParse_codonStartNot1 -->
      </class> <!-- jalview.io.EmblFlatFileTest -->
      <class name="jalview.gui.JvOptionPaneTest">
        <test-method is-config="true" signature="setUpJvOptionPane()[pri:0, instance:jalview.gui.JvOptionPaneTest@25243bc1]" started-at="2023-07-02T10:11:39Z" name="setUpJvOptionPane" finished-at="2023-07-02T10:11:39Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpJvOptionPane -->
        <test-method signature="showConfirmDialogFamilyTest()[pri:0, instance:jalview.gui.JvOptionPaneTest@25243bc1]" started-at="2023-07-02T10:11:39Z" name="showConfirmDialogFamilyTest" finished-at="2023-07-02T10:11:39Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- showConfirmDialogFamilyTest -->
        <test-method signature="showInputDialogFamilyTest()[pri:0, instance:jalview.gui.JvOptionPaneTest@25243bc1]" started-at="2023-07-02T10:11:39Z" name="showInputDialogFamilyTest" finished-at="2023-07-02T10:11:39Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- showInputDialogFamilyTest -->
        <test-method signature="showInternalConfirmDialogFamilyTest()[pri:0, instance:jalview.gui.JvOptionPaneTest@25243bc1]" started-at="2023-07-02T10:11:39Z" name="showInternalConfirmDialogFamilyTest" finished-at="2023-07-02T10:11:39Z" duration-ms="176" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- showInternalConfirmDialogFamilyTest -->
        <test-method signature="showInternalMessageDialogFamilyTest()[pri:0, instance:jalview.gui.JvOptionPaneTest@25243bc1]" started-at="2023-07-02T10:11:39Z" name="showInternalMessageDialogFamilyTest" finished-at="2023-07-02T10:11:39Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- showInternalMessageDialogFamilyTest -->
        <test-method signature="showMessageDialogFamilyTest()[pri:0, instance:jalview.gui.JvOptionPaneTest@25243bc1]" started-at="2023-07-02T10:11:39Z" name="showMessageDialogFamilyTest" finished-at="2023-07-02T10:11:39Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- showMessageDialogFamilyTest -->
      </class> <!-- jalview.gui.JvOptionPaneTest -->
      <class name="jalview.schemes.JalviewColourSchemeTest">
        <test-method signature="testGetSchemeClass()[pri:0, instance:jalview.schemes.JalviewColourSchemeTest@6c44052e]" started-at="2023-07-02T10:12:07Z" name="testGetSchemeClass" finished-at="2023-07-02T10:12:07Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetSchemeClass -->
        <test-method signature="testToString()[pri:0, instance:jalview.schemes.JalviewColourSchemeTest@6c44052e]" started-at="2023-07-02T10:12:07Z" name="testToString" finished-at="2023-07-02T10:12:07Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testToString -->
      </class> <!-- jalview.schemes.JalviewColourSchemeTest -->
      <class name="jalview.io.TCoffeeScoreFileTest">
        <test-method is-config="true" signature="setUpJvOptionPane()[pri:0, instance:jalview.io.TCoffeeScoreFileTest@60b85ba1]" started-at="2023-07-02T10:12:00Z" name="setUpJvOptionPane" finished-at="2023-07-02T10:12:00Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpJvOptionPane -->
        <test-method signature="testGetAsArray()[pri:0, instance:jalview.io.TCoffeeScoreFileTest@60b85ba1]" started-at="2023-07-02T10:12:00Z" name="testGetAsArray" finished-at="2023-07-02T10:12:00Z" duration-ms="4" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetAsArray -->
        <test-method signature="testGetAsList()[pri:0, instance:jalview.io.TCoffeeScoreFileTest@60b85ba1]" started-at="2023-07-02T10:12:00Z" name="testGetAsList" finished-at="2023-07-02T10:12:00Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetAsList -->
        <test-method signature="testHeightAndWidth()[pri:0, instance:jalview.io.TCoffeeScoreFileTest@60b85ba1]" started-at="2023-07-02T10:12:00Z" name="testHeightAndWidth" finished-at="2023-07-02T10:12:00Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testHeightAndWidth -->
        <test-method signature="testHeightAndWidthWithResidueNumbers()[pri:0, instance:jalview.io.TCoffeeScoreFileTest@60b85ba1]" started-at="2023-07-02T10:12:00Z" name="testHeightAndWidthWithResidueNumbers" finished-at="2023-07-02T10:12:00Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testHeightAndWidthWithResidueNumbers -->
        <test-method signature="testParse()[pri:0, instance:jalview.io.TCoffeeScoreFileTest@60b85ba1]" started-at="2023-07-02T10:12:00Z" name="testParse" finished-at="2023-07-02T10:12:00Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testParse -->
        <test-method signature="testReadBlock()[pri:0, instance:jalview.io.TCoffeeScoreFileTest@60b85ba1]" started-at="2023-07-02T10:12:00Z" name="testReadBlock" finished-at="2023-07-02T10:12:00Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testReadBlock -->
        <test-method signature="testReadHeader()[pri:0, instance:jalview.io.TCoffeeScoreFileTest@60b85ba1]" started-at="2023-07-02T10:12:00Z" name="testReadHeader" finished-at="2023-07-02T10:12:00Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testReadHeader -->
        <test-method signature="testWrongFile()[pri:0, instance:jalview.io.TCoffeeScoreFileTest@60b85ba1]" started-at="2023-07-02T10:12:00Z" name="testWrongFile" finished-at="2023-07-02T10:12:00Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testWrongFile -->
      </class> <!-- jalview.io.TCoffeeScoreFileTest -->
      <class name="jalview.datamodel.VisibleRowsIteratorTest">
        <test-method is-config="true" signature="setup()[pri:0, instance:jalview.datamodel.VisibleRowsIteratorTest@27a0a5a2]" started-at="2023-07-02T10:12:18Z" name="setup" finished-at="2023-07-02T10:12:18Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="testHasNextAndNextEndHidden()[pri:0, instance:jalview.datamodel.VisibleRowsIteratorTest@27a0a5a2]" started-at="2023-07-02T10:12:18Z" name="testHasNextAndNextEndHidden" finished-at="2023-07-02T10:12:18Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testHasNextAndNextEndHidden -->
        <test-method signature="testHasNextAndNextNoHidden()[pri:0, instance:jalview.datamodel.VisibleRowsIteratorTest@27a0a5a2]" started-at="2023-07-02T10:12:18Z" name="testHasNextAndNextNoHidden" finished-at="2023-07-02T10:12:18Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testHasNextAndNextNoHidden -->
        <test-method signature="testHasNextAndNextWithHidden()[pri:0, instance:jalview.datamodel.VisibleRowsIteratorTest@27a0a5a2]" started-at="2023-07-02T10:12:18Z" name="testHasNextAndNextWithHidden" finished-at="2023-07-02T10:12:18Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testHasNextAndNextWithHidden -->
        <test-method signature="testHasNextAndNextStartHidden()[pri:0, instance:jalview.datamodel.VisibleRowsIteratorTest@27a0a5a2]" started-at="2023-07-02T10:12:18Z" name="testHasNextAndNextStartHidden" finished-at="2023-07-02T10:12:18Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testHasNextAndNextStartHidden -->
        <test-method signature="testLastNextStartHidden()[pri:0, instance:jalview.datamodel.VisibleRowsIteratorTest@27a0a5a2]" started-at="2023-07-02T10:12:18Z" name="testLastNextStartHidden" finished-at="2023-07-02T10:12:18Z" duration-ms="0" status="PASS">
          <exception class="java.util.NoSuchElementException">
            <full-stacktrace>
              <![CDATA[java.util.NoSuchElementException
	at jalview.datamodel.VisibleRowsIterator.next(VisibleRowsIterator.java:84)
	at jalview.datamodel.VisibleRowsIteratorTest.testLastNextStartHidden(VisibleRowsIteratorTest.java:189)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:648)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:834)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1142)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:124)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:771)
	at org.testng.TestRunner.run(TestRunner.java:621)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:357)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:352)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:310)
	at org.testng.SuiteRunner.run(SuiteRunner.java:259)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1176)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1101)
	at org.testng.TestNG.run(TestNG.java:1009)
	at org.gradle.api.internal.tasks.testing.testng.TestNGTestClassProcessor.runTests(TestNGTestClassProcessor.java:145)
	at org.gradle.api.internal.tasks.testing.testng.TestNGTestClassProcessor.stop(TestNGTestClassProcessor.java:92)
	at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.stop(SuiteTestClassProcessor.java:62)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:36)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24)
	at org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:33)
	at org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:94)
	at com.sun.proxy.$Proxy2.stop(Unknown Source)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker$3.run(TestWorker.java:193)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.executeAndMaintainThreadName(TestWorker.java:129)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.execute(TestWorker.java:100)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.execute(TestWorker.java:60)
	at org.gradle.process.internal.worker.child.ActionExecutionWorker.execute(ActionExecutionWorker.java:56)
	at org.gradle.process.internal.worker.child.SystemApplicationClassLoaderWorker.call(SystemApplicationClassLoaderWorker.java:113)
	at org.gradle.process.internal.worker.child.SystemApplicationClassLoaderWorker.call(SystemApplicationClassLoaderWorker.java:65)
	at worker.org.gradle.process.internal.worker.GradleWorkerMain.run(GradleWorkerMain.java:69)
	at worker.org.gradle.process.internal.worker.GradleWorkerMain.main(GradleWorkerMain.java:74)
]]>
            </full-stacktrace>
          </exception> <!-- java.util.NoSuchElementException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testLastNextStartHidden -->
        <test-method signature="testLastNextEndHidden()[pri:0, instance:jalview.datamodel.VisibleRowsIteratorTest@27a0a5a2]" started-at="2023-07-02T10:12:18Z" name="testLastNextEndHidden" finished-at="2023-07-02T10:12:18Z" duration-ms="0" status="PASS">
          <exception class="java.util.NoSuchElementException">
            <full-stacktrace>
              <![CDATA[java.util.NoSuchElementException
	at jalview.datamodel.VisibleRowsIterator.next(VisibleRowsIterator.java:84)
	at jalview.datamodel.VisibleRowsIteratorTest.testLastNextEndHidden(VisibleRowsIteratorTest.java:208)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:648)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:834)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1142)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:124)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:771)
	at org.testng.TestRunner.run(TestRunner.java:621)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:357)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:352)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:310)
	at org.testng.SuiteRunner.run(SuiteRunner.java:259)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1176)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1101)
	at org.testng.TestNG.run(TestNG.java:1009)
	at org.gradle.api.internal.tasks.testing.testng.TestNGTestClassProcessor.runTests(TestNGTestClassProcessor.java:145)
	at org.gradle.api.internal.tasks.testing.testng.TestNGTestClassProcessor.stop(TestNGTestClassProcessor.java:92)
	at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.stop(SuiteTestClassProcessor.java:62)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:36)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24)
	at org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:33)
	at org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:94)
	at com.sun.proxy.$Proxy2.stop(Unknown Source)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker$3.run(TestWorker.java:193)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.executeAndMaintainThreadName(TestWorker.java:129)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.execute(TestWorker.java:100)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.execute(TestWorker.java:60)
	at org.gradle.process.internal.worker.child.ActionExecutionWorker.execute(ActionExecutionWorker.java:56)
	at org.gradle.process.internal.worker.child.SystemApplicationClassLoaderWorker.call(SystemApplicationClassLoaderWorker.java:113)
	at org.gradle.process.internal.worker.child.SystemApplicationClassLoaderWorker.call(SystemApplicationClassLoaderWorker.java:65)
	at worker.org.gradle.process.internal.worker.GradleWorkerMain.run(GradleWorkerMain.java:69)
	at worker.org.gradle.process.internal.worker.GradleWorkerMain.main(GradleWorkerMain.java:74)
]]>
            </full-stacktrace>
          </exception> <!-- java.util.NoSuchElementException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testLastNextEndHidden -->
        <test-method signature="testLastNextWithHidden()[pri:0, instance:jalview.datamodel.VisibleRowsIteratorTest@27a0a5a2]" started-at="2023-07-02T10:12:18Z" name="testLastNextWithHidden" finished-at="2023-07-02T10:12:18Z" duration-ms="0" status="PASS">
          <exception class="java.util.NoSuchElementException">
            <full-stacktrace>
              <![CDATA[java.util.NoSuchElementException
	at jalview.datamodel.VisibleRowsIterator.next(VisibleRowsIterator.java:84)
	at jalview.datamodel.VisibleRowsIteratorTest.testLastNextWithHidden(VisibleRowsIteratorTest.java:151)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:648)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:834)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1142)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:124)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:771)
	at org.testng.TestRunner.run(TestRunner.java:621)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:357)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:352)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:310)
	at org.testng.SuiteRunner.run(SuiteRunner.java:259)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1176)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1101)
	at org.testng.TestNG.run(TestNG.java:1009)
	at org.gradle.api.internal.tasks.testing.testng.TestNGTestClassProcessor.runTests(TestNGTestClassProcessor.java:145)
	at org.gradle.api.internal.tasks.testing.testng.TestNGTestClassProcessor.stop(TestNGTestClassProcessor.java:92)
	at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.stop(SuiteTestClassProcessor.java:62)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:36)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24)
	at org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:33)
	at org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:94)
	at com.sun.proxy.$Proxy2.stop(Unknown Source)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker$3.run(TestWorker.java:193)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.executeAndMaintainThreadName(TestWorker.java:129)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.execute(TestWorker.java:100)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.execute(TestWorker.java:60)
	at org.gradle.process.internal.worker.child.ActionExecutionWorker.execute(ActionExecutionWorker.java:56)
	at org.gradle.process.internal.worker.child.SystemApplicationClassLoaderWorker.call(SystemApplicationClassLoaderWorker.java:113)
	at org.gradle.process.internal.worker.child.SystemApplicationClassLoaderWorker.call(SystemApplicationClassLoaderWorker.java:65)
	at worker.org.gradle.process.internal.worker.GradleWorkerMain.run(GradleWorkerMain.java:69)
	at worker.org.gradle.process.internal.worker.GradleWorkerMain.main(GradleWorkerMain.java:74)
]]>
            </full-stacktrace>
          </exception> <!-- java.util.NoSuchElementException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testLastNextWithHidden -->
        <test-method signature="testRemove()[pri:0, instance:jalview.datamodel.VisibleRowsIteratorTest@27a0a5a2]" started-at="2023-07-02T10:12:18Z" name="testRemove" finished-at="2023-07-02T10:12:18Z" duration-ms="1" status="PASS">
          <exception class="java.lang.UnsupportedOperationException">
            <full-stacktrace>
              <![CDATA[java.lang.UnsupportedOperationException
	at jalview.datamodel.VisibleRowsIterator.remove(VisibleRowsIterator.java:97)
	at jalview.datamodel.VisibleRowsIteratorTest.testRemove(VisibleRowsIteratorTest.java:222)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:648)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:834)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1142)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:124)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:771)
	at org.testng.TestRunner.run(TestRunner.java:621)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:357)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:352)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:310)
	at org.testng.SuiteRunner.run(SuiteRunner.java:259)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1176)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1101)
	at org.testng.TestNG.run(TestNG.java:1009)
	at org.gradle.api.internal.tasks.testing.testng.TestNGTestClassProcessor.runTests(TestNGTestClassProcessor.java:145)
	at org.gradle.api.internal.tasks.testing.testng.TestNGTestClassProcessor.stop(TestNGTestClassProcessor.java:92)
	at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.stop(SuiteTestClassProcessor.java:62)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:36)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24)
	at org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:33)
	at org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:94)
	at com.sun.proxy.$Proxy2.stop(Unknown Source)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker$3.run(TestWorker.java:193)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.executeAndMaintainThreadName(TestWorker.java:129)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.execute(TestWorker.java:100)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.execute(TestWorker.java:60)
	at org.gradle.process.internal.worker.child.ActionExecutionWorker.execute(ActionExecutionWorker.java:56)
	at org.gradle.process.internal.worker.child.SystemApplicationClassLoaderWorker.call(SystemApplicationClassLoaderWorker.java:113)
	at org.gradle.process.internal.worker.child.SystemApplicationClassLoaderWorker.call(SystemApplicationClassLoaderWorker.java:65)
	at worker.org.gradle.process.internal.worker.GradleWorkerMain.run(GradleWorkerMain.java:69)
	at worker.org.gradle.process.internal.worker.GradleWorkerMain.main(GradleWorkerMain.java:74)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.UnsupportedOperationException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemove -->
        <test-method signature="testLastNextNoHidden()[pri:0, instance:jalview.datamodel.VisibleRowsIteratorTest@27a0a5a2]" started-at="2023-07-02T10:12:18Z" name="testLastNextNoHidden" finished-at="2023-07-02T10:12:18Z" duration-ms="0" status="PASS">
          <exception class="java.util.NoSuchElementException">
            <full-stacktrace>
              <![CDATA[java.util.NoSuchElementException
	at jalview.datamodel.VisibleRowsIterator.next(VisibleRowsIterator.java:84)
	at jalview.datamodel.VisibleRowsIteratorTest.testLastNextNoHidden(VisibleRowsIteratorTest.java:170)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:648)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:834)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1142)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:124)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:771)
	at org.testng.TestRunner.run(TestRunner.java:621)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:357)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:352)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:310)
	at org.testng.SuiteRunner.run(SuiteRunner.java:259)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1176)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1101)
	at org.testng.TestNG.run(TestNG.java:1009)
	at org.gradle.api.internal.tasks.testing.testng.TestNGTestClassProcessor.runTests(TestNGTestClassProcessor.java:145)
	at org.gradle.api.internal.tasks.testing.testng.TestNGTestClassProcessor.stop(TestNGTestClassProcessor.java:92)
	at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.stop(SuiteTestClassProcessor.java:62)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:36)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24)
	at org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:33)
	at org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:94)
	at com.sun.proxy.$Proxy2.stop(Unknown Source)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker$3.run(TestWorker.java:193)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.executeAndMaintainThreadName(TestWorker.java:129)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.execute(TestWorker.java:100)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.execute(TestWorker.java:60)
	at org.gradle.process.internal.worker.child.ActionExecutionWorker.execute(ActionExecutionWorker.java:56)
	at org.gradle.process.internal.worker.child.SystemApplicationClassLoaderWorker.call(SystemApplicationClassLoaderWorker.java:113)
	at org.gradle.process.internal.worker.child.SystemApplicationClassLoaderWorker.call(SystemApplicationClassLoaderWorker.java:65)
	at worker.org.gradle.process.internal.worker.GradleWorkerMain.run(GradleWorkerMain.java:69)
	at worker.org.gradle.process.internal.worker.GradleWorkerMain.main(GradleWorkerMain.java:74)
]]>
            </full-stacktrace>
          </exception> <!-- java.util.NoSuchElementException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testLastNextNoHidden -->
      </class> <!-- jalview.datamodel.VisibleRowsIteratorTest -->
      <class name="jalview.io.SequenceAnnotationReportTest">
        <test-method is-config="true" signature="setUpJvOptionPane()[pri:0, instance:jalview.io.SequenceAnnotationReportTest@71652c98]" started-at="2023-07-02T10:11:57Z" name="setUpJvOptionPane" finished-at="2023-07-02T10:11:57Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpJvOptionPane -->
        <test-method signature="testAppendFeature_DescEqualsType()[pri:0, instance:jalview.io.SequenceAnnotationReportTest@71652c98]" started-at="2023-07-02T10:11:57Z" name="testAppendFeature_DescEqualsType" finished-at="2023-07-02T10:11:57Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAppendFeature_DescEqualsType -->
        <test-method signature="testAppendFeature_colouredByAttribute()[pri:0, instance:jalview.io.SequenceAnnotationReportTest@71652c98]" started-at="2023-07-02T10:11:57Z" name="testAppendFeature_colouredByAttribute" finished-at="2023-07-02T10:11:57Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAppendFeature_colouredByAttribute -->
        <test-method signature="testAppendFeature_disulfideBond()[pri:0, instance:jalview.io.SequenceAnnotationReportTest@71652c98]" started-at="2023-07-02T10:11:57Z" name="testAppendFeature_disulfideBond" finished-at="2023-07-02T10:11:57Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAppendFeature_disulfideBond -->
        <test-method signature="testAppendFeature_status()[pri:0, instance:jalview.io.SequenceAnnotationReportTest@71652c98]" started-at="2023-07-02T10:11:57Z" name="testAppendFeature_status" finished-at="2023-07-02T10:11:57Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAppendFeature_status -->
        <test-method signature="testAppendFeature_noScore()[pri:0, instance:jalview.io.SequenceAnnotationReportTest@71652c98]" started-at="2023-07-02T10:11:57Z" name="testAppendFeature_noScore" finished-at="2023-07-02T10:11:57Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAppendFeature_noScore -->
        <test-method signature="testAppendFeature_stripHtml()[pri:0, instance:jalview.io.SequenceAnnotationReportTest@71652c98]" started-at="2023-07-02T10:11:57Z" name="testAppendFeature_stripHtml" finished-at="2023-07-02T10:11:57Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAppendFeature_stripHtml -->
        <test-method signature="testAppendFeature_virtualFeature()[pri:0, instance:jalview.io.SequenceAnnotationReportTest@71652c98]" started-at="2023-07-02T10:11:57Z" name="testAppendFeature_virtualFeature" finished-at="2023-07-02T10:11:57Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAppendFeature_virtualFeature -->
        <test-method signature="testAppendFeature_withScore()[pri:0, instance:jalview.io.SequenceAnnotationReportTest@71652c98]" started-at="2023-07-02T10:11:57Z" name="testAppendFeature_withScore" finished-at="2023-07-02T10:11:57Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAppendFeature_withScore -->
        <test-method signature="testAppendFeature_withScoreStatusAttribute()[pri:0, instance:jalview.io.SequenceAnnotationReportTest@71652c98]" started-at="2023-07-02T10:11:57Z" name="testAppendFeature_withScoreStatusAttribute" finished-at="2023-07-02T10:11:57Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAppendFeature_withScoreStatusAttribute -->
        <test-method signature="testAppendFeatures_longText()[pri:0, instance:jalview.io.SequenceAnnotationReportTest@71652c98]" started-at="2023-07-02T10:11:57Z" name="testAppendFeatures_longText" finished-at="2023-07-02T10:11:57Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAppendFeatures_longText -->
        <test-method signature="testCreateSequenceAnnotationReport()[pri:0, instance:jalview.io.SequenceAnnotationReportTest@71652c98]" started-at="2023-07-02T10:11:57Z" name="testCreateSequenceAnnotationReport" finished-at="2023-07-02T10:11:57Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCreateSequenceAnnotationReport -->
        <test-method signature="testCreateSequenceAnnotationReport_withEllipsis()[pri:0, instance:jalview.io.SequenceAnnotationReportTest@71652c98]" started-at="2023-07-02T10:11:57Z" name="testCreateSequenceAnnotationReport_withEllipsis" finished-at="2023-07-02T10:11:57Z" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCreateSequenceAnnotationReport_withEllipsis -->
      </class> <!-- jalview.io.SequenceAnnotationReportTest -->
      <class name="jalview.analysis.scoremodels.ScoreModelsTest">
        <test-method signature="testConstructor()[pri:0, instance:jalview.analysis.scoremodels.ScoreModelsTest@3f2049b6]" started-at="2023-07-02T10:12:21Z" name="testConstructor" finished-at="2023-07-02T10:12:21Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testConstructor -->
      </class> <!-- jalview.analysis.scoremodels.ScoreModelsTest -->
      <class name="jalview.util.MapListTest">
        <test-method signature="testAddMapList_sameMap()[pri:0, instance:jalview.util.MapListTest@27f0ad19]" started-at="2023-07-02T10:12:20Z" name="testAddMapList_sameMap" finished-at="2023-07-02T10:12:20Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAddMapList_sameMap -->
        <test-method is-config="true" signature="setUpJvOptionPane()[pri:0, instance:jalview.util.MapListTest@27f0ad19]" started-at="2023-07-02T10:12:20Z" name="setUpJvOptionPane" finished-at="2023-07-02T10:12:20Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpJvOptionPane -->
        <test-method signature="testAddMapList()[pri:0, instance:jalview.util.MapListTest@27f0ad19]" started-at="2023-07-02T10:12:20Z" name="testAddMapList" finished-at="2023-07-02T10:12:20Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAddMapList -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:jalview.util.MapListTest@27f0ad19]" started-at="2023-07-02T10:12:20Z" name="setUp" finished-at="2023-07-02T10:12:20Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="testAddMapList_contiguous()[pri:0, instance:jalview.util.MapListTest@27f0ad19]" started-at="2023-07-02T10:12:20Z" name="testAddMapList_contiguous" finished-at="2023-07-02T10:12:20Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAddMapList_contiguous -->
        <test-method signature="testConstructor()[pri:0, instance:jalview.util.MapListTest@27f0ad19]" started-at="2023-07-02T10:12:20Z" name="testConstructor" finished-at="2023-07-02T10:12:20Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testConstructor -->
        <test-method signature="testAddOffsetPositions()[pri:0, instance:jalview.util.MapListTest@27f0ad19]" started-at="2023-07-02T10:12:20Z" name="testAddOffsetPositions" finished-at="2023-07-02T10:12:20Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAddOffsetPositions -->
        <test-method signature="testConstructor_mergeRanges()[pri:0, instance:jalview.util.MapListTest@27f0ad19]" started-at="2023-07-02T10:12:20Z" name="testConstructor_mergeRanges" finished-at="2023-07-02T10:12:20Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testConstructor_mergeRanges -->
        <test-method signature="testCoalesceRanges()[pri:0, instance:jalview.util.MapListTest@27f0ad19]" started-at="2023-07-02T10:12:20Z" name="testCoalesceRanges" finished-at="2023-07-02T10:12:20Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCoalesceRanges -->
        <test-method signature="testAddRange()[pri:0, instance:jalview.util.MapListTest@27f0ad19]" started-at="2023-07-02T10:12:20Z" name="testAddRange" finished-at="2023-07-02T10:12:20Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAddRange -->
        <test-method signature="testEquals()[pri:0, instance:jalview.util.MapListTest@27f0ad19]" started-at="2023-07-02T10:12:20Z" name="testEquals" finished-at="2023-07-02T10:12:20Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testEquals -->
        <test-method signature="testConstructor_withLists()[pri:0, instance:jalview.util.MapListTest@27f0ad19]" started-at="2023-07-02T10:12:20Z" name="testConstructor_withLists" finished-at="2023-07-02T10:12:20Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testConstructor_withLists -->
        <test-method signature="testCountPositions()[pri:0, instance:jalview.util.MapListTest@27f0ad19]" started-at="2023-07-02T10:12:20Z" name="testCountPositions" finished-at="2023-07-02T10:12:20Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCountPositions -->
        <test-method signature="testGetMappedOffsetsForPositions()[pri:0, instance:jalview.util.MapListTest@27f0ad19]" started-at="2023-07-02T10:12:20Z" name="testGetMappedOffsetsForPositions" finished-at="2023-07-02T10:12:20Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetMappedOffsetsForPositions -->
        <test-method signature="testGetInverse()[pri:0, instance:jalview.util.MapListTest@27f0ad19]" started-at="2023-07-02T10:12:20Z" name="testGetInverse" finished-at="2023-07-02T10:12:20Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetInverse -->
        <test-method signature="testGetOverlapsInTo_withIntrons()[pri:0, instance:jalview.util.MapListTest@27f0ad19]" started-at="2023-07-02T10:12:20Z" name="testGetOverlapsInTo_withIntrons" finished-at="2023-07-02T10:12:20Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetOverlapsInTo_withIntrons -->
        <test-method signature="testGetOverlapsInFrom_withIntrons()[pri:0, instance:jalview.util.MapListTest@27f0ad19]" started-at="2023-07-02T10:12:20Z" name="testGetOverlapsInFrom_withIntrons" finished-at="2023-07-02T10:12:20Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetOverlapsInFrom_withIntrons -->
        <test-method signature="testGetRanges()[pri:0, instance:jalview.util.MapListTest@27f0ad19]" started-at="2023-07-02T10:12:20Z" name="testGetRanges" finished-at="2023-07-02T10:12:20Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetRanges -->
        <test-method signature="testGetPositionsForOffsets()[pri:0, instance:jalview.util.MapListTest@27f0ad19]" started-at="2023-07-02T10:12:20Z" name="testGetPositionsForOffsets" finished-at="2023-07-02T10:12:20Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetPositionsForOffsets -->
        <test-method signature="testIsToForwardsStrand()[pri:0, instance:jalview.util.MapListTest@27f0ad19]" started-at="2023-07-02T10:12:20Z" name="testIsToForwardsStrand" finished-at="2023-07-02T10:12:20Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testIsToForwardsStrand -->
        <test-method signature="testIsFromForwardStrand()[pri:0, instance:jalview.util.MapListTest@27f0ad19]" started-at="2023-07-02T10:12:20Z" name="testIsFromForwardStrand" finished-at="2023-07-02T10:12:20Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testIsFromForwardStrand -->
        <test-method signature="testLocateInFrom_noIntrons()[pri:0, instance:jalview.util.MapListTest@27f0ad19]" started-at="2023-07-02T10:12:20Z" name="testLocateInFrom_noIntrons" finished-at="2023-07-02T10:12:20Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testLocateInFrom_noIntrons -->
        <test-method signature="testLocateInTo_noIntrons()[pri:0, instance:jalview.util.MapListTest@27f0ad19]" started-at="2023-07-02T10:12:20Z" name="testLocateInTo_noIntrons" finished-at="2023-07-02T10:12:20Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testLocateInTo_noIntrons -->
        <test-method signature="testLocateInFrom_reverseStrand()[pri:0, instance:jalview.util.MapListTest@27f0ad19]" started-at="2023-07-02T10:12:20Z" name="testLocateInFrom_reverseStrand" finished-at="2023-07-02T10:12:20Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testLocateInFrom_reverseStrand -->
        <test-method signature="testLocateInFrom_withOverlap()[pri:0, instance:jalview.util.MapListTest@27f0ad19]" started-at="2023-07-02T10:12:20Z" name="testLocateInFrom_withOverlap" finished-at="2023-07-02T10:12:20Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testLocateInFrom_withOverlap -->
        <test-method signature="testLocateInFrom_withIntrons()[pri:0, instance:jalview.util.MapListTest@27f0ad19]" started-at="2023-07-02T10:12:20Z" name="testLocateInFrom_withIntrons" finished-at="2023-07-02T10:12:20Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testLocateInFrom_withIntrons -->
        <test-method signature="testLocateInTo_withIntrons()[pri:0, instance:jalview.util.MapListTest@27f0ad19]" started-at="2023-07-02T10:12:20Z" name="testLocateInTo_withIntrons" finished-at="2023-07-02T10:12:20Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testLocateInTo_withIntrons -->
        <test-method signature="testLocateInTo_withOverlap()[pri:0, instance:jalview.util.MapListTest@27f0ad19]" started-at="2023-07-02T10:12:20Z" name="testLocateInTo_withOverlap" finished-at="2023-07-02T10:12:20Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testLocateInTo_withOverlap -->
        <test-method signature="testToString()[pri:0, instance:jalview.util.MapListTest@27f0ad19]" started-at="2023-07-02T10:12:20Z" name="testToString" finished-at="2023-07-02T10:12:20Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testToString -->
        <test-method signature="testTraverse()[pri:0, instance:jalview.util.MapListTest@27f0ad19]" started-at="2023-07-02T10:12:20Z" name="testTraverse" finished-at="2023-07-02T10:12:20Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testTraverse -->
        <test-method signature="testTraverseToPosition()[pri:0, instance:jalview.util.MapListTest@27f0ad19]" started-at="2023-07-02T10:12:20Z" name="testTraverseToPosition" finished-at="2023-07-02T10:12:20Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testTraverseToPosition -->
      </class> <!-- jalview.util.MapListTest -->
      <class name="jalview.gui.AlignFrameTest">
        <test-method is-config="true" signature="setUpBeforeClass()[pri:0, instance:jalview.gui.AlignFrameTest@f325091]" started-at="2023-07-02T10:11:55Z" name="setUpBeforeClass" finished-at="2023-07-02T10:11:55Z" duration-ms="78" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpBeforeClass -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:jalview.gui.AlignFrameTest@f325091]" started-at="2023-07-02T10:11:55Z" name="setUp" finished-at="2023-07-02T10:11:55Z" duration-ms="203" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="testChangeColour_background_groupsAndThresholds()[pri:0, instance:jalview.gui.AlignFrameTest@f325091]" started-at="2023-07-02T10:11:55Z" name="testChangeColour_background_groupsAndThresholds" finished-at="2023-07-02T10:11:55Z" duration-ms="49" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testChangeColour_background_groupsAndThresholds -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:jalview.gui.AlignFrameTest@f325091]" started-at="2023-07-02T10:11:55Z" name="tearDown" finished-at="2023-07-02T10:11:55Z" duration-ms="5" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:jalview.gui.AlignFrameTest@f325091]" started-at="2023-07-02T10:11:55Z" name="setUp" finished-at="2023-07-02T10:11:55Z" duration-ms="73" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="testColourThresholdActions()[pri:0, instance:jalview.gui.AlignFrameTest@f325091]" started-at="2023-07-02T10:11:55Z" name="testColourThresholdActions" finished-at="2023-07-02T10:11:55Z" duration-ms="144" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testColourThresholdActions -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:jalview.gui.AlignFrameTest@f325091]" started-at="2023-07-02T10:11:55Z" name="tearDown" finished-at="2023-07-02T10:11:55Z" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:jalview.gui.AlignFrameTest@f325091]" started-at="2023-07-02T10:11:55Z" name="setUp" finished-at="2023-07-02T10:11:55Z" duration-ms="77" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="testHideFeatureColumns()[pri:0, instance:jalview.gui.AlignFrameTest@f325091]" started-at="2023-07-02T10:11:55Z" name="testHideFeatureColumns" finished-at="2023-07-02T10:11:55Z" duration-ms="19" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testHideFeatureColumns -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:jalview.gui.AlignFrameTest@f325091]" started-at="2023-07-02T10:11:55Z" name="tearDown" finished-at="2023-07-02T10:11:55Z" duration-ms="3" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:jalview.gui.AlignFrameTest@f325091]" started-at="2023-07-02T10:11:55Z" name="setUp" finished-at="2023-07-02T10:11:55Z" duration-ms="72" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="testNewView_colourThresholds()[pri:0, instance:jalview.gui.AlignFrameTest@f325091]" started-at="2023-07-02T10:11:55Z" name="testNewView_colourThresholds" finished-at="2023-07-02T10:11:56Z" duration-ms="247" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testNewView_colourThresholds -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:jalview.gui.AlignFrameTest@f325091]" started-at="2023-07-02T10:11:56Z" name="tearDown" finished-at="2023-07-02T10:11:56Z" duration-ms="7" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:jalview.gui.AlignFrameTest@f325091]" started-at="2023-07-02T10:11:56Z" name="setUp" finished-at="2023-07-02T10:11:56Z" duration-ms="78" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="testNewView_dsRefPreserved()[pri:0, instance:jalview.gui.AlignFrameTest@f325091]" started-at="2023-07-02T10:11:56Z" name="testNewView_dsRefPreserved" finished-at="2023-07-02T10:11:56Z" duration-ms="39" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testNewView_dsRefPreserved -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:jalview.gui.AlignFrameTest@f325091]" started-at="2023-07-02T10:11:56Z" name="tearDown" finished-at="2023-07-02T10:11:56Z" duration-ms="5" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- jalview.gui.AlignFrameTest -->
      <class name="jalview.io.JSONFileTest">
        <test-method is-config="true" signature="setUpJvOptionPane()[pri:0, instance:jalview.io.JSONFileTest@54336c81]" started-at="2023-07-02T10:11:41Z" name="setUpJvOptionPane" finished-at="2023-07-02T10:11:41Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpJvOptionPane -->
        <test-method is-config="true" signature="methodSetup()[pri:0, instance:jalview.io.JSONFileTest@54336c81]" started-at="2023-07-02T10:11:41Z" name="methodSetup" finished-at="2023-07-02T10:11:41Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- methodSetup -->
        <test-method signature="colorSchemeTest()[pri:0, instance:jalview.io.JSONFileTest@54336c81]" started-at="2023-07-02T10:11:41Z" name="colorSchemeTest" finished-at="2023-07-02T10:11:41Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- colorSchemeTest -->
        <test-method is-config="true" signature="methodSetup()[pri:0, instance:jalview.io.JSONFileTest@54336c81]" started-at="2023-07-02T10:11:41Z" name="methodSetup" finished-at="2023-07-02T10:11:41Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- methodSetup -->
        <test-method signature="hiddenColsTest()[pri:0, instance:jalview.io.JSONFileTest@54336c81]" started-at="2023-07-02T10:11:41Z" name="hiddenColsTest" finished-at="2023-07-02T10:11:41Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- hiddenColsTest -->
        <test-method signature="isShowSeqFeaturesSet()[pri:0, instance:jalview.io.JSONFileTest@54336c81]" started-at="2023-07-02T10:11:41Z" name="isShowSeqFeaturesSet" finished-at="2023-07-02T10:11:41Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- isShowSeqFeaturesSet -->
        <test-method is-config="true" signature="methodSetup()[pri:0, instance:jalview.io.JSONFileTest@54336c81]" started-at="2023-07-02T10:11:41Z" name="methodSetup" finished-at="2023-07-02T10:11:41Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- methodSetup -->
        <test-method is-config="true" signature="methodSetup()[pri:0, instance:jalview.io.JSONFileTest@54336c81]" started-at="2023-07-02T10:11:41Z" name="methodSetup" finished-at="2023-07-02T10:11:41Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- methodSetup -->
        <test-method signature="hiddenSeqsTest()[pri:0, instance:jalview.io.JSONFileTest@54336c81]" started-at="2023-07-02T10:11:41Z" name="hiddenSeqsTest" finished-at="2023-07-02T10:11:41Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- hiddenSeqsTest -->
        <test-method signature="roundTripTest()[pri:0, instance:jalview.io.JSONFileTest@54336c81]" started-at="2023-07-02T10:11:41Z" name="roundTripTest" finished-at="2023-07-02T10:11:41Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- roundTripTest -->
        <test-method is-config="true" signature="methodSetup()[pri:0, instance:jalview.io.JSONFileTest@54336c81]" started-at="2023-07-02T10:11:41Z" name="methodSetup" finished-at="2023-07-02T10:11:41Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- methodSetup -->
        <test-method is-config="true" signature="methodSetup()[pri:0, instance:jalview.io.JSONFileTest@54336c81]" started-at="2023-07-02T10:11:41Z" name="methodSetup" finished-at="2023-07-02T10:11:41Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- methodSetup -->
        <test-method is-config="true" signature="methodSetup()[pri:0, instance:jalview.io.JSONFileTest@54336c81]" started-at="2023-07-02T10:11:41Z" name="methodSetup" finished-at="2023-07-02T10:11:41Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- methodSetup -->
        <test-method signature="testAnnotationParsed()[pri:0, instance:jalview.io.JSONFileTest@54336c81]" started-at="2023-07-02T10:11:41Z" name="testAnnotationParsed" finished-at="2023-07-02T10:11:41Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAnnotationParsed -->
        <test-method signature="testBioJSONRoundTripWithColourSchemeNone()[pri:0, instance:jalview.io.JSONFileTest@54336c81]" started-at="2023-07-02T10:11:41Z" name="testBioJSONRoundTripWithColourSchemeNone" finished-at="2023-07-02T10:11:41Z" duration-ms="30" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testBioJSONRoundTripWithColourSchemeNone -->
        <test-method is-config="true" signature="methodSetup()[pri:0, instance:jalview.io.JSONFileTest@54336c81]" started-at="2023-07-02T10:11:41Z" name="methodSetup" finished-at="2023-07-02T10:11:41Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- methodSetup -->
        <test-method signature="testGrpParsed()[pri:0, instance:jalview.io.JSONFileTest@54336c81]" started-at="2023-07-02T10:11:41Z" name="testGrpParsed" finished-at="2023-07-02T10:11:41Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGrpParsed -->
        <test-method is-config="true" signature="methodSetup()[pri:0, instance:jalview.io.JSONFileTest@54336c81]" started-at="2023-07-02T10:11:41Z" name="methodSetup" finished-at="2023-07-02T10:11:41Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- methodSetup -->
        <test-method signature="testGrpParsed_colourNone()[pri:0, instance:jalview.io.JSONFileTest@54336c81]" started-at="2023-07-02T10:11:41Z" name="testGrpParsed_colourNone" finished-at="2023-07-02T10:11:41Z" duration-ms="24" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGrpParsed_colourNone -->
        <test-method signature="testSeqParsed()[pri:0, instance:jalview.io.JSONFileTest@54336c81]" started-at="2023-07-02T10:11:41Z" name="testSeqParsed" finished-at="2023-07-02T10:11:41Z" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSeqParsed -->
        <test-method is-config="true" signature="methodSetup()[pri:0, instance:jalview.io.JSONFileTest@54336c81]" started-at="2023-07-02T10:11:41Z" name="methodSetup" finished-at="2023-07-02T10:11:41Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- methodSetup -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:jalview.io.JSONFileTest@54336c81]" started-at="2023-07-02T10:13:44Z" name="tearDown" finished-at="2023-07-02T10:13:44Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="cleanUpSiftsClient()[pri:0, instance:jalview.ws.sifts.SiftsClientTest@62df0ff3]" started-at="2023-07-02T10:13:44Z" name="cleanUpSiftsClient" finished-at="2023-07-02T10:13:44Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cleanUpSiftsClient -->
      </class> <!-- jalview.io.JSONFileTest -->
      <class name="jalview.io.vcf.VCFLoaderTest">
        <test-method is-config="true" signature="setUp()[pri:0, instance:jalview.io.vcf.VCFLoaderTest@17ae98d7]" started-at="2023-07-02T10:12:20Z" name="setUp" finished-at="2023-07-02T10:12:20Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="testDoLoad()[pri:0, instance:jalview.io.vcf.VCFLoaderTest@17ae98d7]" started-at="2023-07-02T10:12:20Z" name="testDoLoad" finished-at="2023-07-02T10:12:20Z" duration-ms="50" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testDoLoad -->
        <test-method signature="testDoLoad_reverseStrand()[pri:0, instance:jalview.io.vcf.VCFLoaderTest@17ae98d7]" started-at="2023-07-02T10:12:20Z" name="testDoLoad_reverseStrand" finished-at="2023-07-02T10:12:20Z" duration-ms="31" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testDoLoad_reverseStrand -->
        <test-method signature="testDoLoad_vepCsq()[pri:0, instance:jalview.io.vcf.VCFLoaderTest@17ae98d7]" started-at="2023-07-02T10:12:20Z" name="testDoLoad_vepCsq" finished-at="2023-07-02T10:12:20Z" duration-ms="65" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testDoLoad_vepCsq -->
        <test-method signature="testLoadVCFContig()[pri:0, instance:jalview.io.vcf.VCFLoaderTest@17ae98d7]" started-at="2023-07-02T10:12:20Z" name="testLoadVCFContig" finished-at="2023-07-02T10:12:20Z" duration-ms="9" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testLoadVCFContig -->
      </class> <!-- jalview.io.vcf.VCFLoaderTest -->
      <class name="mc_view.PDBfileTest">
        <test-method is-config="true" signature="setUpJvOptionPane()[pri:0, instance:mc_view.PDBfileTest@515f4131]" started-at="2023-07-02T10:11:44Z" name="setUpJvOptionPane" finished-at="2023-07-02T10:11:44Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpJvOptionPane -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:mc_view.PDBfileTest@515f4131]" started-at="2023-07-02T10:11:44Z" name="setUp" finished-at="2023-07-02T10:11:44Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="testIsRna()[pri:0, instance:mc_view.PDBfileTest@515f4131]" started-at="2023-07-02T10:11:44Z" name="testIsRna" finished-at="2023-07-02T10:11:44Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testIsRna -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:mc_view.PDBfileTest@515f4131]" started-at="2023-07-02T10:11:44Z" name="setUp" finished-at="2023-07-02T10:11:44Z" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="testParse()[pri:0, instance:mc_view.PDBfileTest@515f4131]" started-at="2023-07-02T10:11:44Z" name="testParse" finished-at="2023-07-02T10:11:44Z" duration-ms="12" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testParse -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:mc_view.PDBfileTest@515f4131]" started-at="2023-07-02T10:11:44Z" name="setUp" finished-at="2023-07-02T10:11:44Z" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="testParse_withAnnotations_noSS()[pri:0, instance:mc_view.PDBfileTest@515f4131]" started-at="2023-07-02T10:11:44Z" name="testParse_withAnnotations_noSS" finished-at="2023-07-02T10:11:44Z" duration-ms="11" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testParse_withAnnotations_noSS -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:mc_view.PDBfileTest@515f4131]" started-at="2023-07-02T10:11:44Z" name="setUp" finished-at="2023-07-02T10:11:44Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="testParse_withJmolAddAlignmentAnnotations()[pri:0, instance:mc_view.PDBfileTest@515f4131]" started-at="2023-07-02T10:11:44Z" name="testParse_withJmolAddAlignmentAnnotations" finished-at="2023-07-02T10:11:45Z" duration-ms="320" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testParse_withJmolAddAlignmentAnnotations -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:mc_view.PDBfileTest@515f4131]" started-at="2023-07-02T10:11:45Z" name="setUp" finished-at="2023-07-02T10:11:45Z" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="testParse_withJmol_noAnnotations()[pri:0, instance:mc_view.PDBfileTest@515f4131]" started-at="2023-07-02T10:11:45Z" name="testParse_withJmol_noAnnotations" finished-at="2023-07-02T10:11:45Z" duration-ms="386" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testParse_withJmol_noAnnotations -->
      </class> <!-- mc_view.PDBfileTest -->
      <class name="jalview.ws.seqfetcher.DbRefFetcherTest">
        <test-method is-config="true" signature="setUpBeforeClass()[pri:0, instance:jalview.ws.seqfetcher.DbRefFetcherTest@1162410a]" started-at="2023-07-02T10:11:41Z" name="setUpBeforeClass" finished-at="2023-07-02T10:11:41Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpBeforeClass -->
        <test-method is-config="true" signature="setUpJvOptionPane()[pri:0, instance:jalview.ws.seqfetcher.DbRefFetcherTest@1162410a]" started-at="2023-07-02T10:11:41Z" name="setUpJvOptionPane" finished-at="2023-07-02T10:11:41Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpJvOptionPane -->
        <test-method signature="testStandardProtDbs()[pri:0, instance:jalview.ws.seqfetcher.DbRefFetcherTest@1162410a]" started-at="2023-07-02T10:11:41Z" name="testStandardProtDbs" finished-at="2023-07-02T10:11:41Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testStandardProtDbs -->
        <test-method is-config="true" signature="tearDownAfterClass()[pri:0, instance:jalview.ws.seqfetcher.DbRefFetcherTest@1162410a]" started-at="2023-07-02T10:11:41Z" name="tearDownAfterClass" finished-at="2023-07-02T10:11:41Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownAfterClass -->
      </class> <!-- jalview.ws.seqfetcher.DbRefFetcherTest -->
      <class name="jalview.ext.pymol.PymolManagerTest">
        <test-method signature="testGetPostRequest()[pri:0, instance:jalview.ext.pymol.PymolManagerTest@28fa700e]" started-at="2023-07-02T10:11:41Z" name="testGetPostRequest" finished-at="2023-07-02T10:11:41Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetPostRequest -->
        <test-method signature="testGetPymolPaths()[pri:0, instance:jalview.ext.pymol.PymolManagerTest@28fa700e]" started-at="2023-07-02T10:11:41Z" name="testGetPymolPaths" finished-at="2023-07-02T10:11:41Z" duration-ms="3" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetPymolPaths -->
      </class> <!-- jalview.ext.pymol.PymolManagerTest -->
      <class name="jalview.io.CrossRef2xmlTests">
        <test-method is-config="true" signature="setUpBeforeClass()[pri:0, instance:jalview.io.CrossRef2xmlTests@1c05a54d]" started-at="2023-07-02T10:12:10Z" name="setUpBeforeClass" finished-at="2023-07-02T10:12:11Z" duration-ms="86" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpBeforeClass -->
        <test-method is-config="true" signature="setUpJvOptionPane()[pri:0, instance:jalview.io.CrossRef2xmlTests@1c05a54d]" started-at="2023-07-02T10:12:11Z" name="setUpJvOptionPane" finished-at="2023-07-02T10:12:11Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpJvOptionPane -->
        <test-method signature="openCrossrefsForEnsemblTwice()[pri:0, instance:jalview.io.CrossRef2xmlTests@1c05a54d]" started-at="2023-07-02T10:12:11Z" name="openCrossrefsForEnsemblTwice" finished-at="2023-07-02T10:12:18Z" duration-ms="7674" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- openCrossrefsForEnsemblTwice -->
        <test-method is-config="true" signature="tearDownAfterClass()[pri:0, instance:jalview.io.CrossRef2xmlTests@1c05a54d]" started-at="2023-07-02T10:12:18Z" name="tearDownAfterClass" finished-at="2023-07-02T10:12:18Z" duration-ms="54" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownAfterClass -->
      </class> <!-- jalview.io.CrossRef2xmlTests -->
      <class name="jalview.datamodel.MappedFeaturesTest">
        <test-method signature="testFindProteinVariants()[pri:0, instance:jalview.datamodel.MappedFeaturesTest@619bd14c]" started-at="2023-07-02T10:11:53Z" name="testFindProteinVariants" finished-at="2023-07-02T10:11:53Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFindProteinVariants -->
      </class> <!-- jalview.datamodel.MappedFeaturesTest -->
      <class name="jalview.io.gff.SequenceOntologyLiteTest">
        <test-method signature="testIsA_sequenceVariant()[pri:0, instance:jalview.io.gff.SequenceOntologyLiteTest@24528a25]" started-at="2023-07-02T10:12:18Z" name="testIsA_sequenceVariant" finished-at="2023-07-02T10:12:18Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testIsA_sequenceVariant -->
      </class> <!-- jalview.io.gff.SequenceOntologyLiteTest -->
      <class name="jalview.datamodel.HiddenColumnsCursorTest">
        <test-method signature="testConstructor()[pri:0, instance:jalview.datamodel.HiddenColumnsCursorTest@1deb2c43]" started-at="2023-07-02T10:11:41Z" name="testConstructor" finished-at="2023-07-02T10:11:41Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testConstructor -->
        <test-method signature="testFindRegionForColumn_Visible()[pri:0, instance:jalview.datamodel.HiddenColumnsCursorTest@1deb2c43]" started-at="2023-07-02T10:11:41Z" name="testFindRegionForColumn_Visible" finished-at="2023-07-02T10:11:41Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFindRegionForColumn_Visible -->
        <test-method signature="testFindRegionForColumn()[pri:0, instance:jalview.datamodel.HiddenColumnsCursorTest@1deb2c43]" started-at="2023-07-02T10:11:41Z" name="testFindRegionForColumn" finished-at="2023-07-02T10:11:41Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFindRegionForColumn -->
      </class> <!-- jalview.datamodel.HiddenColumnsCursorTest -->
      <class name="jalview.schemes.HydrophobicColourSchemeTest">
        <test-method signature="testFindColour()[pri:0, instance:jalview.schemes.HydrophobicColourSchemeTest@126be319]" started-at="2023-07-02T10:12:07Z" name="testFindColour" finished-at="2023-07-02T10:12:07Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFindColour -->
      </class> <!-- jalview.schemes.HydrophobicColourSchemeTest -->
      <class name="jalview.bin.CacheTest">
        <test-method is-config="true" signature="setUpJvOptionPane()[pri:0, instance:jalview.bin.CacheTest@ea27e34]" started-at="2023-07-02T10:12:21Z" name="setUpJvOptionPane" finished-at="2023-07-02T10:12:21Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpJvOptionPane -->
        <test-method is-config="true" signature="setUpBeforeClass()[pri:0, instance:jalview.bin.CacheTest@ea27e34]" started-at="2023-07-02T10:12:21Z" name="setUpBeforeClass" finished-at="2023-07-02T10:12:21Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpBeforeClass -->
        <test-method signature="testVersionChecker()[pri:0, instance:jalview.bin.CacheTest@ea27e34]" started-at="2023-07-02T10:12:21Z" name="testVersionChecker" finished-at="2023-07-02T10:12:31Z" duration-ms="10002" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testVersionChecker -->
        <test-method signature="testSetDateProperty()[pri:0, instance:jalview.bin.CacheTest@ea27e34]" started-at="2023-07-02T10:12:21Z" name="testSetDateProperty" finished-at="2023-07-02T10:12:21Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSetDateProperty -->
        <test-method is-config="true" signature="tearDownAfterClass()[pri:0, instance:jalview.bin.CacheTest@ea27e34]" started-at="2023-07-02T10:12:31Z" name="tearDownAfterClass" finished-at="2023-07-02T10:12:31Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownAfterClass -->
      </class> <!-- jalview.bin.CacheTest -->
      <class name="jalview.urls.IdentifiersUrlProviderTest">
        <test-method is-config="true" signature="setup()[pri:0, instance:jalview.urls.IdentifiersUrlProviderTest@5987e932]" started-at="2023-07-02T10:11:59Z" name="setup" finished-at="2023-07-02T10:11:59Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="testDefaultUrl()[pri:0, instance:jalview.urls.IdentifiersUrlProviderTest@5987e932]" started-at="2023-07-02T10:11:59Z" name="testDefaultUrl" finished-at="2023-07-02T10:11:59Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testDefaultUrl -->
        <test-method signature="testUrlLinks()[pri:0, instance:jalview.urls.IdentifiersUrlProviderTest@5987e932]" started-at="2023-07-02T10:11:59Z" name="testUrlLinks" finished-at="2023-07-02T10:11:59Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testUrlLinks -->
      </class> <!-- jalview.urls.IdentifiersUrlProviderTest -->
    </test> <!-- Gradle test -->
  </suite> <!-- Gradle suite -->
</testng-results>
